{"version":3,"sources":["../../../lib/evals.js"],"names":["CACHE","fneval","obj","key","eval","err","undefined","cacheeval","rkey","replace","rx","fn","test","call","EVALS","v","iteval","arr","split","forEach","ceval","valwalk","src","ops","path","k","newpath","rop","module","exports"],"mappings":";;;;AAAA,IAAMA,QAAQ,EAAd;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACtB,QAAI;AACA,eAAOC,KAAK,UAAUD,GAAf,CAAP;AACH,KAFD,CAEE,OAAOE,GAAP,EAAY;AACV,eAAOC,SAAP;AACH;AACJ;;AAED,SAASC,SAAT,CAAmBL,GAAnB,EAAuBC,GAAvB,EAA4B;AACxB,QAAG,CAACH,MAAMG,GAAN,CAAJ,EAAgB;AACZ,YAAIK,OAAOL,IAAIM,OAAJ,CAAY,IAAZ,EAAiB,KAAjB,CAAX;AACA,YAAIC,KAAK,cAAT;AACA,YAAIC,KAAKP,iFAEKI,IAFL,kCAEsCA,IAFtC,+BAEoEA,IAFpE,8GAKYL,GALZ,yMAWiBO,GAAGE,IAAH,CAAQT,GAAR,IAAcA,GAAd,GAAkB,OAXnC,kDAYsBA,GAZtB,qFAAT;AAgBAH,cAAMG,GAAN,IAAaQ,EAAb;AACH;AACD,WAAOX,MAAMG,GAAN,EAAWU,IAAX,CAAgBX,GAAhB,CAAP;AACH;;AAED,IAAMY,QAAQ;AACVV,QADU,iBACLF,GADK,EACDC,GADC,EACI;AACV,YAAIY,IAAId,OAAOY,IAAP,CAAYX,GAAZ,EAAgBA,GAAhB,EAAoBC,GAApB,CAAR;AACA,eAAOY,MAAIT,SAAJ,GAAe,EAAf,GAAoBS,CAA3B;AACH,KAJS;AAKVC,UALU,kBAKHd,GALG,EAKCC,GALD,EAKM;AACZ,YAAIc,MAAMd,IAAIe,KAAJ,CAAU,GAAV,CAAV;AACAD,YAAIE,OAAJ,CAAY,eAAK;AACb,gBAAGjB,OAAK,IAAL,IAAaA,OAAKI,SAArB,EAAgC,OAAhC,KACKJ,MAAMA,IAAIC,GAAJ,CAAN;AACR,SAHD;;AAKA,YAAIY,IAAIb,OAAOI,SAAf;AACA,eAAOS,MAAIT,SAAJ,GAAe,EAAf,GAAoBS,CAA3B;AACH,KAdS;AAeVK,SAfU,iBAeJlB,GAfI,EAeAC,GAfA,EAeK;AACX,YAAIY,IAAIR,UAAUL,GAAV,EAAcC,GAAd,CAAR;AACA,eAAOY,MAAIT,SAAJ,GAAe,EAAf,GAAoBS,CAA3B;AACH,KAlBS;AAmBVM,WAnBU,mBAmBFC,GAnBE,EAmBEC,GAnBF,EAmBMC,IAnBN,EAmBY;AAClB,YAAG,CAACF,GAAJ,EAAS,OAAOA,GAAP;AACT,aAAI,IAAIG,CAAR,IAAaH,GAAb,EAAkB;AACd,gBAAII,eAAaF,IAAb,IAAoBA,OAAK,GAAL,GAAS,EAA7B,IAAkCC,CAAtC;AACA,gBAAIE,MAAMJ,IAAIG,OAAJ,CAAV;AACA,gBAAGC,QAAMrB,SAAT,EACIgB,IAAIG,CAAJ,IAASE,GAAT,CADJ,KAEK,IAAG,QAAOL,IAAIG,CAAJ,CAAP,KAAgB,QAAnB,EACDX,MAAMO,OAAN,CAAcC,IAAIG,CAAJ,CAAd,EAAqBF,GAArB,EAAyBG,OAAzB;AACP;AACD,eAAOJ,GAAP;AACH;AA9BS,CAAd;;AAiCAM,OAAOC,OAAP,GAAiBf,KAAjB","file":"evals.js","sourcesContent":["const CACHE = {}\r\n\r\nfunction fneval(obj, key) {\r\n    try {\r\n        return eval(\"this.\" + key);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nfunction cacheeval(obj,key) {\r\n    if(!CACHE[key]) {\r\n        let rkey = key.replace(/'/g,\"\\\\'\");\r\n        let rx = /^[a-zA-Z$_@]/;\r\n        let fn = eval(`(function(){\r\n            let rx = /^[a-zA-Z$_]/;\r\n            return '${rkey}'.startsWith('this.') || '${rkey}'=='this' || !rx.test('${rkey}')?\r\n                function() {\r\n                    let r = undefined;\r\n                    try {r=${key};}\r\n                    catch(err){}\r\n                    return r;\r\n                } :\r\n                function() {\r\n                    let r = undefined;\r\n                    try {r=this.${rx.test(key)? key:'$___$'};}\r\n                    catch(err){try{r=${key};}catch(err){}}\r\n                    return r;\r\n                }\r\n        })()`);\r\n        CACHE[key] = fn;\r\n    }\r\n    return CACHE[key].call(obj);\r\n}\r\n\r\nconst EVALS = {\r\n    eval(obj,key) {\r\n        let v = fneval.call(obj,obj,key);\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    iteval(obj,key) {\r\n        var arr = key.split(\".\");\r\n        arr.forEach(key=>{\r\n            if(obj==null || obj==undefined) return;\r\n            else obj = obj[key];\r\n        });\r\n\r\n        let v = obj || undefined;\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    ceval(obj,key) {\r\n        let v = cacheeval(obj,key);\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    valwalk(src,ops,path) {\r\n        if(!src) return src;\r\n        for(let k in src) {\r\n            let newpath = `${path}${path?'.':''}${k}`;\r\n            let rop = ops[newpath];\r\n            if(rop!==undefined)\r\n                src[k] = rop;\r\n            else if(typeof(src[k])==\"object\")\r\n                EVALS.valwalk(src[k],ops,newpath);\r\n        };\r\n        return src;\r\n    }\r\n}\r\n\r\nmodule.exports = EVALS;\r\n"]}