{"version":3,"sources":["../../../lib/expression.js"],"names":["extend","require","instance","token","RX","RegExp","RX_RPL_PARSE","RX_RPL_TOKEN","RX_JSON_TOKEN","CACHE","cacheeval","obj","key","fn","eval","call","fneval","err","undefined","fnassign","path","EVALS","v","iteval","arr","split","forEach","ceval","valwalk","src","ops","k","newpath","rop","parse","expr","method","m","match","replace","trim","Function","entry","tokens","test","parts","nexpr","spaces","length","isNaN","parseInt","fnxpr","JSON","stringify","list","len","idx","indexOf","t","substring","rtoken","push","filter","l","ret","i","jsontokens","json","walk","Object","keys","map","op","exprfn","input","assign","expression","module","exports"],"mappings":"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","file":"expression.js","sourcesContent":["const extend = require(\"extend\");\n\nfunction instance(token) {\n\tconst RX = new RegExp(`\\\\${token}\\\\{[^\\\\}]+\\\\}`,'g');\t\t\t\t\t// /\\$\\{[^\\}]+\\}/g;\n\tconst RX_RPL_PARSE = new RegExp(`\\\\${token}\\\\{([^\\\\}]+)\\\\}`);\t// /\\$\\{([^\\}]+)\\}/;\n\tconst RX_RPL_TOKEN = new RegExp(`\\\\${token}\\\\{|\\\\}`,'g');\t\t\t\t\t// /\\$\\{|\\}/g;\n\tconst RX_JSON_TOKEN = new RegExp(`^\\\\${token}\\\\{JSON(:(\\\\d+|([^:]+(:(\\\\d+))?)))?\\\\}$`);\n\tconst CACHE = {}\n\n\tfunction cacheeval(obj,key) {\n\t\tif(!CACHE[key]) {\n\t\t\tlet fn = eval(`(function(){\n\t\t\t\treturn '${key}'!='this'?\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tlet r = undefined;\n\t\t\t\t\t\ttry {r=this.${key};}\n\t\t\t\t\t\tcatch(err){try{r=${key};}catch(err){}}\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t} :\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tlet r = undefined;\n\t\t\t\t\t\ttry {r=${key};}\n\t\t\t\t\t\tcatch(err){}\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t})()`);\n\t\t\tCACHE[key] = fn;\n\t\t}\n\t\treturn CACHE[key].call(obj);\n\t}\n\n\tfunction fneval(obj, key) {\n\t\ttry {\n\t\t\treturn eval(\"this.\" + key);\n\t\t} catch (err) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tfunction fnassign(path) {\n\t\treturn eval(`(function(){\n\t\t\treturn function(obj,val) {\n\t\t\t\ttry {\n\t\t\t\t\treturn obj.${path} = val;\n\t\t\t\t}catch(err) {}\n\t\t\t}\n\t\t})()`);\n\t}\n\n\tconst EVALS = {\n\t\teval(obj,key) {\n\t\t\tlet v = fneval.call(obj,obj,key);\n\t\t\treturn v===undefined? \"\" : v;\n\t\t},\n\t\titeval(obj,key) {\n\t\t\tvar arr = key.split(\".\");\n\t\t\tarr.forEach(key=>{\n\t\t\t\tif(obj==null || obj==undefined) return;\n\t\t\t\telse obj = obj[key];\n\t\t\t});\n\n\t\t\tlet v = obj || undefined;\n\t\t\treturn v===undefined? \"\" : v;\n\t\t},\n\t\tceval(obj,key) {\n\t\t\tlet v = cacheeval(obj,key);\n\t\t\treturn v===undefined? \"\" : v;\n\t\t},\n\t\tvalwalk(src,ops,path) {\n\t\t\tif(!src) return src;\n\t\t\tfor(let k in src) {\n\t\t\t\tlet newpath = `${path}${path?'.':''}${k}`;\n\t\t\t\tlet rop = ops[newpath];\n\t\t\t\tif(rop!==undefined)\n\t\t\t\t\tsrc[k] = rop;\n\t\t\t\telse if(typeof(src[k])==\"object\")\n\t\t\t\t\tEVALS.valwalk(src[k],ops,newpath);\n\t\t\t};\n\t\t\treturn src;\n\t\t}\n\t}\n\n\tfunction parse(expr,method) {\n\t\tmethod = method || \"ceval\";\n\t\tvar m = expr.match(RX);\n\t\tif(m) {\n\t\t\tm.forEach(token=>{\n\t\t\t\tvar key = token.replace(RX_RPL_PARSE,\"$1\").trim();\n\t\t\t\texpr = expr.replace(token,\"__val(entry,'\"+key+\"')\");\n\t\t\t});\n\t\t}\n\t\tvar fn = new Function(\"entry\",\"__val\",\"return (\"+expr+\")\");\n\n\t\treturn function(entry) {\n\t\t\treturn fn(entry,EVALS[method]);\n\t\t}\n\t}\n\n\tfunction tokens(expr,method) {\n\t\tmethod = EVALS[method || \"ceval\"];\n\n\t\t// JSON stringify\n\t\tif(RX_JSON_TOKEN.test(expr)) {\n\t\t\tlet parts = expr.replace(RX_RPL_TOKEN,\"\").split(\":\");\n\t\t\tlet nexpr = parts[1];\n\t\t\tlet spaces = parts[2];\n\t\t\tif(parts.length==2) {\n\t\t\t\tif(isNaN(nexpr)) {spaces = 2;}\n\t\t\t\telse {nexpr = 'this';\tspaces = parts[1];}\n\t\t\t}\n\t\t\telse if(parts.length==1) {\n\t\t\t\tnexpr = 'this';\n\t\t\t\tspaces = 2;\n\t\t\t}\n\t\t\tspaces = parseInt(spaces);\n\t\t\tlet fnxpr = tokens(\"${\"+nexpr+\"}\");\n\t\t\treturn function(entry) {\n\t\t\t\treturn JSON.stringify(fnxpr(entry),null,spaces);\n\t\t\t}\n\t\t}\n\n\t\tvar list = [], len = 0;\n\t\tvar m = expr.match(RX)||[];\n\t\tm.forEach(token=>{\n\t\t\tvar idx = expr.indexOf(token);\n\t\t\tvar t = expr.substring(0,idx);\n\t\t\tvar rtoken = token.replace(RX_RPL_TOKEN,\"\");\n\t\t\texpr = expr.substring(idx+token.length);\n\t\t\tlist.push(t);\n\t\t\tlist.push(function(entry){\n\t\t\t\treturn method(entry,rtoken);\n\t\t\t});\n\t\t});\n\t\tlist.push(expr);\n\t\tlist = list.filter(l=>l!=\"\");\n\t\tlen = list.length;\n\n\t\tif(len>1) {\n\t\t\treturn function(entry) {\n\t\t\t\tlet ret = \"\";\n\t\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\t\tlet t = list[i];\n\t\t\t\t\tret += typeof(t)==\"string\"? t : t(entry);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn function(entry) {\n\t\t\t\tlet t = list[0];\n\t\t\t\treturn typeof(t)==\"string\"? t : t(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction jsontokens(json) {\n\t\tlet ops = [], len = 0;\n\n\t\tfunction walk(json,path) {\n\t\t\tif(!json) return;\n\t\t\tObject.keys(json).forEach(k=>{\n\t\t\t\tlet newpath = `${path}${path?'.':''}${k}`;\n\t\t\t\tlet t = json[k];\n\t\t\t\tif(typeof(t)==\"string\") {\n\t\t\t\t\tops.push({path:newpath,fn:tokens(t)});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twalk(t,newpath);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\twalk(json,\"\");\n\t\tlen = ops.length;\n\n\t\treturn function(entry) {\n\t\t\tlet map = {};\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tlet op = ops[i];\n\t\t\t\tmap[op.path] = op.fn(entry);\n\t\t\t}\n\t\t\treturn EVALS.valwalk(extend(true,{},json),map,\"\");\n\t\t}\n\t}\n\n\tfunction exprfn(input,replace){\n\t\tif(typeof(input)=='number') {\n\t\t\treturn function(obj){return input};\n\t\t}\n\t\telse if(typeof(input)==\"object\") {\n\t\t\treturn jsontokens(input,replace);\n\t\t}\n\t\telse {\n\t\t\treturn tokens(input);\n\t\t}\n\t}\n\n\treturn {\n\t\tfn : parse,\n\t\teval : parse,\n\t\tassign : fnassign,\n\t\texpr : exprfn,\n\t\texpression : exprfn\n\t}\n}\n\nmodule.exports = instance;\n"]}