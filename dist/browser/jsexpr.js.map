{"version":3,"sources":["jsexpr.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","root","previous_jsexpr","jsexpr","window","expr","CACHE","fneval","obj","key","eval","err","undefined","cacheeval","rkey","replace","rx","fn","test","EVALS","v","iteval","arr","split","forEach","ceval","valwalk","src","ops","path","k","newpath","rop","extend","dayjs","Mingo","instance","token","RX","RegExp","RX_RPL_PARSE","RX_RPL_TOKEN","fnassign","parse","method","m","match","trim","Function","entry","tokens","list","len","idx","indexOf","substring","rtoken","push","startsWith","parts","nexpr","spaces","isNaN","parseInt","fnxpr","JSON","stringify","shift","exprfn","format","join","res","dt","toDate","filter","l","ret","jsontokens","json","walk","Object","keys","map","op","mingotokens","xpr","Array","isArray","$","aggr","Aggregator","input","run","ninput","prfn","nxfn","prres","nxres","_","traverse","object","callback","assign","expression","mingo","newInstance","EV_CACHE","EX_CACHE","addOperators","OP_QUERY","$starts","selector","value","args","$startsWith","$ends","endsWith","$endsWith","$contains","OP_EXPRESSION","$eval","$expr","$keyval","val","computeValue","reduce","item","$trim","chars","Set","has","pop","$startsWidth","define","amd","globalThis","self","s","h","d","y","M","name","weekdays","months","String","g","z","utcOffset","Math","abs","floor","date","year","month","clone","add","ceil","w","D","ms","Q","toLowerCase","S","arguments","O","locale","$L","utc","$u","x","$x","$offset","prototype","$d","Date","NaN","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","b","$i","isDayjs","en","Ls","hasOwn","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","copy","copyIsArray","deep","global","factory","_typeof","Symbol","iterator","_classCallCheck","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arr","_n","_d","_e","_i","_s","next","done","minLen","_arrayLikeToArray","from","arr2","T_NULL","T_UNDEFINED","T_BOOL","T_BOOLEAN","T_NUMBER","T_STRING","T_DATE","T_REGEX","T_REGEXP","T_ARRAY","T_OBJECT","T_FUNCTION","JS_SIMPLE_TYPES","OP_GROUP","OP_PIPELINE","OP_PROJECTION","MISSING","includes","valueToFind","fromIndex","max","sameValueZero","arrayPush","assert","condition","message","cloneDeep","jsType","objectMap","into","getType","isBoolean","isString","isNumber","isObject","isObjectLike","isDate","isRegExp","isFunction","isNil","isNull","isUndefined","inArray","notInArray","truthy","arg","isEmpty","ensureArray","prop","each","ctx","bind","objKeys","merge","opt","inputs","every","flatten","j","collection","accumulator","intersection","xs","ys","hashes","hashCode","union","depth","flatten2","iter","unwrap","isEqual","lhs","rhs","type","ka","kb","sort","temp","encode","unique","prefix","concat","hash","charCodeAt","compare","sortBy","cmp","sorted","result","groupBy","lookup","index","groups","findInsertIndex","array","lo","hi","mid","memoize","_this","memo","_len","_key","getValue","field","resolve","meta","resolve2","isText","acc","resolveObj","preserveMissingValues","names","isIndex","hasNext","filterMissing","splice","force","setValue","removeValue","isOperator","normalize","exprKeys","some","regex","modifiers","ignoreCase","multiline","skip","limit","stddev","data","sampled","sum","N","correction","avg","sqrt","pow","moduleApi","_internal","settings","setup","systemVariables","$$ROOT","$$CURRENT","$$REMOVE","redactVariables","$$KEEP","$$PRUNE","$$DESCEND","current","elem","redactObj","SYS_VARS","REDACT_VARS","idKey","cls","OPERATORS","accumulate","operator","sysVar","$abs","$add","foundDate","$ceil","$divide","$exp","exp","$floor","$ln","log","$log","msg","log10","$log10","$mod","$multiply","num","$pow","$round","place","Infinity","truncate","$sqrt","$subtract","$trunc","places","roundOff","sign","trunc","decimals","firstDigit","offset","remainder","lastDigit","_offset","excess","$arrayElemAt","$arrayToObject","newObj","$concatArrays","$filter","asVar","condExpr","tempObj","$in","$indexOfArray","searchValue","start","end","findIndex","$isArray","$map","inputExpr","asExpr","inExpr","tempKey","$objectToArray","$range","step","$reduce","initialValue","$reverseArray","reverse","$size","$slice","$zip","useLongestLength","defaults","zipCount","_loop","$mergeObjects","docs","$and","$or","$not","Lazy","source","Iterator","isIterator","isFn","dropItem","rest","DONE","LAZY_MAP","LAZY_FILTER","LAZY_TAKE","LAZY_DROP","baseIterator","nextFn","iteratees","buffer","bIndex","outer","mIndex","mSize","innerDone","member","func","__iteratees","__first","__done","__buf","size","_validate","_push","iteratee","pred","take","drop","transform","first","operators","__operators","__options","stream","query","pipelineOperators","Query","aggregate","pipeline","Cursor","projection","__filterFn","__query","__source","__projection","__result","__stack","_fetch","all","count","modifier","collation","criteria","__criteria","__compiled","_compile","whereOperator","_processOperator","find","remove","_this2","$eq","eq","$ne","$in$1","$nin","$lt","compare$1","$lte","$gt","$gte","$mod$1","$regex","$exists","$all","matched","$elemMatch","$size$1","$type","createComparison","$eq$1","$ne$1","$gt$1","$lt$1","$gte$1","$lte$1","$nin$1","$cmp","$cond","ifExpr","thenExpr","elseExpr","errorMsg","$switch","branches","validBranch","branch","then","$ifNull","$dayOfYear","oneDay","$dayOfMonth","$dayOfWeek","$year","$month","$week","setHours","setDate","yearStart","$hour","getUTCHours","$minute","$second","$millisecond","DATE_SYM_TABLE","$dateToString","fmt","matches","hdlr","pad","padDigits","number","digits","$literal","$setEquals","$setIntersection","$setDifference","$setUnion","$setIsSubset","$anyElementTrue","$allElementsTrue","$concat","$indexOfBytes","str","searchStr","valid","$split","$strLenBytes","encodeURI","$strLenCP","$strcasecmp","toUpperCase","$substrBytes","buf","utf8Encode","validIndex","begin","$substr","$substrCP","$toLower","$toUpper","UTF8_MASK","toUtf8","utf8","codePointAt","$let","varsExpr","varsKeys","expressionOperators","freeze","__proto__","$push","$addToSet","$avg","$first","$last","$max","$mergeObjects$1","$min","$stdDevPop","$stdDevSamp","$sum","groupOperators","$addFields","newFields","$bucket","boundaries","defaultKey","lower","upper","outputExpr","output","boundType","grouped","boundKey","$bucketAuto","groupByExpr","bucketCount","buckets","coll","approxBucketSize","computeValueOptimized","remaining","ID_KEY","bucketItems","lastBucket","$count","$facet","$group","id","partitions","$limit","$lookup","joinColl","localField","foreignField","asField","as","$match","q","$out","$project","expressionKeys","idOnlyExcludedExpression","validateExpression","processObject","foundSlice","foundExclusion","dropKeys","subExpr","subExprKeys","projectionOperators","nestedObj","objPathValue","check","$redact","$replaceRoot","newRoot","$sample","random","$skip","$sort","sortKeys","collationSpec","collationComparator","sortedIndex","indexKeys","COLLATION_STRENGTH","spec","localeOpt","sensitivity","strength","caseFirst","numeric","numericOrdering","ignorePunctuation","alternate","caseLevel","collator","Intl","Collator","$sortByCount","newExpr","$unwind","includeArrayIndex","preserveNullAndEmptyArrays","tmp","_tmp","_tmp2","_ret","$elemMatch$1","$slice$1","createQueryOperator","$all$1","$elemMatch$2","$eq$2","$exists$1","$gt$2","$gte$2","$in$2","$lt$2","$lte$2","$mod$2","$ne$2","$nin$2","$regex$1","$size$2","$type$1","$and$1","queries","$or$1","$nor","$not$1","$where","queryOperators","SYSTEM_OPERATORS","enableSystemOperators","values","opClass","newOperators","wrapped","CollectionMixin","VERSION"],"mappings":"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","file":"jsexpr.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\r\n\r\n(function() {\r\n  var root = this\r\n  var previous_jsexpr = root.jsexpr;\r\n\tvar jsexpr = require('./index.js');\r\n\r\n\tif( typeof exports !== 'undefined' ) {\r\n    if( typeof module !== 'undefined' && module.exports ) {\r\n      exports = module.exports = jsexpr;\r\n    }\r\n    exports.jsexpr = jsexpr;\r\n  }\r\n\r\n\tif(typeof window !== 'undefined') {\r\n    window.jsexpr = jsexpr;\r\n  }\r\n\r\n}).call(this);\r\n\n},{\"./index.js\":2}],2:[function(require,module,exports){\n/*jshint esversion: 6 */\r\n\r\nconst expr = require('./lib');\r\n\r\nmodule.exports = expr;\r\n\n},{\"./lib\":5}],3:[function(require,module,exports){\nconst CACHE = {}\r\n\r\nfunction fneval(obj, key) {\r\n    try {\r\n        return eval(\"this.\" + key);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nfunction cacheeval(obj,key) {\r\n    if(!CACHE[key]) {\r\n        let rkey = key.replace(/'/g,\"\\\\'\");\r\n        let rx = /^[a-zA-Z$_@]/;\r\n        let fn = eval(`(function(){\r\n            let rx = /^[a-zA-Z$_]/;\r\n            return '${rkey}'.startsWith('this.') || '${rkey}'=='this' || !rx.test('${rkey}')?\r\n                function() {\r\n                    let r = undefined;\r\n                    try {r=${key};}\r\n                    catch(err){}\r\n                    return r;\r\n                } :\r\n                function() {\r\n                    let r = undefined;\r\n                    try {r=this.${rx.test(key)? key:'$___$'};}\r\n                    catch(err){try{r=${key};}catch(err){}}\r\n                    return r;\r\n                }\r\n        })()`);\r\n        CACHE[key] = fn;\r\n    }\r\n    return CACHE[key].call(obj);\r\n}\r\n\r\nconst EVALS = {\r\n    eval(obj,key) {\r\n        let v = fneval.call(obj,obj,key);\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    iteval(obj,key) {\r\n        var arr = key.split(\".\");\r\n        arr.forEach(key=>{\r\n            if(obj==null || obj==undefined) return;\r\n            else obj = obj[key];\r\n        });\r\n\r\n        let v = obj || undefined;\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    ceval(obj,key) {\r\n        let v = cacheeval(obj,key);\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    valwalk(src,ops,path) {\r\n        if(!src) return src;\r\n        for(let k in src) {\r\n            let newpath = `${path}${path?'.':''}${k}`;\r\n            let rop = ops[newpath];\r\n            if(rop!==undefined)\r\n                src[k] = rop;\r\n            else if(typeof(src[k])==\"object\")\r\n                EVALS.valwalk(src[k],ops,newpath);\r\n        };\r\n        return src;\r\n    }\r\n}\r\n\r\nmodule.exports = EVALS;\r\n\n},{}],4:[function(require,module,exports){\nconst \r\n\tEVALS = require('./evals.js'), \r\n\textend = require(\"extend\"),\r\n\tdayjs = require('dayjs'),\r\n\tMingo = require(\"mingo\");\r\n\r\nfunction instance(token) {\r\n\tconst RX = new RegExp(`\\\\${token}\\\\{[^\\\\}]+\\\\}`,'g');\t\t\t\t\t// /\\$\\{[^\\}]+\\}/g;\r\n\tconst RX_RPL_PARSE = new RegExp(`\\\\${token}\\\\{([^\\\\}]+)\\\\}`);\t// /\\$\\{([^\\}]+)\\}/;\r\n\tconst RX_RPL_TOKEN = new RegExp(`\\\\${token}\\\\{|\\\\}`,'g');\t\t\t\t\t// /\\$\\{|\\}/g;\r\n\r\n\tfunction fnassign(path) {\r\n\t\treturn eval(`(function(path){\r\n\t\t\treturn function(obj,val) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Ensure path\r\n\t\t\t\t\tlet root = obj;\r\n\t\t\t\t\tlet kpath = path.split('.');\r\n\t\t\t\t\tfor(let i=0; i<kpath.length;i++) {\r\n\t\t\t\t\t\tlet k = kpath[i];\r\n\t\t\t\t\t\tif(!root[k]) root[k] = {};\r\n\t\t\t\t\t\troot = root[k];\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn obj.${path} = val;\r\n\t\t\t\t}catch(err) {}\r\n\t\t\t}\r\n\t\t})('${path}')`);\r\n\t}\r\n\r\n\tfunction parse(expr,method) {\r\n\t\tmethod = method || \"ceval\";\r\n\t\tvar m = expr.match(RX);\r\n\t\tif(m) {\r\n\t\t\tm.forEach(token=>{\r\n\t\t\t\tvar key = token.replace(RX_RPL_PARSE,\"$1\").trim().replace(/'/g,\"\\\\'\");\r\n\t\t\t\texpr = expr.replace(token,\"__val(entry,'\"+key+\"')\");\r\n\t\t\t});\r\n\t\t}\r\n\t\tvar fn = new Function(\"entry\",\"__val\",\"return (\"+expr+\")\");\r\n\r\n\t\treturn function(entry) {\r\n\t\t\treturn fn(entry,EVALS[method]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction tokens(expr,method) {\r\n\t\tmethod = EVALS[method || \"ceval\"];\r\n\r\n\t\tvar list = [], len = 0;\r\n\t\tvar m = expr.match(RX)||[];\r\n\t\tm.forEach(token=>{\r\n\t\t\tvar idx = expr.indexOf(token);\r\n\t\t\tvar t = expr.substring(0,idx);\r\n\t\t\tvar rtoken = token.replace(RX_RPL_TOKEN,\"\");\r\n\t\t\texpr = expr.substring(idx+token.length);\r\n\t\t\tlist.push(t);\r\n\r\n\t\t\t// JSON Formatter\r\n\t\t\tif(rtoken.startsWith('JSON:')) {\r\n\t\t\t\tlet parts = rtoken.split(\":\");\r\n\t\t\t\tlet nexpr = parts[1];\r\n\t\t\t\tlet spaces = parts[2];\r\n\t\t\t\tif(parts.length==2) {\r\n\t\t\t\t\tif(isNaN(nexpr)) {spaces = 2;}\r\n\t\t\t\t\telse {nexpr = 'this';\tspaces = parts[1];}\r\n\t\t\t\t}\r\n\t\t\t\telse if(parts.length==1) {\r\n\t\t\t\t\tnexpr = 'this';\r\n\t\t\t\t\tspaces = 2;\r\n\t\t\t\t}\r\n\t\t\t\tspaces = parseInt(spaces);\r\n\t\t\t\tlet fnxpr = tokens(\"${\"+nexpr+\"}\");\r\n\t\t\t\tlet fn =  function(entry) {\r\n\t\t\t\t\treturn JSON.stringify(fnxpr(entry),null,spaces);\r\n\t\t\t\t}\t\r\n\t\t\t\tlist.push(fn);\r\n\t\t\t}\r\n\t\t\t// Date Formatter\r\n\t\t\telse if(rtoken.startsWith('DATE:')) {\r\n\t\t\t\tlet parts = rtoken.split(\":\");\r\n\t\t\t\tparts.shift();\r\n\t\t\t\tlet nexpr = exprfn(\"${\"+parts.shift()+\"}\");\r\n\t\t\t\tlet format = parts.join(\":\").split('|');\r\n\t\t\t\tlet fn = function(entry) {\r\n\t\t\t\t\tlet res = nexpr(entry);\r\n\t\t\t\t\tlet dt = dayjs(res,format[0]);\r\n\t\t\t\t\tif(format[1]) {\r\n\t\t\t\t\t\treturn dt.format(format[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn dt.toDate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\tlist.push(fn);\r\n\t\t\t}\r\n\t\t\t// Evaluator\r\n\t\t\telse {\r\n\t\t\t\tlist.push(function(entry){\t\t\t\t\r\n\t\t\t\t\treturn method(entry,rtoken);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlist.push(expr);\r\n\t\tlist = list.filter(l=>l!=\"\");\r\n\t\tlen = list.length;\r\n\r\n\t\tif(len>1) {\r\n\t\t\treturn function(entry) {\r\n\t\t\t\tlet ret = \"\";\r\n\t\t\t\tfor(let i=0;i<len;i++) {\r\n\t\t\t\t\tlet t = list[i];\r\n\t\t\t\t\tret += typeof(t)==\"string\"? t : t(entry);\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn function(entry) {\r\n\t\t\t\tlet t = list[0];\r\n\t\t\t\treturn typeof(t)==\"string\"? t : t(entry);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction jsontokens(json) {\r\n\t\tlet ops = [], len = 0;\r\n\r\n\t\tfunction walk(json,path) {\r\n\t\t\tif(!json) return;\r\n\t\t\tObject.keys(json).forEach(k=>{\r\n\t\t\t\tlet newpath = `${path}${path?'.':''}${k}`;\r\n\t\t\t\tlet t = json[k];\r\n\t\t\t\tif(typeof(t)==\"string\") {\r\n\t\t\t\t\tops.push({path:newpath,fn:tokens(t)});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\twalk(t,newpath);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twalk(json,\"\");\r\n\t\tlen = ops.length;\r\n\r\n\t\treturn function(entry) {\r\n\t\t\tlet map = {};\r\n\t\t\tfor(let i=0;i<len;i++) {\r\n\t\t\t\tlet op = ops[i];\r\n\t\t\t\tmap[op.path] = op.fn(entry);\r\n\t\t\t}\r\n\t\t\treturn EVALS.valwalk(extend(true,{},json),map,\"\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction mingotokens(json) {\r\n\t\tlet xpr = Array.isArray(json.$)? json.$ : [json.$];\r\n\t\tlet aggr = new Mingo.Aggregator(xpr);\r\n\t\treturn function(input) {\r\n\t\t\tlet isArray = Array.isArray(input);\r\n\t\t\tlet res = aggr.run(isArray? input : [input]);\r\n\t\t\tif(!isArray && res.length<=1) return res[0];\r\n\t\t\telse return res;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction exprfn(input,replace){\r\n\t\tif(typeof(input)=='number') {\r\n\t\t\treturn function(obj){return input};\r\n\t\t}\r\n\t\telse if(typeof(input)==\"object\") {\r\n\t\t\tlet ninput = extend({},input);\r\n\t\t\tdelete ninput['$'];\r\n\r\n\t\t\tconst prfn = input[\"$\"] ? mingotokens(input, replace) : (input)=>input;\r\n\t\t\tconst nxfn = Object.keys(ninput).length? jsontokens(ninput,replace) : (input)=>input;\r\n\t\t\t\r\n\t\t\treturn function(obj) {\r\n\t\t\t\tlet prres = prfn(obj);\r\n\t\t\t\tlet nxres = nxfn(prres);\r\n\t\t\t\tif(typeof(nxres._)!=='undefined' && Object.keys(nxres).length==1) \r\n\t\t\t\t\treturn nxres._;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn nxres;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn tokens(input);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction traverse(object,callback) {\r\n\t\tfor(let key in object) {\r\n\t\t\tobject[key] = callback(object,key,object[key]);\r\n\t\t}\r\n\r\n\t\tfor(let key in object) {\r\n\t\t\tif(typeof(object[key])=='object') {\r\n\t\t\t\ttraverse(object[key],callback);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tfn : parse,\r\n\t\teval : parse,\r\n\t\tassign : fnassign,\r\n\t\texpr : exprfn,\r\n\t\texpression : exprfn,\r\n\t\ttraverse : traverse\r\n\t}\r\n}\r\n\r\nmodule.exports = instance;\r\n\n},{\"./evals.js\":3,\"dayjs\":7,\"extend\":8,\"mingo\":9}],5:[function(require,module,exports){\nlet expression = require('./expression'),\r\n\tmingo = require('./mingo_ex');\r\n\r\nlet instance = expression('$');\r\ninstance.newInstance = function(token) {\r\n\treturn expression(token);\r\n}\r\n\r\nmodule.exports = instance;\r\n\n},{\"./expression\":4,\"./mingo_ex\":6}],6:[function(require,module,exports){\nconst\r\n\tmingo = require('mingo'),\r\n\tjsexpr = require('./expression')('$');\r\n\r\nconst EV_CACHE = {};\r\nconst EX_CACHE = {};\r\n\r\nmingo.addOperators(mingo.OP_QUERY, function (_) {\r\n\treturn {\r\n\t\t$starts(selector, value, args) {\r\n\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\treturn (value || \"\").startsWith(args[0]);\r\n\t\t},\r\n\t\t$startsWith(selector, value, args) {\r\n\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\treturn (value || \"\").startsWith(args[0]);\r\n\t\t},\r\n\t\t$ends(selector, value, args) {\r\n\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\treturn (value || \"\").endsWith(args[0]);\r\n\t\t},\r\n\t\t$endsWith(selector, value, args) {\r\n\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\treturn (value || \"\").endsWith(args[0]);\r\n\t\t},\r\n\t\t$contains(selector, value, args) {\r\n\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\treturn (value || \"\").indexOf(args[0]) >= 0;\r\n\t\t}\r\n\t};\r\n});\r\n\r\nmingo.addOperators(mingo.OP_EXPRESSION, function (_) {\r\n\treturn {\r\n\t\t$eval(selector, value, args) {\r\n\t\t\tif (!EV_CACHE[value]) {\r\n\t\t\t\tEV_CACHE[value] = jsexpr.eval(value);\r\n\t\t\t}\r\n\t\t\treturn EV_CACHE[value](selector);\r\n\t\t},\r\n\t\t$expr(selector, value, args) {\r\n\t\t\tif (!EX_CACHE[value]) {\r\n\t\t\t\tEX_CACHE[value] = jsexpr.expr(value);\r\n\t\t\t}\r\n\t\t\treturn EX_CACHE[value](selector);\r\n\t\t},\r\n\t\t$keyval(selector, value, args) {\r\n\t\t\tlet val = _.computeValue(selector, value);\r\n\t\t\treturn val.reduce((map, item) => {\r\n\t\t\t\tmap[item[0]] = item[1] || \"_\";\r\n\t\t\t\treturn map;\r\n\t\t\t}, {});\r\n\t\t},\r\n\t\t$trim(selector, value, args) {\r\n\t\t\tlet chars = new Set((value.chars || '').split(''));\r\n\t\t\tlet val = _.computeValue(selector, value.input).split('');\r\n\t\t\twhile (chars.has(val[0])) val.shift();\r\n\t\t\twhile (chars.has(val[val.length - 1])) val.pop();\r\n\t\t\treturn val.join('');\r\n\t\t},\r\n\t\t$starts(selector, value, args) {\r\n\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\treturn (val || \"\").startsWith(value[1]);\r\n\t\t},\r\n\t\t$startsWidth(selector, value, args) {\r\n\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\treturn (val || \"\").startsWith(value[1]);\r\n\t\t},\r\n\t\t$ends(selector, value, args) {\r\n\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\treturn (val || \"\").endsWith(value[1]);\r\n\t\t},\r\n\t\t$endsWith(selector, value, args) {\r\n\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\treturn (val || \"\").endsWith(value[1]);\r\n\t\t},\r\n\t\t$contains(selector, value, args) {\r\n\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\treturn (val || \"\").indexOf(value[1]) >= 0;\r\n\t\t}\r\n\t};\r\n});\r\n\r\n\r\nmodule.exports = mingo;\r\n\n},{\"./expression\":4,\"mingo\":9}],7:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",$=\"Invalid Date\",l=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},D=\"en\",v={};v[D]=M;var p=function(t){return t instanceof _},S=function(t,e,n){var r;if(!t)return D;if(\"string\"==typeof t)v[t]&&(r=t),e&&(v[t]=e,r=t);else{var i=t.name;v[i]=t,r=i}return!n&&r&&(D=r),r||!n&&D},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var D=this.$locale().weekStart||0,v=(y<D?y+7:y)-D;return $(r?m-v:m+(6-v),M);case a:case d:return l(g+\"Hours\",0);case u:return l(g+\"Minutes\",1);case s:return l(g+\"Seconds\",2);case i:return l(g+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),$=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this;if(!this.isValid())return $;var n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=O.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,f=i.months,h=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=i.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(i.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,o,2),ddd:h(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:r};return n.replace(y,(function(t,e){return e||l[t]||r.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,D=O.m(this,M);return D=(l={},l[c]=D/12,l[f]=D,l[h]=D/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?D:O.a(D)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return v[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=v[D],w.Ls=v,w.p={},w}));\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n},{}],9:[function(require,module,exports){\n//! mingo.js 2.5.3\n//! Copyright (c) 2020 Francis Asante\n//! MIT\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.mingo = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  // Javascript native types\n  var T_NULL = 'null';\n  var T_UNDEFINED = 'undefined';\n  var T_BOOL = 'bool';\n  var T_BOOLEAN = 'boolean';\n  var T_NUMBER = 'number';\n  var T_STRING = 'string';\n  var T_DATE = 'date';\n  var T_REGEX = 'regex';\n  var T_REGEXP = 'regexp';\n  var T_ARRAY = 'array';\n  var T_OBJECT = 'object';\n  var T_FUNCTION = 'function'; // no array, object, or function types\n\n  var JS_SIMPLE_TYPES = [T_NULL, T_UNDEFINED, T_BOOLEAN, T_NUMBER, T_STRING, T_DATE, T_REGEXP]; // operator classes\n\n  var OP_EXPRESSION = 'expression';\n  var OP_GROUP = 'group';\n  var OP_PIPELINE = 'pipeline';\n  var OP_PROJECTION = 'projection';\n  var OP_QUERY = 'query';\n  var MISSING = function MISSING() {};\n\n  /**\n   * Utility functions\n   */\n\n  if (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, 'includes', {\n      value: function value(valueToFind, fromIndex) {\n        if (this == null) {\n          throw new TypeError('\"this\" is null or not defined');\n        } // 1. Let O be ? ToObject(this value).\n\n\n        var o = Object(this); // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\n        var len = o.length >>> 0; // 3. If len is 0, return false.\n\n        if (len === 0) {\n          return false;\n        } // 4. Let n be ? ToInteger(fromIndex).\n        //    (If fromIndex is undefined, this step produces the value 0.)\n\n\n        var n = fromIndex | 0; // 5. If n ≥ 0, then\n        //  a. Let k be n.\n        // 6. Else n < 0,\n        //  a. Let k be len + n.\n        //  b. If k < 0, let k be 0.\n\n        var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        function sameValueZero(x, y) {\n          return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n        } // 7. Repeat, while k < len\n\n\n        while (k < len) {\n          // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n          // b. If SameValueZero(valueToFind, elementK) is true, return true.\n          if (sameValueZero(o[k], valueToFind)) {\n            return true;\n          } // c. Increase k by 1.\n\n\n          k++;\n        } // 8. Return false\n\n\n        return false;\n      }\n    });\n  }\n\n  var arrayPush = Array.prototype.push;\n  function assert(condition, message) {\n    if (!condition) err(message);\n  }\n  /**\n   * Deep clone an object\n   */\n\n  function cloneDeep(obj) {\n    switch (jsType(obj)) {\n      case T_ARRAY:\n        return obj.map(cloneDeep);\n\n      case T_OBJECT:\n        return objectMap(obj, cloneDeep);\n\n      default:\n        return obj;\n    }\n  }\n  /**\n   * Shallow clone an object\n   */\n\n  function clone(obj) {\n    switch (jsType(obj)) {\n      case T_ARRAY:\n        return into([], obj);\n\n      case T_OBJECT:\n        return Object.assign({}, obj);\n\n      default:\n        return obj;\n    }\n  }\n  function getType(v) {\n    if (v === null) return 'Null';\n    if (v === undefined) return 'Undefined';\n    return v.constructor.name;\n  }\n  function jsType(v) {\n    return getType(v).toLowerCase();\n  }\n  function isBoolean(v) {\n    return jsType(v) === T_BOOLEAN;\n  }\n  function isString(v) {\n    return jsType(v) === T_STRING;\n  }\n  function isNumber(v) {\n    return jsType(v) === T_NUMBER;\n  }\n  var isArray = Array.isArray || function (v) {\n    return !!v && v.constructor === Array;\n  };\n  function isObject(v) {\n    return !!v && v.constructor === Object;\n  }\n  function isObjectLike(v) {\n    return v === Object(v);\n  } // objects, arrays, functions, date, custom object\n\n  function isDate(v) {\n    return jsType(v) === T_DATE;\n  }\n  function isRegExp(v) {\n    return jsType(v) === T_REGEXP;\n  }\n  function isFunction(v) {\n    return jsType(v) === T_FUNCTION;\n  }\n  function isNil(v) {\n    return v === null || v === undefined;\n  }\n  function isNull(v) {\n    return v === null;\n  }\n  function isUndefined(v) {\n    return v === undefined;\n  }\n  function inArray(arr, item) {\n    return arr.includes(item);\n  }\n  function notInArray(arr, item) {\n    return !inArray(arr, item);\n  }\n  function truthy(arg) {\n    return !!arg;\n  }\n  function isEmpty(x) {\n    return isNil(x) || isArray(x) && x.length === 0 || isObject(x) && keys(x).length === 0 || !x;\n  } // ensure a value is an array\n\n  function ensureArray(x) {\n    return isArray(x) ? x : [x];\n  }\n  function has(obj, prop) {\n    return obj.hasOwnProperty(prop);\n  }\n  function err(s) {\n    throw new Error(s);\n  }\n  var keys = Object.keys; // ////////////////// UTILS ////////////////////\n\n  /**\n   * Iterate over an array or object\n   * @param  {Array|Object} obj An object-like value\n   * @param  {Function} fn The callback to run per item\n   * @param  {*}   ctx  The object to use a context\n   * @return {void}\n   */\n\n  function each(obj, fn, ctx) {\n    fn = fn.bind(ctx);\n\n    if (isArray(obj)) {\n      for (var i = 0, len = obj.length; i < len; i++) {\n        if (fn(obj[i], i, obj) === false) break;\n      }\n    } else {\n      for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          if (fn(obj[k], k, obj) === false) break;\n        }\n      }\n    }\n  }\n  /**\n   * Transform values in an object\n   *\n   * @param  {Object}   obj   An object whose values to transform\n   * @param  {Function} fn The transform function\n   * @param  {*}   ctx The value to use as the \"this\" context for the transform\n   * @return {Array|Object} Result object after applying the transform\n   */\n\n  function objectMap(obj, fn, ctx) {\n    fn = fn.bind(ctx);\n    var o = {};\n    var objKeys = keys(obj);\n\n    for (var i = 0; i < objKeys.length; i++) {\n      var k = objKeys[i];\n      o[k] = fn(obj[k], k);\n    }\n\n    return o;\n  }\n  /**\n   * Deep merge objects or arrays.\n   * When the inputs have unmergeable types, the source value (right hand side) is returned.\n   * If inputs are arrays of same length and all elements are mergable, elements in the same position are merged together.\n   * If any of the elements are unmergeable, elements in the source are appended to the target.\n   * @param target {Object|Array} the target to merge into\n   * @param obj {Object|Array} the source object\n   */\n\n  function merge(target, obj) {\n    var opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    // take care of missing inputs\n    if (target === MISSING) return obj;\n    if (obj === MISSING) return target;\n    var inputs = [target, obj];\n\n    if (!(inputs.every(isObject) || inputs.every(isArray))) {\n      throw Error('mismatched types. must both be array or object');\n    } // default options\n\n\n    opt.flatten = opt.flatten || false;\n\n    if (isArray(target)) {\n      if (opt.flatten) {\n        var i = 0;\n        var j = 0;\n\n        while (i < target.length && j < obj.length) {\n          target[i] = merge(target[i++], obj[j++], opt);\n        }\n\n        while (j < obj.length) {\n          target.push(obj[j++]);\n        }\n      } else {\n        arrayPush.apply(target, obj);\n      }\n    } else {\n      Object.keys(obj).forEach(function (k) {\n        if (target.hasOwnProperty(k)) {\n          target[k] = merge(target[k], obj[k], opt);\n        } else {\n          target[k] = obj[k];\n        }\n      });\n    }\n\n    return target;\n  }\n  /**\n   * Reduce any array-like object\n   * @param collection\n   * @param fn\n   * @param accumulator\n   * @returns {*}\n   */\n\n  function reduce(collection, fn, accumulator) {\n    if (isArray(collection)) return collection.reduce(fn, accumulator); // array-like objects\n\n    each(collection, function (v, k) {\n      return accumulator = fn(accumulator, v, k, collection);\n    });\n    return accumulator;\n  }\n  /**\n   * Returns the intersection between two arrays\n   *\n   * @param  {Array} xs The first array\n   * @param  {Array} ys The second array\n   * @return {Array}    Result array\n   */\n\n  function intersection(xs, ys) {\n    var hashes = ys.map(hashCode);\n    return xs.filter(function (v) {\n      return inArray(hashes, hashCode(v));\n    });\n  }\n  /**\n   * Returns the union of two arrays\n   *\n   * @param  {Array} xs The first array\n   * @param  {Array} ys The second array\n   * @return {Array}   The result array\n   */\n\n  function union(xs, ys) {\n    return into(into([], xs), ys.filter(notInArray.bind(null, xs)));\n  }\n  /**\n   * Flatten the array\n   *\n   * @param  {Array} xs The array to flatten\n   * @param {Number} depth The number of nested lists to iterate\n   */\n\n  function flatten(xs) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var arr = [];\n\n    function flatten2(ys, iter) {\n      for (var i = 0, len = ys.length; i < len; i++) {\n        if (isArray(ys[i]) && (iter > 0 || iter < 0)) {\n          flatten2(ys[i], Math.max(-1, iter - 1));\n        } else {\n          arr.push(ys[i]);\n        }\n      }\n    }\n\n    flatten2(xs, depth);\n    return arr;\n  }\n  /**\n   * Unwrap a single element array to specified depth\n   * @param {Array} arr\n   * @param {Number} depth\n   */\n\n  function unwrap(arr, depth) {\n    if (depth < 1) return arr;\n\n    while (depth-- && isArray(arr) && arr.length === 1) {\n      arr = arr[0];\n    }\n\n    return arr;\n  }\n  /**\n   * Determine whether two values are the same or strictly equivalent\n   *\n   * @param  {*}  a The first value\n   * @param  {*}  b The second value\n   * @return {Boolean}   Result of comparison\n   */\n\n  function isEqual(a, b) {\n    var lhs = [a];\n    var rhs = [b];\n\n    while (lhs.length > 0) {\n      a = lhs.pop();\n      b = rhs.pop(); // strictly equal must be equal.\n\n      if (a === b) continue; // unequal types and functions cannot be equal.\n\n      var type = jsType(a);\n      if (type !== jsType(b) || type === T_FUNCTION) return false; // leverage toString for Date and RegExp types\n\n      switch (type) {\n        case T_ARRAY:\n          if (a.length !== b.length) return false; //if (a.length === b.length && a.length === 0) continue\n\n          into(lhs, a);\n          into(rhs, b);\n          break;\n\n        case T_OBJECT:\n          // deep compare objects\n          var ka = keys(a);\n          var kb = keys(b); // check length of keys early\n\n          if (ka.length !== kb.length) return false; // we know keys are strings so we sort before comparing\n\n          ka.sort();\n          kb.sort(); // compare keys\n\n          for (var i = 0, len = ka.length; i < len; i++) {\n            var temp = ka[i];\n\n            if (temp !== kb[i]) {\n              return false;\n            } else {\n              // save later work\n              lhs.push(a[temp]);\n              rhs.push(b[temp]);\n            }\n          }\n\n          break;\n\n        default:\n          // compare encoded values\n          if (encode(a) !== encode(b)) return false;\n      }\n    }\n\n    return lhs.length === 0;\n  }\n  /**\n   * Return a new unique version of the collection\n   * @param  {Array} xs The input collection\n   * @return {Array}    A new collection with unique values\n   */\n\n  function unique(xs) {\n    var h = {};\n    var arr = [];\n    each(xs, function (item) {\n      var k = hashCode(item);\n\n      if (!has(h, k)) {\n        arr.push(item);\n        h[k] = 0;\n      }\n    });\n    return arr;\n  }\n  /**\n   * Encode value to string using a simple non-colliding stable scheme.\n   *\n   * @param value\n   * @returns {*}\n   */\n\n  function encode(value) {\n    var type = jsType(value);\n\n    switch (type) {\n      case T_BOOLEAN:\n      case T_NUMBER:\n      case T_REGEXP:\n        return value.toString();\n\n      case T_STRING:\n        return JSON.stringify(value);\n\n      case T_DATE:\n        return value.toISOString();\n\n      case T_NULL:\n      case T_UNDEFINED:\n        return type;\n\n      case T_ARRAY:\n        return '[' + value.map(encode) + ']';\n\n      default:\n        var prefix = type === T_OBJECT ? '' : \"\".concat(getType(value));\n        var objKeys = keys(value);\n        objKeys.sort();\n        return \"\".concat(prefix, \"{\") + objKeys.map(function (k) {\n          return \"\".concat(encode(k), \":\").concat(encode(value[k]));\n        }) + '}';\n    }\n  }\n  /**\n   * Generate hash code\n   * This selected function is the result of benchmarking various hash functions.\n   * This version performs well and can hash 10^6 documents in ~3s with on average 100 collisions.\n   *\n   * @param value\n   * @returns {*}\n   */\n\n  function hashCode(value) {\n    if (isNil(value)) return null;\n    var hash = 0;\n    var s = encode(value);\n    var i = s.length;\n\n    while (i) {\n      hash = (hash << 5) - hash ^ s.charCodeAt(--i);\n    }\n\n    return hash >>> 0;\n  }\n  /**\n   * Default compare function\n   * @param {*} a\n   * @param {*} b\n   */\n\n  function compare(a, b) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n    return 0;\n  }\n  /**\n   * Returns a (stably) sorted copy of list, ranked in ascending order by the results of running each value through iteratee\n   *\n   * This implementation treats null/undefined sort keys as less than every other type\n   *\n   * @param {Array}   collection\n   * @param {Function} fn The function used to resolve sort keys\n   * @param {Function} cmp The comparator function to use for comparing values\n   * @return {Array} Returns a new sorted array by the given iteratee\n   */\n\n  function sortBy(collection, fn, cmp) {\n    var sorted = [];\n    var result = [];\n    var hash = {};\n    cmp = cmp || compare;\n    if (isEmpty(collection)) return collection;\n\n    for (var i = 0; i < collection.length; i++) {\n      var obj = collection[i];\n      var key = fn(obj, i); // objects with nil keys will go in first\n\n      if (isNil(key)) {\n        result.push(obj);\n      } else {\n        if (hash[key]) {\n          hash[key].push(obj);\n        } else {\n          hash[key] = [obj];\n        }\n\n        sorted.push(key);\n      }\n    } // use native array sorting but enforce stableness\n\n\n    sorted.sort(cmp);\n\n    for (var _i = 0; _i < sorted.length; _i++) {\n      into(result, hash[sorted[_i]]);\n    }\n\n    return result;\n  }\n  /**\n   * Groups the collection into sets by the returned key\n   *\n   * @param collection\n   * @param fn {Function} to compute the group key of an item in the collection\n   * @returns {{keys: Array, groups: Array}}\n   */\n\n  function groupBy(collection, fn) {\n    var result = {\n      'keys': [],\n      'groups': []\n    };\n    var lookup = {};\n    each(collection, function (obj) {\n      var key = fn(obj);\n      var hash = hashCode(key);\n      var index = -1;\n\n      if (lookup[hash] === undefined) {\n        index = result.keys.length;\n        lookup[hash] = index;\n        result.keys.push(key);\n        result.groups.push([]);\n      }\n\n      index = lookup[hash];\n      result.groups[index].push(obj);\n    });\n    return result;\n  }\n  /**\n   * Push elements in given array into target array\n   *\n   * @param {*} target The array to push into\n   * @param {*} xs The array of elements to push\n   */\n\n  function into(target, xs) {\n    arrayPush.apply(target, xs);\n    return target;\n  }\n  /**\n   * Find the insert index for the given key in a sorted array.\n   *\n   * @param {*} array The sorted array to search\n   * @param {*} item The search key\n   */\n\n  function findInsertIndex(array, item) {\n    // uses binary search\n    var lo = 0;\n    var hi = array.length - 1;\n\n    while (lo <= hi) {\n      var mid = Math.round(lo + (hi - lo) / 2);\n\n      if (item < array[mid]) {\n        hi = mid - 1;\n      } else if (item > array[mid]) {\n        lo = mid + 1;\n      } else {\n        return mid;\n      }\n    }\n\n    return lo;\n  }\n  /**\n   * This is a generic memoization function\n   *\n   * This implementation uses a cache independent of the function being memoized\n   * to allow old values to be garbage collected when the memoized function goes out of scope.\n   *\n   * @param {*} fn The function object to memoize\n   */\n\n  function memoize(fn) {\n    var _this = this;\n\n    return function (memo) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var key = hashCode(args);\n\n        if (!has(memo, key)) {\n          memo[key] = fn.apply(_this, args);\n        }\n\n        return memo[key];\n      };\n    }({\n      /* storage */\n    });\n  } // mingo internal\n\n  /**\n   * Retrieve the value of a given key on an object\n   * @param obj\n   * @param field\n   * @returns {*}\n   * @private\n   */\n\n  function getValue(obj, field) {\n    return isObjectLike(obj) ? obj[field] : undefined;\n  }\n  /**\n   * Resolve the value of the field (dot separated) on the given object\n   * @param obj {Object} the object context\n   * @param selector {String} dot separated path to field\n   * @returns {*}\n   */\n\n  function resolve(obj, selector) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var depth = 0; // options\n\n    options.meta = options.meta || false;\n\n    function resolve2(o, path) {\n      var value = o;\n\n      for (var i = 0; i < path.length; i++) {\n        var field = path[i];\n        var isText = field.match(/^\\d+$/) === null;\n\n        if (isText && isArray(value)) {\n          // On the first iteration, we check if we received a stop flag.\n          // If so, we stop to prevent iterating over a nested array value\n          // on consecutive object keys in the selector.\n          if (i === 0 && depth > 0) break;\n          depth += 1;\n          path = path.slice(i);\n          value = reduce(value, function (acc, item) {\n            var v = resolve2(item, path);\n            if (v !== undefined) acc.push(v);\n            return acc;\n          }, []);\n          break;\n        } else {\n          value = getValue(value, field);\n        }\n\n        if (value === undefined) break;\n      }\n\n      return value;\n    }\n\n    obj = inArray(JS_SIMPLE_TYPES, jsType(obj)) ? obj : resolve2(obj, selector.split('.'));\n    return options.meta ? {\n      result: obj,\n      depth: depth\n    } : obj;\n  }\n  /**\n   * Returns the full object to the resolved value given by the selector.\n   * This function excludes empty values as they aren't practically useful.\n   *\n   * @param obj {Object} the object context\n   * @param selector {String} dot separated path to field\n   */\n\n  function resolveObj(obj, selector) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    // options\n    options.preserveMissingValues = options.preserveMissingValues || false;\n    var names = selector.split('.');\n    var key = names[0]; // get the next part of the selector\n\n    var next = names.length === 1 || names.slice(1).join('.');\n    var isIndex = key.match(/^\\d+$/) !== null;\n    var hasNext = names.length > 1;\n    var result;\n    var value;\n\n    try {\n      if (isArray(obj)) {\n        if (isIndex) {\n          result = getValue(obj, Number(key));\n\n          if (hasNext) {\n            result = resolveObj(result, next, options);\n          }\n\n          result = [result];\n        } else {\n          result = [];\n          each(obj, function (item) {\n            value = resolveObj(item, selector, options);\n\n            if (options.preserveMissingValues) {\n              if (value === undefined) {\n                value = MISSING;\n              }\n\n              result.push(value);\n            } else if (value !== undefined) {\n              result.push(value);\n            }\n          });\n        }\n      } else {\n        value = getValue(obj, key);\n\n        if (hasNext) {\n          value = resolveObj(value, next, options);\n        }\n\n        assert(value !== undefined);\n        result = {};\n        result[key] = value;\n      }\n    } catch (e) {\n      result = undefined;\n    }\n\n    return result;\n  }\n  /**\n   * Filter out all MISSING values from the object in-place\n   * @param {*} obj The object the filter\n   */\n\n  function filterMissing(obj) {\n    if (isArray(obj)) {\n      for (var i = obj.length - 1; i >= 0; i--) {\n        if (obj[i] === MISSING) {\n          obj.splice(i, 1);\n        } else {\n          filterMissing(obj[i]);\n        }\n      }\n    } else if (isObject(obj)) {\n      for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          filterMissing(obj[k]);\n        }\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Walk the object graph and execute the given transform function\n   * @param  {Object|Array} obj   The object to traverse\n   * @param  {String} selector    The selector\n   * @param  {Function} fn Function to execute for value at the end the traversal\n   * @param  {Boolean} force Force generating missing parts of object graph\n   * @return {*}\n   */\n\n  function traverse(obj, selector, fn) {\n    var force = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var names = selector.split('.');\n    var key = names[0];\n    var next = names.length === 1 || names.slice(1).join('.');\n\n    if (names.length === 1) {\n      fn(obj, key);\n    } else {\n      // force the rest of the graph while traversing\n      if (force === true && isNil(obj[key])) {\n        obj[key] = {};\n      }\n\n      traverse(obj[key], next, fn, force);\n    }\n  }\n  /**\n   * Set the value of the given object field\n   *\n   * @param obj {Object|Array} the object context\n   * @param selector {String} path to field\n   * @param value {*} the value to set\n   */\n\n  function setValue(obj, selector, value) {\n    traverse(obj, selector, function (item, key) {\n      item[key] = value;\n    }, true);\n  }\n  function removeValue(obj, selector) {\n    traverse(obj, selector, function (item, key) {\n      if (isArray(item) && /^\\d+$/.test(key)) {\n        item.splice(parseInt(key), 1);\n      } else if (isObject(item)) {\n        delete item[key];\n      }\n    });\n  }\n  /**\n   * Check whether the given name is an operator. We assume any field name starting with '$' is an operator.\n   * This is cheap and safe to do since keys beginning with '$' should be reserved for internal use.\n   * @param {String} name\n   */\n\n  function isOperator(name) {\n    return !!name && name[0] === '$';\n  }\n  /**\n   * Simplify expression for easy evaluation with query operators map\n   * @param expr\n   * @returns {*}\n   */\n\n  function normalize(expr) {\n    // normalized primitives\n    if (inArray(JS_SIMPLE_TYPES, jsType(expr))) {\n      return isRegExp(expr) ? {\n        '$regex': expr\n      } : {\n        '$eq': expr\n      };\n    } // normalize object expression\n\n\n    if (isObjectLike(expr)) {\n      var exprKeys = keys(expr); // no valid query operator found, so we do simple comparison\n\n      if (!exprKeys.some(isOperator)) {\n        return {\n          '$eq': expr\n        };\n      } // ensure valid regex\n\n\n      if (inArray(exprKeys, '$regex')) {\n        var regex = expr['$regex'];\n        var options = expr['$options'] || '';\n        var modifiers = '';\n\n        if (isString(regex)) {\n          modifiers += regex.ignoreCase || options.indexOf('i') >= 0 ? 'i' : '';\n          modifiers += regex.multiline || options.indexOf('m') >= 0 ? 'm' : '';\n          modifiers += regex.global || options.indexOf('g') >= 0 ? 'g' : '';\n          regex = new RegExp(regex, modifiers);\n        }\n\n        expr['$regex'] = regex;\n        delete expr['$options'];\n      }\n    }\n\n    return expr;\n  }\n  /**\n   * Returns a slice of the array\n   *\n   * @param  {Array} xs\n   * @param  {Number} skip\n   * @param  {Number} limit\n   * @return {Array}\n   */\n\n  function slice(xs, skip) {\n    var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    // MongoDB $slice works a bit differently from Array.slice\n    // Uses single argument for 'limit' and array argument [skip, limit]\n    if (isNil(limit)) {\n      if (skip < 0) {\n        skip = Math.max(0, xs.length + skip);\n        limit = xs.length - skip + 1;\n      } else {\n        limit = skip;\n        skip = 0;\n      }\n    } else {\n      if (skip < 0) {\n        skip = Math.max(0, xs.length + skip);\n      }\n\n      assert(limit > 0, 'Invalid argument value for $slice operator. Limit must be a positive number');\n      limit += skip;\n    }\n\n    return xs.slice(skip, limit);\n  }\n  /**\n   * Compute the standard deviation of the data set\n   * @param {Array} array of numbers\n   * @param {Boolean} if true calculates a sample standard deviation, otherwise calculates a population stddev\n   * @return {Number}\n   */\n\n  function stddev(data, sampled) {\n    var sum = reduce(data, function (acc, n) {\n      return acc + n;\n    }, 0);\n    var N = data.length || 1;\n    var correction = sampled && 1 || 0;\n    var avg = sum / N;\n    return Math.sqrt(reduce(data, function (acc, n) {\n      return acc + Math.pow(n - avg, 2);\n    }, 0) / (N - correction));\n  }\n  /**\n   * Exported to the users to allow writing custom operators\n   */\n\n  function moduleApi() {\n    return {\n      assert: assert,\n      clone: clone,\n      cloneDeep: cloneDeep,\n      each: each,\n      err: err,\n      hashCode: hashCode,\n      getType: getType,\n      has: has,\n      includes: inArray.bind(null),\n      isArray: isArray,\n      isBoolean: isBoolean,\n      isDate: isDate,\n      isEmpty: isEmpty,\n      isEqual: isEqual,\n      isFunction: isFunction,\n      isNil: isNil,\n      isNull: isNull,\n      isNumber: isNumber,\n      isObject: isObject,\n      isRegExp: isRegExp,\n      isString: isString,\n      isUndefined: isUndefined,\n      keys: keys,\n      reduce: reduce,\n      resolve: resolve,\n      resolveObj: resolveObj\n    };\n  }\n\n  var _internal = function _internal() {\n    return Object.assign({\n      computeValue: computeValue,\n      ops: ops\n    }, moduleApi());\n  }; // Settings used by Mingo internally\n\n  var settings = {\n    key: '_id'\n  };\n  /**\n   * Setup default settings for Mingo\n   * @param options\n   */\n\n  function setup(options) {\n    Object.assign(settings, options || {});\n  }\n  /**\n   * Implementation of system variables\n   * @type {Object}\n   */\n\n  var systemVariables = {\n    '$$ROOT': function $$ROOT(obj, expr, opt) {\n      return opt.root;\n    },\n    '$$CURRENT': function $$CURRENT(obj, expr, opt) {\n      return obj;\n    },\n    '$$REMOVE': function $$REMOVE(obj, expr, opt) {\n      return undefined;\n    }\n  };\n  /**\n   * Implementation of $redact variables\n   *\n   * Each function accepts 3 arguments (obj, expr, opt)\n   *\n   * @type {Object}\n   */\n\n  var redactVariables = {\n    '$$KEEP': function $$KEEP(obj) {\n      return obj;\n    },\n    '$$PRUNE': function $$PRUNE() {\n      return undefined;\n    },\n    '$$DESCEND': function $$DESCEND(obj, expr, opt) {\n      // traverse nested documents iff there is a $cond\n      if (!has(expr, '$cond')) return obj;\n      var result;\n      each(obj, function (current, key) {\n        if (isObjectLike(current)) {\n          if (isArray(current)) {\n            result = [];\n            each(current, function (elem) {\n              if (isObject(elem)) {\n                elem = redactObj(elem, expr, opt);\n              }\n\n              if (!isNil(elem)) result.push(elem);\n            });\n          } else {\n            result = redactObj(current, expr, opt);\n          }\n\n          if (isNil(result)) {\n            delete obj[key]; // pruned result\n          } else {\n            obj[key] = result;\n          }\n        }\n      });\n      return obj;\n    }\n  }; // system variables\n\n  var SYS_VARS = keys(systemVariables);\n  var REDACT_VARS = keys(redactVariables);\n  /**\n   * Returns the key used as the collection's objects ids\n   */\n\n  function idKey() {\n    return settings.key;\n  }\n  /**\n   * Returns the operators defined for the given operator classes\n   */\n\n  function ops() {\n    // Workaround for browser-compatibility bug: on iPhone 6S Safari (and\n    // probably some other platforms), `arguments` isn't detected as an array,\n    // but has a length field, so functions like `reduce` end up including the\n    // length field in their iteration. Copy to a real array.\n    var args = Array.prototype.slice.call(arguments);\n    return reduce(args, function (acc, cls) {\n      return into(acc, keys(OPERATORS[cls]));\n    }, []);\n  }\n  /**\n   * Returns the result of evaluating a $group operation over a collection\n   *\n   * @param collection\n   * @param field the name of the aggregate operator or field\n   * @param expr the expression of the aggregate operator for the field\n   * @returns {*}\n   */\n\n  function accumulate(collection, field, expr) {\n    if (has(OPERATORS[OP_GROUP], field)) {\n      return OPERATORS[OP_GROUP][field](collection, expr);\n    }\n\n    if (isObject(expr)) {\n      var result = {};\n      each(expr, function (val, key) {\n        result[key] = accumulate(collection, key, expr[key]); // must run ONLY one group operator per expression\n        // if so, return result of the computed value\n\n        if (has(OPERATORS[OP_GROUP], key)) {\n          result = result[key]; // if there are more keys in expression this is bad\n\n          assert(keys(expr).length === 1, \"Invalid $group expression '\" + JSON.stringify(expr) + \"'\");\n          return false; // break\n        }\n      });\n      return result;\n    }\n  }\n  /**\n   * Computes the actual value of the expression using the given object as context\n   *\n   * @param obj the current object from the collection\n   * @param expr the expression for the given field\n   * @param operator the operator to resolve the field with\n   * @param opt {Object} extra options\n   * @returns {*}\n   */\n\n  function computeValue(obj, expr) {\n    var operator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var opt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    opt.root = opt.root || obj; // if the field of the object is a valid operator\n\n    if (has(OPERATORS[OP_EXPRESSION], operator)) {\n      return OPERATORS[OP_EXPRESSION][operator](obj, expr, opt);\n    } // we also handle $group accumulator operators\n\n\n    if (has(OPERATORS[OP_GROUP], operator)) {\n      // we first fully resolve the expression\n      obj = computeValue(obj, expr, null, opt);\n      assert(isArray(obj), operator + ' expression must resolve to an array'); // we pass a null expression because all values have been resolved\n\n      return OPERATORS[OP_GROUP][operator](obj, null, opt);\n    } // if expr is a variable for an object field\n    // field not used in this case\n\n\n    if (isString(expr) && expr.length > 0 && expr[0] === '$') {\n      // we return system variables as literals\n      if (inArray(SYS_VARS, expr)) {\n        return systemVariables[expr](obj, null, opt);\n      } else if (inArray(REDACT_VARS, expr)) {\n        return expr;\n      } // handle selectors with explicit prefix\n\n\n      var sysVar = SYS_VARS.filter(function (v) {\n        return expr.indexOf(v + '.') === 0;\n      });\n\n      if (sysVar.length === 1) {\n        sysVar = sysVar[0];\n\n        if (sysVar === '$$ROOT') {\n          obj = opt.root;\n        }\n\n        expr = expr.substr(sysVar.length); // '.' prefix will be sliced off below\n      }\n\n      return resolve(obj, expr.slice(1));\n    } // check and return value if already in a resolved state\n\n\n    switch (jsType(expr)) {\n      case T_ARRAY:\n        return expr.map(function (item) {\n          return computeValue(obj, item);\n        });\n\n      case T_OBJECT:\n        var result = {};\n        each(expr, function (val, key) {\n          result[key] = computeValue(obj, val, key, opt); // must run ONLY one aggregate operator per expression\n          // if so, return result of the computed value\n\n          if ([OP_EXPRESSION, OP_GROUP].some(function (c) {\n            return has(OPERATORS[c], key);\n          })) {\n            // there should be only one operator\n            assert(keys(expr).length === 1, \"Invalid aggregation expression '\" + JSON.stringify(expr) + \"'\");\n            result = result[key];\n            return false; // break\n          }\n        });\n        return result;\n\n      default:\n        return expr;\n    }\n  }\n  /**\n   * Redact an object\n   * @param  {Object} obj The object to redact\n   * @param  {*} expr The redact expression\n   * @param  {*} opt  Options for value\n   * @return {*} Returns the redacted value\n   */\n\n  function redactObj(obj, expr) {\n    var opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    opt.root = opt.root || obj;\n    var result = computeValue(obj, expr, null, opt);\n    return inArray(REDACT_VARS, result) ? redactVariables[result](obj, expr, opt) : result;\n  }\n\n  /**\n   * Returns the absolute value of a number.\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/abs/#exp._S_abs\n   *\n   * @param obj\n   * @param expr\n   * @return {Number|null|NaN}\n   */\n\n  function $abs(obj, expr) {\n    var val = computeValue(obj, expr);\n    return val === null || val === undefined ? null : Math.abs(val);\n  }\n  /**\n   * Computes the sum of an array of numbers.\n   *\n   * @param obj\n   * @param expr\n   * @returns {Object}\n   */\n\n  function $add(obj, expr) {\n    var args = computeValue(obj, expr);\n    var foundDate = false;\n    var result = reduce(args, function (acc, val) {\n      if (isDate(val)) {\n        assert(!foundDate, \"'$add' can only have one date value\");\n        foundDate = true;\n        val = val.getTime();\n      } // assume val is a number\n\n\n      acc += val;\n      return acc;\n    }, 0);\n    return foundDate ? new Date(result) : result;\n  }\n  /**\n   * Returns the smallest integer greater than or equal to the specified number.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $ceil(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$ceil expression must resolve to a number.');\n    return Math.ceil(arg);\n  }\n  /**\n   * Takes two numbers and divides the first number by the second.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $divide(obj, expr) {\n    var args = computeValue(obj, expr);\n    return args[0] / args[1];\n  }\n  /**\n   * Raises Euler’s number (i.e. e ) to the specified exponent and returns the result.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $exp(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$exp expression must resolve to a number.');\n    return Math.exp(arg);\n  }\n  /**\n   * Returns the largest integer less than or equal to the specified number.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $floor(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$floor expression must resolve to a number.');\n    return Math.floor(arg);\n  }\n  /**\n   * Calculates the natural logarithm ln (i.e loge) of a number and returns the result as a double.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $ln(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$ln expression must resolve to a number.');\n    return Math.log(arg);\n  }\n  /**\n   * Calculates the log of a number in the specified base and returns the result as a double.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $log(obj, expr) {\n    var args = computeValue(obj, expr);\n    var msg = '$log expression must resolve to array(2) of numbers';\n    assert(isArray(args) && args.length === 2, msg);\n    if (args.some(isNil)) return null;\n    assert(args.some(isNaN) || args.every(isNumber), msg);\n    return Math.log10(args[0]) / Math.log10(args[1]);\n  }\n  /**\n   * Calculates the log base 10 of a number and returns the result as a double.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $log10(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$log10 expression must resolve to a number.');\n    return Math.log10(arg);\n  }\n  /**\n   * Takes two numbers and calculates the modulo of the first number divided by the second.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $mod(obj, expr) {\n    var args = computeValue(obj, expr);\n    return args[0] % args[1];\n  }\n  /**\n   * Computes the product of an array of numbers.\n   *\n   * @param obj\n   * @param expr\n   * @returns {Object}\n   */\n\n  function $multiply(obj, expr) {\n    var args = computeValue(obj, expr);\n    return reduce(args, function (acc, num) {\n      return acc * num;\n    }, 1);\n  }\n  /**\n   * Raises a number to the specified exponent and returns the result.\n   *\n   * @param obj\n   * @param expr\n   * @returns {Object}\n   */\n\n  function $pow(obj, expr) {\n    var args = computeValue(obj, expr);\n    assert(isArray(args) && args.length === 2 && args.every(isNumber), '$pow expression must resolve to array(2) of numbers');\n    assert(!(args[0] === 0 && args[1] < 0), '$pow cannot raise 0 to a negative exponent');\n    return Math.pow(args[0], args[1]);\n  }\n  /**\n   * Rounds a number to to a whole integer or to a specified decimal place.\n   * @param {*} obj\n   * @param {*} expr\n   */\n\n  function $round(obj, expr) {\n    var args = computeValue(obj, expr);\n    var num = args[0];\n    var place = args[1];\n    if (isNil(num) || isNaN(num) || Math.abs(num) === Infinity) return num;\n    assert(isNumber(num), '$round expression must resolve to a number.');\n    return truncate(num, place, true);\n  }\n  /**\n   * Calculates the square root of a positive number and returns the result as a double.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $sqrt(obj, expr) {\n    var n = computeValue(obj, expr);\n    if (isNil(n)) return null;\n    assert(isNumber(n) && n > 0 || isNaN(n), '$sqrt expression must resolve to non-negative number.');\n    return Math.sqrt(n);\n  }\n  /**\n   * Takes an array that contains two numbers or two dates and subtracts the second value from the first.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $subtract(obj, expr) {\n    var args = computeValue(obj, expr);\n    return args[0] - args[1];\n  }\n  /**\n   * Truncates a number to a whole integer or to a specified decimal place.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $trunc(obj, expr) {\n    var arr = computeValue(obj, expr);\n    var num = arr[0];\n    var places = arr[1];\n    if (isNil(num) || isNaN(num) || Math.abs(num) === Infinity) return num;\n    assert(isNumber(num), '$trunc expression must resolve to a number.');\n    assert(isNil(places) || isNumber(places) && places > -20 && places < 100, \"$trunc expression has invalid place\");\n    return truncate(num, places, false);\n  }\n  /**\n   * Truncates integer value to number of places. If roundOff is specified round value instead to the number of places\n   * @param {Number} num\n   * @param {Number} places\n   * @param {Boolean} roundOff\n   */\n\n  function truncate(num, places, roundOff) {\n    places = places || 0;\n    var sign = Math.abs(num) === num ? 1 : -1;\n    num = Math.abs(num);\n    var result = Math.trunc(num);\n    var decimals = num - result;\n\n    if (places === 0) {\n      var firstDigit = Math.trunc(10 * decimals);\n\n      if (roundOff && (result & 1) === 1 && firstDigit >= 5) {\n        result++;\n      }\n    } else if (places > 0) {\n      var offset = Math.pow(10, places);\n      var remainder = Math.trunc(decimals * offset); // last digit before cut off\n\n      var lastDigit = Math.trunc(decimals * offset * 10) % 10; // add one if last digit is greater than 5\n\n      if (roundOff && lastDigit > 5) {\n        remainder += 1;\n      } // compute decimal remainder and add to whole number\n\n\n      result += remainder / offset;\n    } else if (places < 0) {\n      // handle negative decimal places\n      var _offset = Math.pow(10, -1 * places);\n\n      var excess = result % _offset;\n      result = Math.max(0, result - excess); // for negative values the absolute must increase so we round up the last digit if >= 5\n\n      if (roundOff && sign === -1) {\n        while (excess > 10) {\n          excess -= excess % 10;\n        }\n\n        if (result > 0 && excess >= 5) {\n          result += _offset;\n        }\n      }\n    }\n\n    return result * sign;\n  }\n\n  /**\n   * Returns the element at the specified array index.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $arrayElemAt(obj, expr) {\n    var arr = computeValue(obj, expr);\n    assert(isArray(arr) && arr.length === 2, '$arrayElemAt expression must resolve to array(2)');\n    assert(isArray(arr[0]), 'First operand to $arrayElemAt must resolve to an array');\n    assert(isNumber(arr[1]), 'Second operand to $arrayElemAt must resolve to an integer');\n    var idx = arr[1];\n    arr = arr[0];\n\n    if (idx < 0 && Math.abs(idx) <= arr.length) {\n      return arr[idx + arr.length];\n    } else if (idx >= 0 && idx < arr.length) {\n      return arr[idx];\n    }\n\n    return undefined;\n  }\n  /**\n   * Converts an array of key value pairs to a document.\n   */\n\n  function $arrayToObject(obj, expr) {\n    var arr = computeValue(obj, expr);\n    assert(isArray(arr), '$arrayToObject expression must resolve to an array');\n    return reduce(arr, function (newObj, val) {\n      if (isArray(val) && val.length == 2) {\n        newObj[val[0]] = val[1];\n      } else {\n        assert(isObject(val) && has(val, 'k') && has(val, 'v'), '$arrayToObject expression is invalid.');\n        newObj[val.k] = val.v;\n      }\n\n      return newObj;\n    }, {});\n  }\n  /**\n   * Concatenates arrays to return the concatenated array.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $concatArrays(obj, expr) {\n    var arr = computeValue(obj, expr, null);\n    assert(isArray(arr), '$concatArrays must resolve to an array');\n    if (arr.some(isNil)) return null;\n    return arr.reduce(function (acc, item) {\n      return into(acc, item);\n    }, []);\n  }\n  /**\n   * Selects a subset of the array to return an array with only the elements that match the filter condition.\n   *\n   * @param  {Object} obj  [description]\n   * @param  {*} expr [description]\n   * @return {*}      [description]\n   */\n\n  function $filter(obj, expr) {\n    var input = computeValue(obj, expr.input);\n    var asVar = expr['as'];\n    var condExpr = expr['cond'];\n    assert(isArray(input), \"$filter 'input' expression must resolve to an array\");\n    return input.filter(function (o) {\n      // inject variable\n      var tempObj = {};\n      tempObj['$' + asVar] = o;\n      return computeValue(tempObj, condExpr) === true;\n    });\n  }\n  /**\n   * Returns a boolean indicating whether a specified value is in an array.\n   *\n   * @param {Object} obj\n   * @param {Array} expr\n   */\n\n  function $in(obj, expr) {\n    var val = computeValue(obj, expr[0]);\n    var arr = computeValue(obj, expr[1]);\n    assert(isArray(arr), '$in second argument must be an array');\n    return arr.some(isEqual.bind(null, val));\n  }\n  /**\n   * Searches an array for an occurrence of a specified value and returns the array index of the first occurrence.\n   * If the substring is not found, returns -1.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $indexOfArray(obj, expr) {\n    var args = computeValue(obj, expr);\n    if (isNil(args)) return null;\n    var arr = args[0];\n    var searchValue = args[1];\n    if (isNil(arr)) return null;\n    assert(isArray(arr), '$indexOfArray expression must resolve to an array.');\n    var start = args[2] || 0;\n    var end = args[3];\n    if (isNil(end)) end = arr.length;\n    if (start > end) return -1;\n    assert(start >= 0 && end >= 0, '$indexOfArray expression is invalid');\n\n    if (start > 0 || end < arr.length) {\n      arr = arr.slice(start, end);\n    }\n\n    return arr.findIndex(isEqual.bind(null, searchValue)) + start;\n  }\n  /**\n   * Determines if the operand is an array. Returns a boolean.\n   *\n   * @param  {Object}  obj\n   * @param  {*}  expr\n   * @return {Boolean}\n   */\n\n  function $isArray(obj, expr) {\n    return isArray(computeValue(obj, expr[0]));\n  }\n  /**\n   * Applies a sub-expression to each element of an array and returns the array of resulting values in order.\n   *\n   * @param obj\n   * @param expr\n   * @returns {Array|*}\n   */\n\n  function $map(obj, expr) {\n    var inputExpr = computeValue(obj, expr.input);\n    assert(isArray(inputExpr), \"$map 'input' expression must resolve to an array\");\n    var asExpr = expr['as'];\n    var inExpr = expr['in']; // HACK: add the \"as\" expression as a value on the object to take advantage of \"resolve()\"\n    // which will reduce to that value when invoked. The reference to the as expression will be prefixed with \"$$\".\n    // But since a \"$\" is stripped of before passing the name to \"resolve()\" we just need to prepend \"$\" to the key.\n\n    var tempKey = '$' + asExpr;\n    return inputExpr.map(function (item) {\n      obj[tempKey] = item;\n      return computeValue(obj, inExpr);\n    });\n  }\n  /**\n   * Converts a document to an array of documents representing key-value pairs.\n   */\n\n  function $objectToArray(obj, expr) {\n    var val = computeValue(obj, expr);\n    assert(isObject(val), '$objectToArray expression must resolve to an object');\n    var arr = [];\n    each(val, function (v, k) {\n      return arr.push({\n        k: k,\n        v: v\n      });\n    });\n    return arr;\n  }\n  /**\n   * Returns an array whose elements are a generated sequence of numbers.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $range(obj, expr) {\n    var arr = computeValue(obj, expr);\n    var start = arr[0];\n    var end = arr[1];\n    var step = arr[2] || 1;\n    var result = [];\n\n    while (start < end && step > 0 || start > end && step < 0) {\n      result.push(start);\n      start += step;\n    }\n\n    return result;\n  }\n  /**\n   * Applies an expression to each element in an array and combines them into a single value.\n   *\n   * @param {Object} obj\n   * @param {*} expr\n   */\n\n  function $reduce(obj, expr) {\n    var input = computeValue(obj, expr.input);\n    var initialValue = computeValue(obj, expr.initialValue);\n    var inExpr = expr['in'];\n    if (isNil(input)) return null;\n    assert(isArray(input), \"$reduce 'input' expression must resolve to an array\");\n    return reduce(input, function (acc, n) {\n      return computeValue({\n        '$value': acc,\n        '$this': n\n      }, inExpr);\n    }, initialValue);\n  }\n  /**\n   * Returns an array with the elements in reverse order.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $reverseArray(obj, expr) {\n    var arr = computeValue(obj, expr);\n    if (isNil(arr)) return null;\n    assert(isArray(arr), '$reverseArray expression must resolve to an array');\n    var result = [];\n    into(result, arr);\n    result.reverse();\n    return result;\n  }\n  /**\n   * Counts and returns the total the number of items in an array.\n   *\n   * @param obj\n   * @param expr\n   */\n\n  function $size(obj, expr) {\n    var value = computeValue(obj, expr);\n    return isArray(value) ? value.length : undefined;\n  }\n  /**\n   * Returns a subset of an array.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $slice(obj, expr) {\n    var arr = computeValue(obj, expr);\n    return slice(arr[0], arr[1], arr[2]);\n  }\n  /**\n   * Merge two lists together.\n   *\n   * Transposes an array of input arrays so that the first element of the output array would be an array containing,\n   * the first element of the first input array, the first element of the second input array, etc.\n   *\n   * @param  {Obj} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $zip(obj, expr) {\n    var inputs = computeValue(obj, expr.inputs);\n    var useLongestLength = expr.useLongestLength || false;\n    assert(isArray(inputs), \"'inputs' expression must resolve to an array\");\n    assert(isBoolean(useLongestLength), \"'useLongestLength' must be a boolean\");\n\n    if (isArray(expr.defaults)) {\n      assert(truthy(useLongestLength), \"'useLongestLength' must be set to true to use 'defaults'\");\n    }\n\n    var zipCount = 0;\n\n    for (var i = 0, len = inputs.length; i < len; i++) {\n      var arr = inputs[i];\n      if (isNil(arr)) return null;\n      assert(isArray(arr), \"'inputs' expression values must resolve to an array or null\");\n      zipCount = useLongestLength ? Math.max(zipCount, arr.length) : Math.min(zipCount || arr.length, arr.length);\n    }\n\n    var result = [];\n    var defaults = expr.defaults || [];\n\n    var _loop = function _loop(_i) {\n      var temp = inputs.map(function (val, index) {\n        return isNil(val[_i]) ? defaults[index] || null : val[_i];\n      });\n      result.push(temp);\n    };\n\n    for (var _i = 0; _i < zipCount; _i++) {\n      _loop(_i);\n    }\n\n    return result;\n  }\n  /**\n   * Combines multiple documents into a single document.\n   * @param {*} obj\n   * @param {*} expr\n   */\n\n  function $mergeObjects(obj, expr) {\n    var docs = computeValue(obj, expr);\n\n    if (isArray(docs)) {\n      return reduce(docs, function (memo, o) {\n        return Object.assign(memo, o);\n      }, {});\n    }\n\n    return {};\n  }\n\n  /**\n   * Returns true only when all its expressions evaluate to true. Accepts any number of argument expressions.\n   *\n   * @param obj\n   * @param expr\n   * @returns {boolean}\n   */\n\n  function $and(obj, expr) {\n    var value = computeValue(obj, expr);\n    return truthy(value) && value.every(truthy);\n  }\n  /**\n   * Returns true when any of its expressions evaluates to true. Accepts any number of argument expressions.\n   *\n   * @param obj\n   * @param expr\n   * @returns {boolean}\n   */\n\n  function $or(obj, expr) {\n    var value = computeValue(obj, expr);\n    return truthy(value) && value.some(truthy);\n  }\n  /**\n   * Returns the boolean value that is the opposite of its argument expression. Accepts a single argument expression.\n   *\n   * @param obj\n   * @param expr\n   * @returns {boolean}\n   */\n\n  function $not(obj, expr) {\n    return !computeValue(obj, expr[0]);\n  }\n\n  /**\n   * Returns an iterator\n   * @param {*} source An iterable source (Array, Function, Object{next:Function})\n   */\n  function Lazy(source) {\n    return source instanceof Iterator ? source : new Iterator(source);\n  }\n  Lazy.isIterator = isIterator;\n  /**\n   * Checks whether the given object is compatible with iterator i.e Object{next:Function}\n   * @param {*} o An object\n   */\n\n  function isIterator(o) {\n    return !!o && _typeof(o) === 'object' && isFn(o.next);\n  }\n\n  function isFn(f) {\n    return !!f && typeof f === 'function';\n  }\n\n  function dropItem(array, i) {\n    var rest = array.slice(i + 1);\n    array.splice(i);\n    Array.prototype.push.apply(array, rest);\n  } // stop iteration error\n\n\n  var DONE = new Error(); // Lazy function type flags\n\n  var LAZY_MAP = 1;\n  var LAZY_FILTER = 2;\n  var LAZY_TAKE = 3;\n  var LAZY_DROP = 4;\n\n  function baseIterator(nextFn, iteratees, buffer) {\n    var done = false;\n    var index = -1;\n\n    var bIndex = 0; // index for the buffer\n\n    return function (b) {\n      // special hack to collect all values into buffer\n      b = b === buffer;\n\n      try {\n        outer: while (!done) {\n          var o = nextFn();\n          index++;\n          var mIndex = -1;\n          var mSize = iteratees.length;\n          var innerDone = false;\n\n          while (++mIndex < mSize) {\n            var member = iteratees[mIndex],\n                func = member.func,\n                type = member.type;\n\n            switch (type) {\n              case LAZY_MAP:\n                o = func(o, index);\n                break;\n\n              case LAZY_FILTER:\n                if (!func(o, index)) continue outer;\n                break;\n\n              case LAZY_TAKE:\n                --member.func;\n                if (!member.func) innerDone = true;\n                break;\n\n              case LAZY_DROP:\n                --member.func;\n                if (!member.func) dropItem(iteratees, mIndex);\n                continue outer;\n\n              default:\n                break outer;\n            }\n          }\n\n          done = innerDone;\n\n          if (b) {\n            buffer[bIndex++] = o;\n          } else {\n            return {\n              value: o,\n              done: false\n            };\n          }\n        }\n      } catch (e) {\n        if (e !== DONE) throw e;\n      }\n\n      done = true;\n      return {\n        done: true\n      };\n    };\n  }\n\n  var Iterator = /*#__PURE__*/function () {\n    /**\n     * @param {*} source An iterable object or function.\n     *    Array - return one element per cycle\n     *    Object{next:Function} - call next() for the next value (this also handles generator functions)\n     *    Function - call to return the next value\n     * @param {Function} fn An optional transformation function\n     */\n    function Iterator(source) {\n      _classCallCheck(this, Iterator);\n\n      this.__iteratees = []; // lazy function chain\n\n      this.__first = false; // flag whether to return a single value\n\n      this.__done = false;\n      this.__buf = [];\n\n      if (isFn(source)) {\n        // make iterable\n        source = {\n          next: source\n        };\n      }\n\n      if (isIterator(source)) {\n        var src = source;\n\n        source = function source() {\n          var o = src.next();\n          if (o.done) throw DONE;\n          return o.value;\n        };\n      } else if (Array.isArray(source)) {\n        var data = source;\n        var size = data.length;\n        var index = 0;\n\n        source = function source() {\n          if (index < size) return data[index++];\n          throw DONE;\n        };\n      } else if (!isFn(source)) {\n        throw new Error(\"Source is not iterable. Must be Array, Function or Object{next:Function}\");\n      } // create next function\n\n\n      this.next = baseIterator(source, this.__iteratees, this.__buf);\n    }\n\n    _createClass(Iterator, [{\n      key: \"_validate\",\n      value: function _validate() {\n        if (this.__first) throw new Error(\"Cannot add iteratee/transform after `first()`\");\n      }\n      /**\n       * Add an iteratee to this lazy sequence\n       * @param {Object} iteratee\n       */\n\n    }, {\n      key: \"_push\",\n      value: function _push(iteratee) {\n        this._validate();\n\n        this.__iteratees.push(iteratee);\n\n        return this;\n      } // Iteratees methods\n\n      /**\n       * Transform each item in the sequence to a new value\n       * @param {Function} f\n       */\n\n    }, {\n      key: \"map\",\n      value: function map(f) {\n        return this._push({\n          type: LAZY_MAP,\n          func: f\n        });\n      }\n      /**\n       * Select only items matching the given predicate\n       * @param {Function} pred\n       */\n\n    }, {\n      key: \"filter\",\n      value: function filter(pred) {\n        return this._push({\n          type: LAZY_FILTER,\n          func: pred\n        });\n      }\n      /**\n       * Take given numbe for values from sequence\n       * @param {Number} n A number greater than 0\n       */\n\n    }, {\n      key: \"take\",\n      value: function take(n) {\n        return n > 0 ? this._push({\n          type: LAZY_TAKE,\n          func: n\n        }) : this;\n      }\n      /**\n       * Drop a number of values from the sequence\n       * @param {Number} n Number of items to drop greater than 0\n       */\n\n    }, {\n      key: \"drop\",\n      value: function drop(n) {\n        return n > 0 ? this._push({\n          type: LAZY_DROP,\n          func: n\n        }) : this;\n      } // Transformations\n\n      /**\n       * Returns a new lazy object with results of the transformation\n       * The entire sequence is realized.\n       *\n       * @param {Function} fn Tranform function of type (Array) => (Any)\n       */\n\n    }, {\n      key: \"transform\",\n      value: function transform(fn) {\n        this._validate();\n\n        var self = this;\n        var iter;\n        return Lazy(function () {\n          if (!iter) {\n            iter = Lazy(fn(self.value()));\n          }\n\n          return iter.next();\n        });\n      }\n      /**\n       * Mark this lazy object to return only the first result on `lazy.value()`.\n       * No more iteratees or transformations can be added after this method is called.\n       */\n\n    }, {\n      key: \"first\",\n      value: function first() {\n        this.take(1);\n        this.__first = true;\n        return this;\n      } // Terminal methods\n\n      /**\n       * Returns the fully realized values of the iterators.\n       * The return value will be an array unless `lazy.first()` was used.\n       * The realized values are cached for subsequent calls\n       */\n\n    }, {\n      key: \"value\",\n      value: function value() {\n        if (!this.__done) {\n          this.__done = this.next(this.__buf).done;\n        }\n\n        return this.__first ? this.__buf[0] : this.__buf;\n      }\n      /**\n       * Execute the funcion for each value. Will stop when an execution returns false.\n       * @param {Function} f\n       * @returns {Boolean} false iff `f` return false for any execution, otherwise true\n       */\n\n    }, {\n      key: \"each\",\n      value: function each(f) {\n        while (1) {\n          var o = this.next();\n          if (o.done) break;\n          if (f(o.value) === false) return false;\n        }\n\n        return true;\n      }\n      /**\n       * Returns the reduction of sequence according the reducing function\n       *\n       * @param {*} f a reducing function\n       * @param {*} init\n       */\n\n    }, {\n      key: \"reduce\",\n      value: function reduce(f, init) {\n        var o = this.next();\n        var i = 0;\n\n        if (init === undefined && !o.done) {\n          init = o.value;\n          o = this.next();\n          i++;\n        }\n\n        while (!o.done) {\n          init = f(init, o.value, i++);\n          o = this.next();\n        }\n\n        return init;\n      }\n      /**\n       * Returns the number of matched items in the sequence\n       */\n\n    }, {\n      key: \"size\",\n      value: function size() {\n        return this.reduce(function (acc, n) {\n          return ++acc;\n        }, 0);\n      }\n    }]);\n\n    return Iterator;\n  }();\n\n  if (typeof Symbol === 'function') {\n    Iterator.prototype[Symbol.iterator] = function () {\n      return this;\n    };\n  }\n\n  /**\n   * Aggregator for defining filter using mongoDB aggregation pipeline syntax\n   *\n   * @param operators an Array of pipeline operators\n   * @constructor\n   */\n\n  var Aggregator = /*#__PURE__*/function () {\n    function Aggregator(operators, options) {\n      _classCallCheck(this, Aggregator);\n\n      this.__operators = operators;\n      this.__options = options;\n    }\n    /**\n     * Returns an `Lazy` iterator for processing results of pipeline\n     *\n     * @param {*} collection An array or iterator object\n     * @param {Query} query the `Query` object to use as context\n     * @returns {Iterator} an iterator object\n     */\n\n\n    _createClass(Aggregator, [{\n      key: \"stream\",\n      value: function stream(collection, query) {\n        var _this = this;\n\n        collection = Lazy(collection);\n        var pipelineOperators = OPERATORS[OP_PIPELINE];\n\n        if (!isEmpty(this.__operators)) {\n          // run aggregation pipeline\n          each(this.__operators, function (operator) {\n            var key = keys(operator);\n            assert(key.length === 1 && inArray(ops(OP_PIPELINE), key[0]), \"invalid aggregation operator \".concat(key));\n            key = key[0];\n\n            if (query && query instanceof Query) {\n              collection = pipelineOperators[key].call(query, collection, operator[key], _this.__options);\n            } else {\n              collection = pipelineOperators[key](collection, operator[key], _this.__options);\n            }\n          });\n        }\n\n        return collection;\n      }\n      /**\n       * Return the results of the aggregation as an array.\n       * @param {*} collection\n       * @param {*} query\n       */\n\n    }, {\n      key: \"run\",\n      value: function run(collection, query) {\n        return this.stream(collection, query).value();\n      }\n    }]);\n\n    return Aggregator;\n  }();\n  /**\n   * Return the result collection after running the aggregation pipeline for the given collection.\n   * Shorthand for `(new Aggregator(pipeline, options)).run(collection)`\n   *\n   * @param {Array} collection Collection or stream of objects\n   * @param {Array} pipeline The pipeline operators to use\n   * @returns {Array}\n   */\n\n  function aggregate(collection, pipeline, options) {\n    assert(isArray(pipeline), 'Aggregation pipeline must be an array');\n    return new Aggregator(pipeline, options).run(collection);\n  }\n\n  /**\n   * Cursor to iterate and perform filtering on matched objects\n   * @param collection\n   * @param query\n   * @param projection\n   * @constructor\n   */\n\n  var Cursor = /*#__PURE__*/function () {\n    function Cursor(source, query, projection) {\n      _classCallCheck(this, Cursor);\n\n      this.__filterFn = query.test.bind(query);\n      this.__query = query;\n      this.__source = source;\n      this.__projection = projection || query.__projection;\n      this.__operators = [];\n      this.__result = null;\n      this.__stack = [];\n      this.__options = {};\n    }\n\n    _createClass(Cursor, [{\n      key: \"_fetch\",\n      value: function _fetch() {\n        if (!!this.__result) return this.__result; // add projection operator\n\n        if (isObject(this.__projection)) this.__operators.push({\n          '$project': this.__projection\n        }); // filter collection\n\n        this.__result = Lazy(this.__source).filter(this.__filterFn);\n\n        if (this.__operators.length > 0) {\n          this.__result = new Aggregator(this.__operators, this.__options).stream(this.__result, this.__query);\n        }\n\n        return this.__result;\n      }\n      /**\n       * Return remaining objects in the cursor as an array. This method exhausts the cursor\n       * @returns {Array}\n       */\n\n    }, {\n      key: \"all\",\n      value: function all() {\n        return this._fetch().value();\n      }\n      /**\n       * Returns the number of objects return in the cursor. This method exhausts the cursor\n       * @returns {Number}\n       */\n\n    }, {\n      key: \"count\",\n      value: function count() {\n        return this.all().length;\n      }\n      /**\n       * Returns a cursor that begins returning results only after passing or skipping a number of documents.\n       * @param {Number} n the number of results to skip.\n       * @return {Cursor} Returns the cursor, so you can chain this call.\n       */\n\n    }, {\n      key: \"skip\",\n      value: function skip(n) {\n        this.__operators.push({\n          '$skip': n\n        });\n\n        return this;\n      }\n      /**\n       * Constrains the size of a cursor's result set.\n       * @param {Number} n the number of results to limit to.\n       * @return {Cursor} Returns the cursor, so you can chain this call.\n       */\n\n    }, {\n      key: \"limit\",\n      value: function limit(n) {\n        this.__operators.push({\n          '$limit': n\n        });\n\n        return this;\n      }\n      /**\n       * Returns results ordered according to a sort specification.\n       * @param {Object} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending\n       * @return {Cursor} Returns the cursor, so you can chain this call.\n       */\n\n    }, {\n      key: \"sort\",\n      value: function sort(modifier) {\n        this.__operators.push({\n          '$sort': modifier\n        });\n\n        return this;\n      }\n      /**\n       * Specifies the collation for the cursor returned by the `mingo.Query.find`\n       * @param {*} options\n       */\n\n    }, {\n      key: \"collation\",\n      value: function collation(options) {\n        this.__options['collation'] = options;\n        return this;\n      }\n      /**\n       * Returns the next document in a cursor.\n       * @returns {Object | Boolean}\n       */\n\n    }, {\n      key: \"next\",\n      value: function next() {\n        if (!this.__stack) return; // done\n\n        if (this.__stack.length > 0) return this.__stack.pop(); // yield value obtains in hasNext()\n\n        var o = this._fetch().next();\n\n        if (!o.done) return o.value;\n        this.__stack = null;\n        return;\n      }\n      /**\n       * Returns true if the cursor has documents and can be iterated.\n       * @returns {boolean}\n       */\n\n    }, {\n      key: \"hasNext\",\n      value: function hasNext() {\n        if (!this.__stack) return false; // done\n\n        if (this.__stack.length > 0) return true; // there is a value on stack\n\n        var o = this._fetch().next();\n\n        if (!o.done) {\n          this.__stack.push(o.value);\n        } else {\n          this.__stack = null;\n        }\n\n        return !!this.__stack;\n      }\n      /**\n       * Applies a function to each document in a cursor and collects the return values in an array.\n       * @param callback\n       * @returns {Array}\n       */\n\n    }, {\n      key: \"map\",\n      value: function map(callback) {\n        return this._fetch().map(callback).value();\n      }\n      /**\n       * Applies a JavaScript function for every document in a cursor.\n       * @param callback\n       */\n\n    }, {\n      key: \"forEach\",\n      value: function forEach(callback) {\n        this._fetch().each(callback);\n      }\n    }]);\n\n    return Cursor;\n  }();\n\n  if (typeof Symbol === 'function') {\n    /**\n     * Applies an [ES2015 Iteration protocol][] compatible implementation\n     * [ES2015 Iteration protocol]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n     * @returns {Object}\n     */\n    Cursor.prototype[Symbol.iterator] = function () {\n      return this._fetch();\n    };\n  }\n\n  /**\n   * Query object to test collection elements with\n   * @param criteria the pass criteria for the query\n   * @param projection optional projection specifiers\n   * @constructor\n   */\n\n  var Query = /*#__PURE__*/function () {\n    function Query(criteria, projection) {\n      _classCallCheck(this, Query);\n\n      this.__criteria = criteria;\n      this.__projection = projection || {};\n      this.__compiled = [];\n\n      this._compile();\n    }\n\n    _createClass(Query, [{\n      key: \"_compile\",\n      value: function _compile() {\n        var _this = this;\n\n        assert(isObject(this.__criteria), 'query criteria must be an object');\n        var whereOperator;\n        each(this.__criteria, function (expr, field) {\n          // save $where operators to be executed after other operators\n          if ('$where' === field) {\n            whereOperator = {\n              field: field,\n              expr: expr\n            };\n          } else if ('$expr' === field) {\n            _this._processOperator(field, field, expr);\n          } else if (inArray(['$and', '$or', '$nor'], field)) {\n            _this._processOperator(field, field, expr);\n          } else {\n            // normalize expression\n            assert(!isOperator(field), \"unknown top level operator: \".concat(field));\n            expr = normalize(expr);\n            each(expr, function (val, op) {\n              _this._processOperator(field, op, val);\n            });\n          }\n\n          if (isObject(whereOperator)) {\n            _this._processOperator(whereOperator.field, whereOperator.field, whereOperator.expr);\n          }\n        });\n      }\n    }, {\n      key: \"_processOperator\",\n      value: function _processOperator(field, operator, value) {\n        assert(has(OPERATORS[OP_QUERY], operator), \"invalid query operator \".concat(operator, \" detected\"));\n\n        this.__compiled.push(OPERATORS[OP_QUERY][operator](field, value));\n      }\n      /**\n       * Checks if the object passes the query criteria. Returns true if so, false otherwise.\n       * @param obj\n       * @returns {boolean}\n       */\n\n    }, {\n      key: \"test\",\n      value: function test(obj) {\n        for (var i = 0, len = this.__compiled.length; i < len; i++) {\n          if (!this.__compiled[i](obj)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n      /**\n       * Performs a query on a collection and returns a cursor object.\n       * @param collection\n       * @param projection\n       * @returns {Cursor}\n       */\n\n    }, {\n      key: \"find\",\n      value: function find(collection, projection) {\n        return new Cursor(collection, this, projection);\n      }\n      /**\n       * Remove matched documents from the collection returning the remainder\n       * @param collection\n       * @returns {Array}\n       */\n\n    }, {\n      key: \"remove\",\n      value: function remove(collection) {\n        var _this2 = this;\n\n        return reduce(collection, function (acc, obj) {\n          if (!_this2.test(obj)) acc.push(obj);\n          return acc;\n        }, []);\n      }\n    }]);\n\n    return Query;\n  }();\n  /**\n   * Performs a query on a collection and returns a cursor object.\n   *\n   * @param collection\n   * @param criteria\n   * @param projection\n   * @returns {Cursor}\n   */\n\n  function find(collection, criteria, projection) {\n    return new Query(criteria).find(collection, projection);\n  }\n  /**\n   * Returns a new array without objects which match the criteria\n   *\n   * @param collection\n   * @param criteria\n   * @returns {Array}\n   */\n\n  function remove(collection, criteria) {\n    return new Query(criteria).remove(collection);\n  }\n\n  /**\n   * Query and Projection Operators. https://docs.mongodb.com/manual/reference/operator/query/\n   */\n  /**\n   * Checks that two values are equal.\n   *\n   * @param a         The lhs operand as resolved from the object by the given selector\n   * @param b         The rhs operand provided by the user\n   * @returns {*}\n   */\n\n  function $eq(a, b) {\n    // start with simple equality check\n    if (isEqual(a, b)) return true; // https://docs.mongodb.com/manual/tutorial/query-for-null-fields/\n\n    if (isNil(a) && isNil(b)) return true; // check\n\n    if (isArray(a)) {\n      var eq = isEqual.bind(null, b);\n      return a.some(eq) || flatten(a, 1).some(eq);\n    }\n\n    return false;\n  }\n  /**\n   * Matches all values that are not equal to the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $ne(a, b) {\n    return !$eq(a, b);\n  }\n  /**\n   * Matches any of the values that exist in an array specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {*}\n   */\n\n  function $in$1(a, b) {\n    // queries for null should be able to find undefined fields\n    if (isNil(a)) return b.some(isNull);\n    return intersection(ensureArray(a), b).length > 0;\n  }\n  /**\n   * Matches values that do not exist in an array specified to the query.\n   *\n   * @param a\n   * @param b\n   * @returns {*|boolean}\n   */\n\n  function $nin(a, b) {\n    return !$in$1(a, b);\n  }\n  /**\n   * Matches values that are less than the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $lt(a, b) {\n    return compare$1(a, b, function (x, y) {\n      return x < y;\n    });\n  }\n  /**\n   * Matches values that are less than or equal to the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $lte(a, b) {\n    return compare$1(a, b, function (x, y) {\n      return x <= y;\n    });\n  }\n  /**\n   * Matches values that are greater than the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $gt(a, b) {\n    return compare$1(a, b, function (x, y) {\n      return x > y;\n    });\n  }\n  /**\n   * Matches values that are greater than or equal to the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $gte(a, b) {\n    return compare$1(a, b, function (x, y) {\n      return x >= y;\n    });\n  }\n  /**\n   * Performs a modulo operation on the value of a field and selects documents with a specified result.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $mod$1(a, b) {\n    return ensureArray(a).some(function (x) {\n      return isNumber(x) && isArray(b) && b.length === 2 && x % b[0] === b[1];\n    });\n  }\n  /**\n   * Selects documents where values match a specified regular expression.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $regex(a, b) {\n    a = ensureArray(a);\n\n    var match = function match(x) {\n      return isString(x) && !!x.match(b);\n    };\n\n    return a.some(match) || flatten(a, 1).some(match);\n  }\n  /**\n   * Matches documents that have the specified field.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $exists(a, b) {\n    return (b === false || b === 0) && a === undefined || (b === true || b === 1) && a !== undefined;\n  }\n  /**\n   * Matches arrays that contain all elements specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns boolean\n   */\n\n  function $all(a, b) {\n    var matched = false;\n\n    if (isArray(a) && isArray(b)) {\n      for (var i = 0, len = b.length; i < len; i++) {\n        if (isObject(b[i]) && inArray(keys(b[i]), '$elemMatch')) {\n          matched = matched || $elemMatch(a, b[i].$elemMatch);\n        } else {\n          // order of arguments matter\n          return intersection(b, a).length === len;\n        }\n      }\n    }\n\n    return matched;\n  }\n  /**\n   * Selects documents if the array field is a specified size.\n   *\n   * @param a\n   * @param b\n   * @returns {*|boolean}\n   */\n\n  function $size$1(a, b) {\n    return isArray(a) && isNumber(b) && a.length === b;\n  }\n  /**\n   * Selects documents if element in the array field matches all the specified $elemMatch condition.\n   *\n   * @param a {Array} element to match against\n   * @param b {Object} subquery\n   */\n\n  function $elemMatch(a, b) {\n    if (isArray(a) && !isEmpty(a)) {\n      var format = function format(x) {\n        return x;\n      };\n\n      var criteria = b; // If we find an operator in the subquery, we fake a field to point to it.\n      // This is an attempt to ensure that it a valid criteria.\n\n      if (keys(b).every(isOperator)) {\n        criteria = {\n          temp: b\n        };\n\n        format = function format(x) {\n          return {\n            temp: x\n          };\n        };\n      }\n\n      var query = new Query(criteria);\n\n      for (var i = 0, len = a.length; i < len; i++) {\n        if (query.test(format(a[i]))) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Selects documents if a field is of the specified type.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $type(a, b) {\n    switch (b) {\n      case 1:\n      case 'double':\n        return isNumber(a) && (a + '').indexOf('.') !== -1;\n\n      case 2:\n      case T_STRING:\n        return isString(a);\n\n      case 3:\n      case T_OBJECT:\n        return isObject(a);\n\n      case 4:\n      case T_ARRAY:\n        return isArray(a);\n\n      case 6:\n      case T_UNDEFINED:\n        return isNil(a);\n\n      case 8:\n      case T_BOOL:\n        return isBoolean(a);\n\n      case 9:\n      case T_DATE:\n        return isDate(a);\n\n      case 10:\n      case T_NULL:\n        return isNull(a);\n\n      case 11:\n      case T_REGEX:\n        return isRegExp(a);\n\n      case 16:\n      case 'int':\n        return isNumber(a) && a <= 2147483647 && (a + '').indexOf('.') === -1;\n\n      case 18:\n      case 'long':\n        return isNumber(a) && a > 2147483647 && a <= 9223372036854775807 && (a + '').indexOf('.') === -1;\n\n      case 19:\n      case 'decimal':\n        return isNumber(a);\n\n      default:\n        return false;\n    }\n  }\n\n  function compare$1(a, b, f) {\n    return ensureArray(a).some(function (x) {\n      return getType(x) === getType(b) && f(x, b);\n    });\n  }\n\n  function createComparison(f) {\n    return function (obj, expr) {\n      var args = computeValue(obj, expr);\n      return f(args[0], args[1]);\n    };\n  }\n\n  var $eq$1 = createComparison($eq);\n  var $ne$1 = createComparison($ne);\n  var $gt$1 = createComparison($gt);\n  var $lt$1 = createComparison($lt);\n  var $gte$1 = createComparison($gte);\n  var $lte$1 = createComparison($lte);\n  var $nin$1 = createComparison($nin);\n  /**\n   * Compares two values and returns the result of the comparison as an integer.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $cmp(obj, expr) {\n    var args = computeValue(obj, expr);\n    if (args[0] > args[1]) return 1;\n    if (args[0] < args[1]) return -1;\n    return 0;\n  }\n\n  /**\n   * Conditional operators\n   */\n  /**\n   * A ternary operator that evaluates one expression,\n   * and depending on the result returns the value of one following expressions.\n   *\n   * @param obj\n   * @param expr\n   */\n\n  function $cond(obj, expr) {\n    var ifExpr, thenExpr, elseExpr;\n    var errorMsg = '$cond: invalid arguments';\n\n    if (isArray(expr)) {\n      assert(expr.length === 3, errorMsg);\n      ifExpr = expr[0];\n      thenExpr = expr[1];\n      elseExpr = expr[2];\n    } else {\n      assert(isObject(expr), errorMsg);\n      ifExpr = expr['if'];\n      thenExpr = expr['then'];\n      elseExpr = expr['else'];\n    }\n\n    var condition = computeValue(obj, ifExpr);\n    return condition ? computeValue(obj, thenExpr) : computeValue(obj, elseExpr);\n  }\n  /**\n   * An operator that evaluates a series of case expressions. When it finds an expression which\n   * evaluates to true, it returns the resulting expression for that case. If none of the cases\n   * evaluate to true, it returns the default expression.\n   *\n   * @param obj\n   * @param expr\n   */\n\n  function $switch(obj, expr) {\n    var errorMsg = 'Invalid arguments for $switch operator';\n    assert(expr.branches, errorMsg);\n    var validBranch = expr.branches.find(function (branch) {\n      assert(branch['case'] && branch['then'], errorMsg);\n      return computeValue(obj, branch['case']);\n    });\n\n    if (validBranch) {\n      return computeValue(obj, validBranch.then);\n    } else {\n      assert(expr['default'], errorMsg);\n      return computeValue(obj, expr[\"default\"]);\n    }\n  }\n  /**\n   * Evaluates an expression and returns the first expression if it evaluates to a non-null value.\n   * Otherwise, $ifNull returns the second expression's value.\n   *\n   * @param obj\n   * @param expr\n   * @returns {*}\n   */\n\n  function $ifNull(obj, expr) {\n    assert(isArray(expr) && expr.length === 2, '$ifNull expression must resolve to array(2)');\n    var args = computeValue(obj, expr);\n    return isNil(args[0]) ? args[1] : args[0];\n  }\n\n  /**\n   * Returns the day of the year for a date as a number between 1 and 366 (leap year).\n   * @param obj\n   * @param expr\n   */\n\n  function $dayOfYear(obj, expr) {\n    var d = computeValue(obj, expr);\n    var start = new Date(d.getFullYear(), 0, 0);\n    var diff = d - start;\n    var oneDay = 1000 * 60 * 60 * 24;\n    return Math.round(diff / oneDay);\n  }\n  /**\n   * Returns the day of the month for a date as a number between 1 and 31.\n   * @param obj\n   * @param expr\n   */\n\n  function $dayOfMonth(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getDate();\n  }\n  /**\n   * Returns the day of the week for a date as a number between 1 (Sunday) and 7 (Saturday).\n   * @param obj\n   * @param expr\n   */\n\n  function $dayOfWeek(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getDay() + 1;\n  }\n  /**\n   * Returns the year for a date as a number (e.g. 2014).\n   * @param obj\n   * @param expr\n   */\n\n  function $year(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getFullYear();\n  }\n  /**\n   * Returns the month for a date as a number between 1 (January) and 12 (December).\n   * @param obj\n   * @param expr\n   */\n\n  function $month(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getMonth() + 1;\n  }\n  /**\n   * Returns the week number for a date as a number between 0\n   * (the partial week that precedes the first Sunday of the year) and 53 (leap year).\n   * @param obj\n   * @param expr\n   */\n\n  function $week(obj, expr) {\n    // source: http://stackoverflow.com/a/6117889/1370481\n    var d = computeValue(obj, expr); // Copy date so don't modify original\n\n    d = new Date(+d);\n    d.setHours(0, 0, 0); // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n\n    d.setDate(d.getDate() + 4 - (d.getDay() || 7)); // Get first day of year\n\n    var yearStart = new Date(d.getFullYear(), 0, 1); // Calculate full weeks to nearest Thursday\n\n    return Math.floor(((d - yearStart) / 8.64e7 + 1) / 7);\n  }\n  /**\n   * Returns the hour for a date as a number between 0 and 23.\n   * @param obj\n   * @param expr\n   */\n\n  function $hour(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getUTCHours();\n  }\n  /**\n   * Returns the minute for a date as a number between 0 and 59.\n   * @param obj\n   * @param expr\n   */\n\n  function $minute(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getMinutes();\n  }\n  /**\n   * Returns the seconds for a date as a number between 0 and 60 (leap seconds).\n   * @param obj\n   * @param expr\n   */\n\n  function $second(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getSeconds();\n  }\n  /**\n   * Returns the milliseconds of a date as a number between 0 and 999.\n   * @param obj\n   * @param expr\n   */\n\n  function $millisecond(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getMilliseconds();\n  } // used for formatting dates in $dateToString operator\n\n  var DATE_SYM_TABLE = {\n    '%Y': [$year, 4],\n    '%m': [$month, 2],\n    '%d': [$dayOfMonth, 2],\n    '%H': [$hour, 2],\n    '%M': [$minute, 2],\n    '%S': [$second, 2],\n    '%L': [$millisecond, 3],\n    '%j': [$dayOfYear, 3],\n    '%w': [$dayOfWeek, 1],\n    '%U': [$week, 2],\n    '%%': '%'\n  };\n  /**\n   * Returns the date as a formatted string.\n   *\n   * %Y  Year (4 digits, zero padded)  0000-9999\n   * %m  Month (2 digits, zero padded)  01-12\n   * %d  Day of Month (2 digits, zero padded)  01-31\n   * %H  Hour (2 digits, zero padded, 24-hour clock)  00-23\n   * %M  Minute (2 digits, zero padded)  00-59\n   * %S  Second (2 digits, zero padded)  00-60\n   * %L  Millisecond (3 digits, zero padded)  000-999\n   * %j  Day of year (3 digits, zero padded)  001-366\n   * %w  Day of week (1-Sunday, 7-Saturday)  1-7\n   * %U  Week of year (2 digits, zero padded)  00-53\n   * %%  Percent Character as a Literal  %\n   *\n   * @param obj current object\n   * @param expr operator expression\n   */\n\n  function $dateToString(obj, expr) {\n    var fmt = expr['format'];\n    var date = computeValue(obj, expr['date']);\n    var matches = fmt.match(/(%%|%Y|%m|%d|%H|%M|%S|%L|%j|%w|%U)/g);\n\n    for (var i = 0, len = matches.length; i < len; i++) {\n      var hdlr = DATE_SYM_TABLE[matches[i]];\n      var value = hdlr;\n\n      if (isArray(hdlr)) {\n        // reuse date operators\n        var fn = hdlr[0];\n        var pad = hdlr[1];\n        value = padDigits(fn(obj, date), pad);\n      } // replace the match with resolved value\n\n\n      fmt = fmt.replace(matches[i], value);\n    }\n\n    return fmt;\n  }\n\n  function padDigits(number, digits) {\n    return new Array(Math.max(digits - String(number).length + 1, 0)).join('0') + number;\n  }\n\n  /**\n   * Return a value without parsing.\n   * @param obj\n   * @param expr\n   */\n  function $literal(obj, expr) {\n    return expr;\n  }\n\n  /**\n   * Returns true if two sets have the same elements.\n   * @param obj\n   * @param expr\n   */\n\n  function $setEquals(obj, expr) {\n    var args = computeValue(obj, expr);\n    var xs = unique(args[0]);\n    var ys = unique(args[1]);\n    return xs.length === ys.length && xs.length === intersection(xs, ys).length;\n  }\n  /**\n   * Returns the common elements of the input sets.\n   * @param obj\n   * @param expr\n   */\n\n  function $setIntersection(obj, expr) {\n    var args = computeValue(obj, expr);\n    return intersection(args[0], args[1]);\n  }\n  /**\n   * Returns elements of a set that do not appear in a second set.\n   * @param obj\n   * @param expr\n   */\n\n  function $setDifference(obj, expr) {\n    var args = computeValue(obj, expr);\n    return args[0].filter(notInArray.bind(null, args[1]));\n  }\n  /**\n   * Returns a set that holds all elements of the input sets.\n   * @param obj\n   * @param expr\n   */\n\n  function $setUnion(obj, expr) {\n    var args = computeValue(obj, expr);\n    return union(args[0], args[1]);\n  }\n  /**\n   * Returns true if all elements of a set appear in a second set.\n   * @param obj\n   * @param expr\n   */\n\n  function $setIsSubset(obj, expr) {\n    var args = computeValue(obj, expr);\n    return intersection(args[0], args[1]).length === args[0].length;\n  }\n  /**\n   * Returns true if any elements of a set evaluate to true, and false otherwise.\n   * @param obj\n   * @param expr\n   */\n\n  function $anyElementTrue(obj, expr) {\n    // mongodb nests the array expression in another\n    var args = computeValue(obj, expr)[0];\n    return args.some(truthy);\n  }\n  /**\n   * Returns true if all elements of a set evaluate to true, and false otherwise.\n   * @param obj\n   * @param expr\n   */\n\n  function $allElementsTrue(obj, expr) {\n    // mongodb nests the array expression in another\n    var args = computeValue(obj, expr)[0];\n    return args.every(truthy);\n  }\n\n  /**\n   * Concatenates two strings.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string|*}\n   */\n\n  function $concat(obj, expr) {\n    var args = computeValue(obj, expr); // does not allow concatenation with nulls\n\n    if ([null, undefined].some(inArray.bind(null, args))) return null;\n    return args.join('');\n  }\n  /**\n   * Searches a string for an occurrence of a substring and returns the UTF-8 code point index of the first occurence.\n   * If the substring is not found, returns -1.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $indexOfBytes(obj, expr) {\n    var arr = computeValue(obj, expr);\n    var errorMsg = '$indexOfBytes expression resolves to invalid an argument';\n    if (isNil(arr[0])) return null;\n    assert(isString(arr[0]) && isString(arr[1]), errorMsg);\n    var str = arr[0];\n    var searchStr = arr[1];\n    var start = arr[2];\n    var end = arr[3];\n    var valid = isNil(start) || isNumber(start) && start >= 0 && Math.round(start) === start;\n    valid = valid && (isNil(end) || isNumber(end) && end >= 0 && Math.round(end) === end);\n    assert(valid, errorMsg);\n    start = start || 0;\n    end = end || str.length;\n    if (start > end) return -1;\n    var index = str.substring(start, end).indexOf(searchStr);\n    return index > -1 ? index + start : index;\n  }\n  /**\n   * Splits a string into substrings based on a delimiter.\n   * If the delimiter is not found within the string, returns an array containing the original string.\n   *\n   * @param  {Object} obj\n   * @param  {Array} expr\n   * @return {Array} Returns an array of substrings.\n   */\n\n  function $split(obj, expr) {\n    var args = computeValue(obj, expr);\n    if (isNil(args[0])) return null;\n    assert(args.every(isString), '$split expression must result to array(2) of strings');\n    return args[0].split(args[1]);\n  }\n  /**\n   * Returns the number of UTF-8 encoded bytes in the specified string.\n   *\n   * @param  {Object} obj\n   * @param  {String} expr\n   * @return {Number}\n   */\n\n  function $strLenBytes(obj, expr) {\n    return ~-encodeURI(computeValue(obj, expr)).split(/%..|./).length;\n  }\n  /**\n   * Returns the number of UTF-8 code points in the specified string.\n   *\n   * @param  {Object} obj\n   * @param  {String} expr\n   * @return {Number}\n   */\n\n  function $strLenCP(obj, expr) {\n    return computeValue(obj, expr).length;\n  }\n  /**\n   * Compares two strings and returns an integer that reflects the comparison.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $strcasecmp(obj, expr) {\n    var args = computeValue(obj, expr);\n    var a = args[0];\n    var b = args[1];\n    if (isEqual(a, b) || args.every(isNil)) return 0;\n    assert(args.every(isString), '$strcasecmp must resolve to array(2) of strings');\n    a = a.toUpperCase();\n    b = b.toUpperCase();\n    return a > b && 1 || a < b && -1 || 0;\n  }\n  /**\n   * Returns a substring of a string, starting at a specified index position and including the specified number of characters.\n   * The index is zero-based.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string}\n   */\n\n  function $substrBytes(obj, expr) {\n    var args = computeValue(obj, expr);\n    var s = args[0];\n    var index = args[1];\n    var count = args[2];\n    assert(isString(s) && isNumber(index) && index >= 0 && isNumber(count) && count >= 0, '$substrBytes: invalid arguments');\n    var buf = utf8Encode(s);\n    var validIndex = [];\n    var acc = 0;\n\n    for (var i = 0; i < buf.length; i++) {\n      validIndex.push(acc);\n      acc += buf[i].length;\n    }\n\n    var begin = validIndex.indexOf(index);\n    var end = validIndex.indexOf(index + count);\n    assert(begin > -1 && end > -1, '$substrBytes: invalid range, start or end index is a UTF-8 continuation byte.');\n    return s.substring(begin, end);\n  }\n  /**\n   * Returns a substring of a string, starting at a specified index position and including the specified number of characters.\n   * The index is zero-based.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string}\n   */\n\n  function $substr(obj, expr) {\n    var args = computeValue(obj, expr);\n    var s = args[0];\n    var index = args[1];\n    var count = args[2];\n\n    if (isString(s)) {\n      if (index < 0) {\n        return '';\n      } else if (count < 0) {\n        return s.substr(index);\n      } else {\n        return s.substr(index, count);\n      }\n    }\n\n    return '';\n  }\n  function $substrCP(obj, expr) {\n    return $substr(obj, expr);\n  }\n  /**\n   * Converts a string to lowercase.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string}\n   */\n\n  function $toLower(obj, expr) {\n    var value = computeValue(obj, expr);\n    return isEmpty(value) ? '' : value.toLowerCase();\n  }\n  /**\n   * Converts a string to uppercase.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string}\n   */\n\n  function $toUpper(obj, expr) {\n    var value = computeValue(obj, expr);\n    return isEmpty(value) ? '' : value.toUpperCase();\n  }\n  var UTF8_MASK = [0xC0, 0xE0, 0xF0]; // encodes a unicode code point to a utf8 byte sequence\n  // https://encoding.spec.whatwg.org/#utf-8\n\n  function toUtf8(n) {\n    if (n < 0x80) return [n];\n    var count = n < 0x0800 && 1 || n < 0x10000 && 2 || 3;\n    var offset = UTF8_MASK[count - 1];\n    var utf8 = [(n >> 6 * count) + offset];\n\n    while (count > 0) {\n      utf8.push(0x80 | n >> 6 * --count & 0x3F);\n    }\n\n    return utf8;\n  }\n\n  function utf8Encode(s) {\n    var buf = [];\n\n    for (var i = 0, len = s.length; i < len; i++) {\n      buf.push(toUtf8(s.codePointAt(i)));\n    }\n\n    return buf;\n  }\n\n  /**\n   * Aggregation framework variable operators\n   */\n  /**\n   * Defines variables for use within the scope of a sub-expression and returns the result of the sub-expression.\n   *\n   * @param obj\n   * @param expr\n   * @returns {*}\n   */\n\n  function $let(obj, expr) {\n    var varsExpr = expr['vars'];\n    var inExpr = expr['in']; // resolve vars\n\n    var varsKeys = keys(varsExpr);\n    each(varsKeys, function (key) {\n      var val = computeValue(obj, varsExpr[key]);\n      var tempKey = '$' + key;\n      obj[tempKey] = val;\n    });\n    return computeValue(obj, inExpr);\n  }\n\n  var expressionOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $abs: $abs,\n    $add: $add,\n    $ceil: $ceil,\n    $divide: $divide,\n    $exp: $exp,\n    $floor: $floor,\n    $ln: $ln,\n    $log: $log,\n    $log10: $log10,\n    $mod: $mod,\n    $multiply: $multiply,\n    $pow: $pow,\n    $round: $round,\n    $sqrt: $sqrt,\n    $subtract: $subtract,\n    $trunc: $trunc,\n    $arrayElemAt: $arrayElemAt,\n    $arrayToObject: $arrayToObject,\n    $concatArrays: $concatArrays,\n    $filter: $filter,\n    $in: $in,\n    $indexOfArray: $indexOfArray,\n    $isArray: $isArray,\n    $map: $map,\n    $objectToArray: $objectToArray,\n    $range: $range,\n    $reduce: $reduce,\n    $reverseArray: $reverseArray,\n    $size: $size,\n    $slice: $slice,\n    $zip: $zip,\n    $mergeObjects: $mergeObjects,\n    $and: $and,\n    $or: $or,\n    $not: $not,\n    $eq: $eq$1,\n    $ne: $ne$1,\n    $gt: $gt$1,\n    $lt: $lt$1,\n    $gte: $gte$1,\n    $lte: $lte$1,\n    $nin: $nin$1,\n    $cmp: $cmp,\n    $cond: $cond,\n    $switch: $switch,\n    $ifNull: $ifNull,\n    $dayOfYear: $dayOfYear,\n    $dayOfMonth: $dayOfMonth,\n    $dayOfWeek: $dayOfWeek,\n    $year: $year,\n    $month: $month,\n    $week: $week,\n    $hour: $hour,\n    $minute: $minute,\n    $second: $second,\n    $millisecond: $millisecond,\n    $dateToString: $dateToString,\n    $literal: $literal,\n    $setEquals: $setEquals,\n    $setIntersection: $setIntersection,\n    $setDifference: $setDifference,\n    $setUnion: $setUnion,\n    $setIsSubset: $setIsSubset,\n    $anyElementTrue: $anyElementTrue,\n    $allElementsTrue: $allElementsTrue,\n    $concat: $concat,\n    $indexOfBytes: $indexOfBytes,\n    $split: $split,\n    $strLenBytes: $strLenBytes,\n    $strLenCP: $strLenCP,\n    $strcasecmp: $strcasecmp,\n    $substrBytes: $substrBytes,\n    $substr: $substr,\n    $substrCP: $substrCP,\n    $toLower: $toLower,\n    $toUpper: $toUpper,\n    $let: $let\n  });\n\n  /**\n   * Returns an array of all values for the selected field among for each document in that group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {Array|*}\n   */\n\n  function $push(collection, expr) {\n    if (isNil(expr)) return collection;\n    return collection.map(function (obj) {\n      return computeValue(obj, expr);\n    });\n  }\n\n  /**\n   * Returns an array of all the unique values for the selected field among for each document in that group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $addToSet(collection, expr) {\n    return unique($push(collection, expr));\n  }\n\n  /**\n   * Returns an average of all the values in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {number}\n   */\n\n  function $avg(collection, expr) {\n    var data = $push(collection, expr).filter(isNumber);\n    var sum = reduce(data, function (acc, n) {\n      return acc + n;\n    }, 0);\n    return sum / (data.length || 1);\n  }\n\n  /**\n   * Returns the first value in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $first(collection, expr) {\n    return collection.length > 0 ? computeValue(collection[0], expr) : undefined;\n  }\n\n  /**\n   * Returns the last value in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $last(collection, expr) {\n    return collection.length > 0 ? computeValue(collection[collection.length - 1], expr) : undefined;\n  }\n\n  /**\n   * Returns the highest value in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $max(collection, expr) {\n    return reduce($push(collection, expr), function (acc, n) {\n      return isNil(acc) || n > acc ? n : acc;\n    }, undefined);\n  }\n\n  /**\n   * Combines multiple documents into a single document.\n   *\n   * @param collection\n   * @param expr\n   * @returns {Array|*}\n   */\n\n  function $mergeObjects$1(collection, expr) {\n    return reduce(collection, function (memo, o) {\n      return Object.assign(memo, computeValue(o, expr));\n    }, {});\n  }\n\n  /**\n   * Returns the lowest value in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $min(collection, expr) {\n    return reduce($push(collection, expr), function (acc, n) {\n      return isNil(acc) || n < acc ? n : acc;\n    }, undefined);\n  }\n\n  /**\n   * Returns the population standard deviation of the input values.\n   *\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @return {Number}\n   */\n\n  function $stdDevPop(collection, expr) {\n    return stddev($push(collection, expr).filter(isNumber), false);\n  }\n\n  /**\n   * Returns the sample standard deviation of the input values.\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @return {Number|null}\n   */\n\n  function $stdDevSamp(collection, expr) {\n    return stddev($push(collection, expr).filter(isNumber), true);\n  }\n\n  /**\n   * Returns the sum of all the values in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $sum(collection, expr) {\n    if (!isArray(collection)) return 0; // take a short cut if expr is number literal\n\n    if (isNumber(expr)) return collection.length * expr;\n    return reduce($push(collection, expr).filter(isNumber), function (acc, n) {\n      return acc + n;\n    }, 0);\n  }\n\n  /**\n   * Group stage Accumulator Operators. https://docs.mongodb.com/manual/reference/operator/aggregation-\n   */\n\n  var groupOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $addToSet: $addToSet,\n    $avg: $avg,\n    $first: $first,\n    $last: $last,\n    $max: $max,\n    $mergeObjects: $mergeObjects$1,\n    $min: $min,\n    $push: $push,\n    $stdDevPop: $stdDevPop,\n    $stdDevSamp: $stdDevSamp,\n    $sum: $sum\n  });\n\n  /**\n   * Adds new fields to documents.\n   * Outputs documents that contain all existing fields from the input documents and newly added fields.\n   *\n   * @param {Array} collection\n   * @param {*} expr\n   * @param {Object} opt Pipeline options\n   */\n\n  function $addFields(collection, expr, opt) {\n    var newFields = keys(expr);\n    if (newFields.length === 0) return collection;\n    return collection.map(function (obj) {\n      var newObj = cloneDeep(obj);\n      each(newFields, function (field) {\n        var newValue = computeValue(obj, expr[field]);\n        setValue(newObj, field, newValue);\n      });\n      return newObj;\n    });\n  }\n  /**\n   * Alias for $addFields.\n   */\n\n  var $set = $addFields;\n\n  /**\n   * Categorizes incoming documents into groups, called buckets, based on a specified expression and bucket boundaries.\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/bucket/\n   *\n   * @param {*} collection\n   * @param {*} expr\n   * @param {Object} opt Pipeline options\n   */\n\n  function $bucket(collection, expr, opt) {\n    var boundaries = expr.boundaries;\n    var defaultKey = expr['default'];\n    var lower = boundaries[0]; // inclusive\n\n    var upper = boundaries[boundaries.length - 1]; // exclusive\n\n    var outputExpr = expr.output || {\n      'count': {\n        '$sum': 1\n      }\n    };\n    assert(boundaries.length > 2, \"$bucket 'boundaries' expression must have at least 3 elements\");\n    var boundType = getType(lower);\n\n    for (var i = 0, len = boundaries.length - 1; i < len; i++) {\n      assert(boundType === getType(boundaries[i + 1]), \"$bucket 'boundaries' must all be of the same type\");\n      assert(boundaries[i] < boundaries[i + 1], \"$bucket 'boundaries' must be sorted in ascending order\");\n    }\n\n    !isNil(defaultKey) && getType(expr[\"default\"]) === getType(lower) && assert(lower > expr[\"default\"] || upper < expr[\"default\"], \"$bucket 'default' expression must be out of boundaries range\");\n    var grouped = {};\n    each(boundaries, function (k) {\n      return grouped[k] = [];\n    }); // add default key if provided\n\n    if (!isNil(defaultKey)) grouped[defaultKey] = [];\n    var iterator = false;\n    return Lazy(function () {\n      if (!iterator) {\n        collection.each(function (obj) {\n          var key = computeValue(obj, expr.groupBy);\n\n          if (isNil(key) || key < lower || key >= upper) {\n            assert(!isNil(defaultKey), '$bucket require a default for out of range values');\n            grouped[defaultKey].push(obj);\n          } else {\n            assert(key >= lower && key < upper, \"$bucket 'groupBy' expression must resolve to a value in range of boundaries\");\n            var index = findInsertIndex(boundaries, key);\n            var boundKey = boundaries[Math.max(0, index - 1)];\n            grouped[boundKey].push(obj);\n          }\n        }); // upper bound is exclusive so we remove it\n\n        boundaries.pop();\n        if (!isNil(defaultKey)) boundaries.push(defaultKey);\n        iterator = Lazy(boundaries).map(function (key) {\n          var acc = accumulate(grouped[key], null, outputExpr);\n          return Object.assign(acc, {\n            '_id': key\n          });\n        });\n      }\n\n      return iterator.next();\n    });\n  }\n\n  /**\n   * Categorizes incoming documents into a specific number of groups, called buckets,\n   * based on a specified expression. Bucket boundaries are automatically determined\n   * in an attempt to evenly distribute the documents into the specified number of buckets.\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/bucketAuto/\n   *\n   * @param {*} collection\n   * @param {*} expr\n   * @param {*} opt Pipeline options\n   */\n\n  function $bucketAuto(collection, expr, opt) {\n    var outputExpr = expr.output || {\n      'count': {\n        '$sum': 1\n      }\n    };\n    var groupByExpr = expr.groupBy;\n    var bucketCount = expr.buckets;\n    assert(bucketCount > 0, \"The $bucketAuto 'buckets' field must be greater than 0, but found: \" + bucketCount);\n    return collection.transform(function (coll) {\n      var approxBucketSize = Math.max(1, Math.round(coll.length / bucketCount));\n      var computeValueOptimized = memoize(computeValue);\n      var grouped = {};\n      var remaining = [];\n      var sorted = sortBy(coll, function (o) {\n        var key = computeValueOptimized(o, groupByExpr);\n\n        if (isNil(key)) {\n          remaining.push(o);\n        } else {\n          grouped[key] || (grouped[key] = []);\n          grouped[key].push(o);\n        }\n\n        return key;\n      });\n      var ID_KEY = idKey();\n      var result = [];\n      var index = 0; // counter for sorted collection\n\n      for (var i = 0, len = sorted.length; i < bucketCount && index < len; i++) {\n        var boundaries = {};\n        var bucketItems = [];\n\n        for (var j = 0; j < approxBucketSize && index < len; j++) {\n          var key = computeValueOptimized(sorted[index], groupByExpr);\n          if (isNil(key)) key = null; // populate current bucket with all values for current key\n\n          into(bucketItems, isNil(key) ? remaining : grouped[key]); // increase sort index by number of items added\n\n          index += isNil(key) ? remaining.length : grouped[key].length; // set the min key boundary if not already present\n\n          if (!has(boundaries, 'min')) boundaries.min = key;\n\n          if (result.length > 0) {\n            var lastBucket = result[result.length - 1];\n            lastBucket[ID_KEY].max = boundaries.min;\n          }\n        } // if is last bucket add remaining items\n\n\n        if (i == bucketCount - 1) {\n          into(bucketItems, sorted.slice(index));\n        }\n\n        result.push(Object.assign(accumulate(bucketItems, null, outputExpr), {\n          '_id': boundaries\n        }));\n      }\n\n      if (result.length > 0) {\n        result[result.length - 1][ID_KEY].max = computeValueOptimized(sorted[sorted.length - 1], groupByExpr);\n      }\n\n      return result;\n    });\n  }\n\n  /**\n   * Returns a document that contains a count of the number of documents input to the stage.\n   *\n   * @param  {Array} collection\n   * @param  {String} expr\n   * @param {Object} opt Pipeline options\n   * @return {Object}\n   */\n\n  function $count(collection, expr, opt) {\n    assert(isString(expr) && expr.trim() !== '' && expr.indexOf('.') === -1 && expr.trim()[0] !== '$', 'Invalid expression value for $count');\n    return Lazy(function () {\n      var o = {};\n      o[expr] = collection.size();\n      return {\n        value: o,\n        done: false\n      };\n    }).first();\n  }\n\n  /**\n   * Processes multiple aggregation pipelines within a single stage on the same set of input documents.\n   * Enables the creation of multi-faceted aggregations capable of characterizing data across multiple dimensions, or facets, in a single stage.\n   */\n\n  function $facet(collection, expr, opt) {\n    return collection.transform(function (array) {\n      return [objectMap(expr, function (pipeline) {\n        return aggregate(array, pipeline);\n      })];\n    });\n  }\n\n  /**\n   * Groups documents together for the purpose of calculating aggregate values based on a collection of documents.\n   *\n   * @param collection\n   * @param expr\n   * @param opt Pipeline options\n   * @returns {Array}\n   */\n\n  function $group(collection, expr, opt) {\n    // lookup key for grouping\n    var ID_KEY = idKey();\n    var id = expr[ID_KEY];\n    return collection.transform(function (coll) {\n      var partitions = groupBy(coll, function (obj) {\n        return computeValue(obj, id, id);\n      }); // remove the group key\n\n      expr = clone(expr);\n      delete expr[ID_KEY];\n      var i = -1;\n      var size = partitions.keys.length;\n      return function () {\n        if (++i === size) return {\n          done: true\n        };\n        var value = partitions.keys[i];\n        var obj = {}; // exclude undefined key value\n\n        if (value !== undefined) {\n          obj[ID_KEY] = value;\n        } // compute remaining keys in expression\n\n\n        each(expr, function (val, key) {\n          obj[key] = accumulate(partitions.groups[i], key, val);\n        });\n        return {\n          value: obj,\n          done: false\n        };\n      };\n    });\n  }\n\n  /**\n   * Restricts the number of documents in an aggregation pipeline.\n   *\n   * @param collection\n   * @param value\n   * @param opt\n   * @returns {Object|*}\n   */\n  function $limit(collection, value, opt) {\n    return collection.take(value);\n  }\n\n  /**\n   * Performs a left outer join to another collection in the same database to filter in documents from the “joined” collection for processing.\n   *\n   * @param collection\n   * @param expr\n   * @param opt\n   */\n\n  function $lookup(collection, expr, opt) {\n    var joinColl = expr.from;\n    var localField = expr.localField;\n    var foreignField = expr.foreignField;\n    var asField = expr.as;\n    assert(isArray(joinColl) && isString(foreignField) && isString(localField) && isString(asField), '$lookup: invalid argument');\n    var hash = {};\n    each(joinColl, function (obj) {\n      var k = hashCode(resolve(obj, foreignField));\n      hash[k] = hash[k] || [];\n      hash[k].push(obj);\n    });\n    return collection.map(function (obj) {\n      var k = hashCode(resolve(obj, localField));\n      var newObj = clone(obj);\n      newObj[asField] = hash[k] || [];\n      return newObj;\n    });\n  }\n\n  /**\n   * Filters the document stream, and only allows matching documents to pass into the next pipeline stage.\n   * $match uses standard MongoDB queries.\n   *\n   * @param collection\n   * @param expr\n   * @param opt\n   * @returns {Array|*}\n   */\n\n  function $match(collection, expr, opt) {\n    var q = new Query(expr);\n    return collection.filter(function (o) {\n      return q.test(o);\n    });\n  }\n\n  /**\n   * Takes the documents returned by the aggregation pipeline and writes them to a specified collection.\n   *\n   * Unlike the $out operator in MongoDB, this operator can appear in any position in the pipeline and is\n   * useful for collecting intermediate results of an aggregation operation.\n   *\n   * @param collection\n   * @param expr\n   * @param opt\n   * @returns {*}\n   */\n\n  function $out(collection, expr, opt) {\n    assert(isArray(expr), '$out expression must be an array');\n    return collection.map(function (o) {\n      expr.push(o);\n      return o; // passthrough\n    });\n  }\n\n  /**\n   * Reshapes a document stream.\n   * $project can rename, add, or remove fields as well as create computed values and sub-documents.\n   *\n   * @param collection\n   * @param expr\n   * @param opt\n   * @returns {Array}\n   */\n\n  function $project(collection, expr, opt) {\n    if (isEmpty(expr)) return collection; // result collection\n\n    var expressionKeys = keys(expr);\n    var idOnlyExcludedExpression = false;\n    var ID_KEY = idKey(); // validate inclusion and exclusion\n\n    validateExpression(expr);\n\n    if (inArray(expressionKeys, ID_KEY)) {\n      var id = expr[ID_KEY];\n\n      if (id === 0 || id === false) {\n        expressionKeys = expressionKeys.filter(notInArray.bind(null, [ID_KEY]));\n        assert(notInArray(expressionKeys, ID_KEY), 'Must not contain collections id key');\n        idOnlyExcludedExpression = isEmpty(expressionKeys);\n      }\n    } else {\n      // if not specified the add the ID field\n      expressionKeys.push(ID_KEY);\n    }\n\n    return collection.map(function (obj) {\n      return processObject(obj, expr, expressionKeys, idOnlyExcludedExpression);\n    });\n  }\n  /**\n   * Process the expression value for $project operators\n   *\n   * @param {Object} obj The object to use as context\n   * @param {Object} expr The experssion object of $project operator\n   * @param {Array} expressionKeys The key in the 'expr' object\n   * @param {Boolean} idOnlyExcludedExpression Boolean value indicating whether only the ID key is excluded\n   */\n\n  function processObject(obj, expr, expressionKeys, idOnlyExcludedExpression) {\n    var ID_KEY = idKey();\n    var newObj = {};\n    var foundSlice = false;\n    var foundExclusion = false;\n    var dropKeys = [];\n\n    if (idOnlyExcludedExpression) {\n      dropKeys.push(ID_KEY);\n    }\n\n    expressionKeys.forEach(function (key) {\n      // final computed value of the key\n      var value; // expression to associate with key\n\n      var subExpr = expr[key];\n\n      if (key !== ID_KEY && inArray([0, false], subExpr)) {\n        foundExclusion = true;\n      }\n\n      if (key === ID_KEY && isEmpty(subExpr)) {\n        // tiny optimization here to skip over id\n        value = obj[key];\n      } else if (isString(subExpr)) {\n        value = computeValue(obj, subExpr, key);\n      } else if (inArray([1, true], subExpr)) ; else if (isArray(subExpr)) {\n        value = subExpr.map(function (v) {\n          var r = computeValue(obj, v);\n          if (isNil(r)) return null;\n          return r;\n        });\n      } else if (isObject(subExpr)) {\n        var subExprKeys = keys(subExpr);\n        var operator = subExprKeys.length > 1 ? false : subExprKeys[0];\n\n        if (inArray(ops(OP_PROJECTION), operator)) {\n          var projectionOperators = OPERATORS[OP_PROJECTION]; // apply the projection operator on the operator expression for the key\n\n          if (operator === '$slice') {\n            // $slice is handled differently for aggregation and projection operations\n            if (ensureArray(subExpr[operator]).every(isNumber)) {\n              // $slice for projection operation\n              value = projectionOperators[operator](obj, subExpr[operator], key);\n              foundSlice = true;\n            } else {\n              // $slice for aggregation operation\n              value = computeValue(obj, subExpr, key);\n            }\n          } else {\n            value = projectionOperators[operator](obj, subExpr[operator], key);\n          }\n        } else {\n          // compute the value for the sub expression for the key\n          if (has(obj, key)) {\n            validateExpression(subExpr);\n            var nestedObj = obj[key];\n            value = isArray(nestedObj) ? nestedObj.map(function (o) {\n              return processObject(o, subExpr, subExprKeys, false);\n            }) : processObject(nestedObj, subExpr, subExprKeys, false);\n          } else {\n            value = computeValue(obj, subExpr, key);\n          }\n        }\n      } else {\n        dropKeys.push(key);\n        return;\n      } // get value with object graph\n\n\n      var objPathValue = resolveObj(obj, key, {\n        preserveMissingValues: true\n      }); // add the value at the path\n\n      if (objPathValue !== undefined) {\n        merge(newObj, objPathValue, {\n          flatten: true\n        });\n      } // if computed add/or remove accordingly\n\n\n      if (notInArray([0, 1, false, true], subExpr)) {\n        if (value === undefined) {\n          removeValue(newObj, key);\n        } else {\n          setValue(newObj, key, value);\n        }\n      }\n    }); // filter out all missing values preserved to support correct merging\n\n    filterMissing(newObj); // if projection included $slice operator\n    // Also if exclusion fields are found or we want to exclude only the id field\n    // include keys that were not explicitly excluded\n\n    if (foundSlice || foundExclusion || idOnlyExcludedExpression) {\n      newObj = Object.assign({}, obj, newObj);\n\n      if (dropKeys.length > 0) {\n        newObj = cloneDeep(newObj);\n        each(dropKeys, function (k) {\n          return removeValue(newObj, k);\n        });\n      }\n    }\n\n    return newObj;\n  }\n  /**\n   * Validate inclusion and exclusion values in expression\n   *\n   * @param {Object} expr The expression given for the projection\n   */\n\n\n  function validateExpression(expr) {\n    var ID_KEY = idKey();\n    var check = [false, false];\n    each(expr, function (v, k) {\n      if (k === ID_KEY) return;\n\n      if (v === 0 || v === false) {\n        check[0] = true;\n      } else if (v === 1 || v === true) {\n        check[1] = true;\n      }\n\n      assert(!(check[0] && check[1]), 'Projection cannot have a mix of inclusion and exclusion.');\n    });\n  }\n\n  /**\n   * Restricts the contents of the documents based on information stored in the documents themselves.\n   *\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/redact/\n   */\n\n  function $redact(collection, expr, opt) {\n    return collection.map(function (obj) {\n      return redactObj(cloneDeep(obj), expr);\n    });\n  }\n\n  /**\n   * Replaces a document with the specified embedded document or new one.\n   * The replacement document can be any valid expression that resolves to a document.\n   *\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/replaceRoot/\n   *\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @param  {Object} opt\n   * @return {*}\n   */\n\n  function $replaceRoot(collection, expr, opt) {\n    return collection.map(function (obj) {\n      obj = computeValue(obj, expr.newRoot);\n      assert(isObject(obj), '$replaceRoot expression must return an object');\n      return obj;\n    });\n  }\n\n  /**\n   * Randomly selects the specified number of documents from its input.\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/sample/\n   *\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @param  {Object} opt\n   * @return {*}\n   */\n\n  function $sample(collection, expr, opt) {\n    var size = expr.size;\n    assert(isNumber(size), '$sample size must be a positive integer');\n    return collection.transform(function (xs) {\n      var len = xs.length;\n      var i = -1;\n      return function () {\n        if (++i === size) return {\n          done: true\n        };\n        var n = Math.floor(Math.random() * len);\n        return {\n          value: xs[n],\n          done: false\n        };\n      };\n    });\n  }\n\n  /**\n   * Skips over a specified number of documents from the pipeline and returns the rest.\n   *\n   * @param collection\n   * @param value\n   * @param  {Object} opt\n   * @returns {*}\n   */\n  function $skip(collection, value, opt) {\n    return collection.drop(value);\n  }\n\n  /**\n   * Takes all input documents and returns them in a stream of sorted documents.\n   *\n   * @param collection\n   * @param sortKeys\n   * @param  {Object} opt\n   * @returns {*}\n   */\n\n  function $sort(collection, sortKeys, opt) {\n    if (isEmpty(sortKeys) || !isObject(sortKeys)) return collection;\n    opt = opt || {};\n    var cmp = compare;\n    var collationSpec = opt['collation']; // use collation comparator if provided\n\n    if (isObject(collationSpec) && isString(collationSpec.locale)) {\n      cmp = collationComparator(collationSpec);\n    }\n\n    return collection.transform(function (coll) {\n      var modifiers = keys(sortKeys);\n      each(modifiers.reverse(), function (key) {\n        var grouped = groupBy(coll, function (obj) {\n          return resolve(obj, key);\n        });\n        var sortedIndex = {};\n        var indexKeys = sortBy(grouped.keys, function (k, i) {\n          sortedIndex[k] = i;\n          return k;\n        }, cmp);\n        if (sortKeys[key] === -1) indexKeys.reverse();\n        coll = [];\n        each(indexKeys, function (k) {\n          return into(coll, grouped.groups[sortedIndex[k]]);\n        });\n      });\n      return coll;\n    });\n  } // MongoDB collation strength to JS localeCompare sensitivity mapping.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\n\n  var COLLATION_STRENGTH = {\n    // Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n    1: 'base',\n    //  Only strings that differ in base letters or accents and other diacritic marks compare as unequal.\n    // Examples: a ≠ b, a ≠ á, a = A.\n    2: 'accent',\n    // Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.\n    // Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A\n    3: 'variant' // case - Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n\n  };\n  /**\n   * Creates a comparator function for the given collation spec. See https://docs.mongodb.com/manual/reference/collation/\n   *\n   * @param spec {Object} The MongoDB collation spec.\n   * {\n   *   locale: <string>,\n   *   caseLevel: <boolean>,\n   *   caseFirst: <string>,\n   *   strength: <int>,\n   *   numericOrdering: <boolean>,\n   *   alternate: <string>,\n   *   maxVariable: <string>, // unsupported\n   *   backwards: <boolean> // unsupported\n   * }\n   */\n\n  function collationComparator(spec) {\n    var localeOpt = {\n      sensitivity: COLLATION_STRENGTH[spec.strength || 3],\n      caseFirst: spec.caseFirst === 'off' ? 'false' : spec.caseFirst || 'false',\n      numeric: spec.numericOrdering || false,\n      ignorePunctuation: spec.alternate === 'shifted'\n    }; // when caseLevel is true for strength  1:base and 2:accent, bump sensitivity to the nearest that supports case comparison\n\n    if ((spec.caseLevel || false) === true) {\n      if (localeOpt.sensitivity === 'base') localeOpt.sensitivity = 'case';\n      if (localeOpt.sensitivity === 'accent') localeOpt.sensitivity = 'variant';\n    }\n\n    var collator = new Intl.Collator(spec.locale, localeOpt);\n    return function (a, b) {\n      // non strings\n      if (!isString(a) || !isString(b)) return compare(a, b); // only for strings\n\n      var i = collator.compare(a, b);\n      if (i < 0) return -1;\n      if (i > 0) return 1;\n      return 0;\n    };\n  }\n\n  /**\n   * Groups incoming documents based on the value of a specified expression,\n   * then computes the count of documents in each distinct group.\n   *\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/sortByCount/\n   *\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @param  {Object} opt\n   * @return {*}\n   */\n\n  function $sortByCount(collection, expr, opt) {\n    var newExpr = {\n      count: {\n        $sum: 1\n      }\n    };\n    newExpr[idKey()] = expr;\n    return $sort($group(collection, newExpr), {\n      count: -1\n    }, opt);\n  }\n\n  /**\n   * Takes an array of documents and returns them as a stream of documents.\n   *\n   * @param collection\n   * @param expr\n   * @param  {Object} opt\n   * @returns {Array}\n   */\n\n  function $unwind(collection, expr, opt) {\n    if (isString(expr)) {\n      expr = {\n        path: expr\n      };\n    }\n\n    var field = expr.path.substr(1);\n    var includeArrayIndex = expr.includeArrayIndex || false;\n    var preserveNullAndEmptyArrays = expr.preserveNullAndEmptyArrays || false;\n\n    var format = function format(o, i) {\n      if (includeArrayIndex !== false) o[includeArrayIndex] = i;\n      return o;\n    };\n\n    var value;\n    return Lazy(function () {\n      var _loop = function _loop() {\n        // take from lazy sequence if available\n        if (Lazy.isIterator(value)) {\n          var tmp = value.next();\n          if (!tmp.done) return {\n            v: tmp\n          };\n        } // fetch next object\n\n\n        var obj = collection.next();\n        if (obj.done) return {\n          v: obj\n        }; // unwrap value\n\n        obj = obj.value; // get the value of the field to unwind\n\n        value = resolve(obj, field); // throw error if value is not an array???\n\n        if (isArray(value)) {\n          if (value.length === 0 && preserveNullAndEmptyArrays === true) {\n            value = null; // reset unwind value\n\n            var _tmp = cloneDeep(obj);\n\n            removeValue(_tmp, field);\n            return {\n              v: {\n                value: format(_tmp, null),\n                done: false\n              }\n            };\n          } else {\n            // construct a lazy sequence for elements per value\n            value = Lazy(value).map(function (item, i) {\n              var tmp = cloneDeep(obj);\n              setValue(tmp, field, item);\n              return format(tmp, i);\n            });\n          }\n        } else if (!isEmpty(value) || preserveNullAndEmptyArrays === true) {\n          var _tmp2 = cloneDeep(obj);\n\n          return {\n            v: {\n              value: format(_tmp2, null),\n              done: false\n            }\n          };\n        }\n      };\n\n      while (true) {\n        var _ret = _loop();\n\n        if (_typeof(_ret) === \"object\") return _ret.v;\n      }\n    });\n  }\n\n  /**\n   * Pipeline Aggregation Stages. https://docs.mongodb.com/manual/reference/operator/aggregation-\n   */\n\n  var pipelineOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $addFields: $addFields,\n    $set: $set,\n    $bucket: $bucket,\n    $bucketAuto: $bucketAuto,\n    $count: $count,\n    $facet: $facet,\n    $group: $group,\n    $limit: $limit,\n    $lookup: $lookup,\n    $match: $match,\n    $out: $out,\n    $project: $project,\n    $redact: $redact,\n    $replaceRoot: $replaceRoot,\n    $sample: $sample,\n    $skip: $skip,\n    $sort: $sort,\n    $sortByCount: $sortByCount,\n    $unwind: $unwind\n  });\n\n  /**\n   * Projection Operators. https://docs.mongodb.com/manual/reference/operator/projection/\n   */\n  /**\n   * Projects the first element in an array that matches the query condition.\n   *\n   * @param obj\n   * @param field\n   * @param expr\n   */\n\n  function $(obj, expr, field) {\n    err('$ not implemented');\n  }\n  /**\n   * Projects only the first element from an array that matches the specified $elemMatch condition.\n   *\n   * @param obj\n   * @param field\n   * @param expr\n   * @returns {*}\n   */\n\n  function $elemMatch$1(obj, expr, field) {\n    var arr = resolve(obj, field);\n    var query = new Query(expr);\n    assert(isArray(arr), '$elemMatch: invalid argument');\n\n    for (var i = 0; i < arr.length; i++) {\n      if (query.test(arr[i])) return [arr[i]];\n    }\n\n    return undefined;\n  }\n  /**\n   * Limits the number of elements projected from an array. Supports skip and limit slices.\n   *\n   * @param obj\n   * @param field\n   * @param expr\n   */\n\n  function $slice$1(obj, expr, field) {\n    var xs = resolve(obj, field);\n    if (!isArray(xs)) return xs;\n\n    if (isArray(expr)) {\n      return slice(xs, expr[0], expr[1]);\n    } else {\n      assert(isNumber(expr), '$slice: invalid arguments for projection');\n      return slice(xs, expr);\n    }\n  }\n\n  var projectionOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $: $,\n    $elemMatch: $elemMatch$1,\n    $slice: $slice$1\n  });\n\n  // Query and Projection Operators. https://docs.mongodb.com/manual/reference/operator/query/\n\n  function createQueryOperator(pred) {\n    return function (selector, value) {\n      return function (obj) {\n        // value of field must be fully resolved.\n        var lhs = resolve(obj, selector, {\n          meta: true\n        });\n        lhs = unwrap(lhs.result, lhs.depth);\n        return pred(lhs, value);\n      };\n    };\n  }\n\n  var $all$1 = createQueryOperator($all);\n  var $elemMatch$2 = createQueryOperator($elemMatch);\n  var $eq$2 = createQueryOperator($eq);\n  var $exists$1 = createQueryOperator($exists);\n  var $gt$2 = createQueryOperator($gt);\n  var $gte$2 = createQueryOperator($gte);\n  var $in$2 = createQueryOperator($in$1);\n  var $lt$2 = createQueryOperator($lt);\n  var $lte$2 = createQueryOperator($lte);\n  var $mod$2 = createQueryOperator($mod$1);\n  var $ne$2 = createQueryOperator($ne);\n  var $nin$2 = createQueryOperator($nin);\n  var $regex$1 = createQueryOperator($regex);\n  var $size$2 = createQueryOperator($size$1);\n  var $type$1 = createQueryOperator($type);\n  /**\n   * Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $and$1(selector, value) {\n    assert(isArray(value), 'Invalid expression: $and expects value to be an Array');\n    var queries = [];\n    each(value, function (expr) {\n      return queries.push(new Query(expr));\n    });\n    return function (obj) {\n      for (var i = 0; i < queries.length; i++) {\n        if (!queries[i].test(obj)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }\n  /**\n   * Joins query clauses with a logical OR returns all documents that match the conditions of either clause.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $or$1(selector, value) {\n    assert(isArray(value), 'Invalid expression. $or expects value to be an Array');\n    var queries = [];\n    each(value, function (expr) {\n      return queries.push(new Query(expr));\n    });\n    return function (obj) {\n      for (var i = 0; i < queries.length; i++) {\n        if (queries[i].test(obj)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n  /**\n   * Joins query clauses with a logical NOR returns all documents that fail to match both clauses.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $nor(selector, value) {\n    assert(isArray(value), 'Invalid expression. $nor expects value to be an Array');\n    var f = $or$1('$or', value);\n    return function (obj) {\n      return !f(obj);\n    };\n  }\n  /**\n   * Inverts the effect of a query expression and returns documents that do not match the query expression.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $not$1(selector, value) {\n    var criteria = {};\n    criteria[selector] = normalize(value);\n    var query = new Query(criteria);\n    return function (obj) {\n      return !query.test(obj);\n    };\n  }\n  /**\n   * Matches documents that satisfy a JavaScript expression.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $where(selector, value) {\n    if (!isFunction(value)) {\n      value = new Function('return ' + value + ';');\n    }\n\n    return function (obj) {\n      return value.call(obj) === true;\n    };\n  }\n  /**\n   * Allows the use of aggregation expressions within the query language.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $expr(selector, value) {\n    return function (obj) {\n      return computeValue(obj, value);\n    };\n  }\n\n  var queryOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $all: $all$1,\n    $elemMatch: $elemMatch$2,\n    $eq: $eq$2,\n    $exists: $exists$1,\n    $gt: $gt$2,\n    $gte: $gte$2,\n    $in: $in$2,\n    $lt: $lt$2,\n    $lte: $lte$2,\n    $mod: $mod$2,\n    $ne: $ne$2,\n    $nin: $nin$2,\n    $regex: $regex$1,\n    $size: $size$2,\n    $type: $type$1,\n    $and: $and$1,\n    $or: $or$1,\n    $nor: $nor,\n    $not: $not$1,\n    $where: $where,\n    $expr: $expr\n  });\n\n  var OPERATORS = {};\n  OPERATORS[OP_EXPRESSION] = {};\n  OPERATORS[OP_GROUP] = {};\n  OPERATORS[OP_PIPELINE] = {};\n  OPERATORS[OP_PROJECTION] = {};\n  OPERATORS[OP_QUERY] = {};\n  var SYSTEM_OPERATORS = [[OP_EXPRESSION, expressionOperators], [OP_GROUP, groupOperators], [OP_PIPELINE, pipelineOperators], [OP_PROJECTION, projectionOperators], [OP_QUERY, queryOperators]];\n  /**\n   * Enables the default operators of the system\n   */\n\n  function enableSystemOperators() {\n    each(SYSTEM_OPERATORS, function (arr) {\n      var _arr = _slicedToArray(arr, 2),\n          cls = _arr[0],\n          values = _arr[1];\n\n      Object.assign(OPERATORS[cls], values);\n    });\n  }\n  /**\n   * Add new operators\n   *\n   * @param opClass the operator class to extend\n   * @param fn a function returning an object of new operators\n   */\n\n  function addOperators(opClass, fn) {\n    var newOperators = fn(_internal()); // ensure correct type specified\n\n    assert(has(OPERATORS, opClass), \"Invalid operator class \".concat(opClass));\n    var operators = OPERATORS[opClass]; // check for existing operators\n\n    each(newOperators, function (_, op) {\n      assert(/^\\$[a-zA-Z0-9_]*$/.test(op), \"Invalid operator name \".concat(op));\n      assert(!has(operators, op), \"\".concat(op, \" already exists for '\").concat(opClass, \"' operators\"));\n    });\n    var wrapped = {};\n\n    switch (opClass) {\n      case OP_QUERY:\n        each(newOperators, function (fn, op) {\n          fn = fn.bind(newOperators);\n\n          wrapped[op] = function (selector, value) {\n            return function (obj) {\n              // value of field must be fully resolved.\n              var lhs = resolve(obj, selector);\n              var result = fn(selector, lhs, value);\n              assert(isBoolean(result), \"\".concat(op, \" must return a boolean\"));\n              return result;\n            };\n          };\n        });\n        break;\n\n      case OP_PROJECTION:\n        each(newOperators, function (fn, op) {\n          fn = fn.bind(newOperators);\n\n          wrapped[op] = function (obj, expr, selector) {\n            var lhs = resolve(obj, selector);\n            return fn(selector, lhs, expr);\n          };\n        });\n        break;\n\n      default:\n        each(newOperators, function (fn, op) {\n          wrapped[op] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            return fn.apply(newOperators, args);\n          };\n        });\n    } // toss the operator salad :)\n\n\n    Object.assign(OPERATORS[opClass], wrapped);\n  }\n\n  /**\n   * Mixin for Collection types that provide a method `toJSON() -> Array[Object]`\n   */\n\n  var CollectionMixin = {\n    /**\n     * Runs a query and returns a cursor to the result\n     * @param criteria\n     * @param projection\n     * @returns {Cursor}\n     */\n    query: function query(criteria, projection) {\n      return new Query(criteria).find(this.toJSON(), projection);\n    },\n\n    /**\n     * Runs the given aggregation operators on this collection\n     * @params pipeline\n     * @returns {Array}\n     */\n    aggregate: function aggregate(pipeline) {\n      return new Aggregator(pipeline).run(this.toJSON());\n    }\n  };\n\n  enableSystemOperators();\n  var VERSION = '2.5.3'; // mingo!\n\n  var index = {\n    _internal: _internal,\n    Aggregator: Aggregator,\n    CollectionMixin: CollectionMixin,\n    Cursor: Cursor,\n    Lazy: Lazy,\n    OP_EXPRESSION: OP_EXPRESSION,\n    OP_GROUP: OP_GROUP,\n    OP_PIPELINE: OP_PIPELINE,\n    OP_PROJECTION: OP_PROJECTION,\n    OP_QUERY: OP_QUERY,\n    Query: Query,\n    VERSION: VERSION,\n    addOperators: addOperators,\n    aggregate: aggregate,\n    find: find,\n    remove: remove,\n    setup: setup\n  };\n\n  return index;\n\n})));\n\n},{}]},{},[1]);\n"]}