{"version":3,"sources":["jsexpr.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","root","previous_jsexpr","jsexpr","window","expr","CACHE","fneval","obj","key","eval","err","undefined","cacheeval","rkey","replace","rx","fn","test","EVALS","v","iteval","arr","split","forEach","ceval","valwalk","src","ops","path","k","newpath","rop","extend","dayjs","Mingo","instance","token","RX","RegExp","RX_RPL_PARSE","RX_RPL_TOKEN","RX_FILTER","FILTERS","JSON","args","nexpr","spaces","isNaN","parseInt","fnxpr","tokens","entry","stringify","DATE","shift","format","join","res","dt","toDate","SUBSTR","start","end","substring","fnassign","parse","method","m","match","trim","Function","list","len","idx","indexOf","rtoken","push","filter","l","ret","jsontokens","json","walk","Object","keys","map","op","mingotokens","xpr","Array","isArray","$","aggr","Aggregator","input","run","exprfn","ninput","prfn","nxfn","prres","nxres","_","traverse","object","callback","name","fncallback","assign","expression","mingo","newInstance","EV_CACHE","EX_CACHE","addOperators","OP_QUERY","$starts","selector","value","startsWith","$startsWith","$ends","endsWith","$endsWith","$contains","OP_EXPRESSION","$eval","$expr","$keyval","val","computeValue","reduce","item","$trim","chars","Set","has","pop","$startsWidth","define","amd","globalThis","self","s","h","d","y","M","weekdays","months","String","g","z","utcOffset","Math","abs","floor","date","year","month","clone","add","ceil","w","D","ms","Q","toLowerCase","S","arguments","O","locale","$L","utc","$u","x","$x","$offset","prototype","$d","Date","NaN","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","b","$i","isDayjs","en","Ls","hasOwn","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","copy","copyIsArray","deep","global","factory","_typeof","Symbol","iterator","_classCallCheck","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arr","_n","_d","_e","_i","_s","next","done","minLen","_arrayLikeToArray","from","arr2","T_NULL","T_UNDEFINED","T_BOOL","T_BOOLEAN","T_NUMBER","T_STRING","T_DATE","T_REGEX","T_REGEXP","T_ARRAY","T_OBJECT","T_FUNCTION","JS_SIMPLE_TYPES","OP_GROUP","OP_PIPELINE","OP_PROJECTION","MISSING","includes","valueToFind","fromIndex","max","sameValueZero","arrayPush","assert","condition","message","cloneDeep","jsType","objectMap","into","getType","isBoolean","isString","isNumber","isObject","isObjectLike","isDate","isRegExp","isFunction","isNil","isNull","isUndefined","inArray","notInArray","truthy","arg","isEmpty","ensureArray","prop","each","ctx","bind","objKeys","merge","opt","inputs","every","flatten","j","collection","accumulator","intersection","xs","ys","hashes","hashCode","union","depth","flatten2","iter","unwrap","isEqual","lhs","rhs","type","ka","kb","sort","temp","encode","unique","prefix","concat","hash","charCodeAt","compare","sortBy","cmp","sorted","result","groupBy","lookup","index","groups","findInsertIndex","array","lo","hi","mid","memoize","_this","memo","_len","_key","getValue","field","resolve","meta","resolve2","isText","acc","resolveObj","preserveMissingValues","names","isIndex","hasNext","filterMissing","splice","force","setValue","removeValue","isOperator","normalize","exprKeys","some","regex","modifiers","ignoreCase","multiline","skip","limit","stddev","data","sampled","sum","N","correction","avg","sqrt","pow","moduleApi","_internal","settings","setup","systemVariables","$$ROOT","$$CURRENT","$$REMOVE","redactVariables","$$KEEP","$$PRUNE","$$DESCEND","current","elem","redactObj","SYS_VARS","REDACT_VARS","idKey","cls","OPERATORS","accumulate","operator","sysVar","$abs","$add","foundDate","$ceil","$divide","$exp","exp","$floor","$ln","log","$log","msg","log10","$log10","$mod","$multiply","num","$pow","$round","place","Infinity","truncate","$sqrt","$subtract","$trunc","places","roundOff","sign","trunc","decimals","firstDigit","offset","remainder","lastDigit","_offset","excess","$arrayElemAt","$arrayToObject","newObj","$concatArrays","$filter","asVar","condExpr","tempObj","$in","$indexOfArray","searchValue","findIndex","$isArray","$map","inputExpr","asExpr","inExpr","tempKey","$objectToArray","$range","step","$reduce","initialValue","$reverseArray","reverse","$size","$slice","$zip","useLongestLength","defaults","zipCount","_loop","$mergeObjects","docs","$and","$or","$not","Lazy","source","Iterator","isIterator","isFn","dropItem","rest","DONE","LAZY_MAP","LAZY_FILTER","LAZY_TAKE","LAZY_DROP","baseIterator","nextFn","iteratees","buffer","bIndex","outer","mIndex","mSize","innerDone","member","func","__iteratees","__first","__done","__buf","size","_validate","_push","iteratee","pred","take","drop","transform","first","operators","__operators","__options","stream","query","pipelineOperators","Query","aggregate","pipeline","Cursor","projection","__filterFn","__query","__source","__projection","__result","__stack","_fetch","all","count","modifier","collation","criteria","__criteria","__compiled","_compile","whereOperator","_processOperator","find","remove","_this2","$eq","eq","$ne","$in$1","$nin","$lt","compare$1","$lte","$gt","$gte","$mod$1","$regex","$exists","$all","matched","$elemMatch","$size$1","$type","createComparison","$eq$1","$ne$1","$gt$1","$lt$1","$gte$1","$lte$1","$nin$1","$cmp","$cond","ifExpr","thenExpr","elseExpr","errorMsg","$switch","branches","validBranch","branch","then","$ifNull","$dayOfYear","oneDay","$dayOfMonth","$dayOfWeek","$year","$month","$week","setHours","setDate","yearStart","$hour","getUTCHours","$minute","$second","$millisecond","DATE_SYM_TABLE","$dateToString","fmt","matches","hdlr","pad","padDigits","number","digits","$literal","$setEquals","$setIntersection","$setDifference","$setUnion","$setIsSubset","$anyElementTrue","$allElementsTrue","$concat","$indexOfBytes","str","searchStr","valid","$split","$strLenBytes","encodeURI","$strLenCP","$strcasecmp","toUpperCase","$substrBytes","buf","utf8Encode","validIndex","begin","$substr","$substrCP","$toLower","$toUpper","UTF8_MASK","toUtf8","utf8","codePointAt","$let","varsExpr","varsKeys","expressionOperators","freeze","__proto__","$push","$addToSet","$avg","$first","$last","$max","$mergeObjects$1","$min","$stdDevPop","$stdDevSamp","$sum","groupOperators","$addFields","newFields","$bucket","boundaries","defaultKey","lower","upper","outputExpr","output","boundType","grouped","boundKey","$bucketAuto","groupByExpr","bucketCount","buckets","coll","approxBucketSize","computeValueOptimized","remaining","ID_KEY","bucketItems","lastBucket","$count","$facet","$group","id","partitions","$limit","$lookup","joinColl","localField","foreignField","asField","as","$match","q","$out","$project","expressionKeys","idOnlyExcludedExpression","validateExpression","processObject","foundSlice","foundExclusion","dropKeys","subExpr","subExprKeys","projectionOperators","nestedObj","objPathValue","check","$redact","$replaceRoot","newRoot","$sample","random","$skip","$sort","sortKeys","collationSpec","collationComparator","sortedIndex","indexKeys","COLLATION_STRENGTH","spec","localeOpt","sensitivity","strength","caseFirst","numeric","numericOrdering","ignorePunctuation","alternate","caseLevel","collator","Intl","Collator","$sortByCount","newExpr","$unwind","includeArrayIndex","preserveNullAndEmptyArrays","tmp","_tmp","_tmp2","_ret","$elemMatch$1","$slice$1","createQueryOperator","$all$1","$elemMatch$2","$eq$2","$exists$1","$gt$2","$gte$2","$in$2","$lt$2","$lte$2","$mod$2","$ne$2","$nin$2","$regex$1","$size$2","$type$1","$and$1","queries","$or$1","$nor","$not$1","$where","queryOperators","SYSTEM_OPERATORS","enableSystemOperators","values","opClass","newOperators","wrapped","CollectionMixin","VERSION"],"mappings":"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","file":"jsexpr.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\r\n\r\n(function() {\r\n  var root = this\r\n  var previous_jsexpr = root.jsexpr;\r\n\tvar jsexpr = require('./index.js');\r\n\r\n\tif( typeof exports !== 'undefined' ) {\r\n    if( typeof module !== 'undefined' && module.exports ) {\r\n      exports = module.exports = jsexpr;\r\n    }\r\n    exports.jsexpr = jsexpr;\r\n  }\r\n\r\n\tif(typeof window !== 'undefined') {\r\n    window.jsexpr = jsexpr;\r\n  }\r\n\r\n}).call(this);\r\n\n},{\"./index.js\":2}],2:[function(require,module,exports){\n/*jshint esversion: 6 */\r\n\r\nconst expr = require('./lib');\r\n\r\nmodule.exports = expr;\r\n\n},{\"./lib\":5}],3:[function(require,module,exports){\nconst CACHE = {}\r\n\r\nfunction fneval(obj, key) {\r\n    try {\r\n        return eval(\"this.\" + key);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nfunction cacheeval(obj,key) {\r\n    if(!CACHE[key]) {\r\n        let rkey = key.replace(/'/g,\"\\\\'\");\r\n        let rx = /^[a-zA-Z$_@]/;\r\n        let fn = eval(`(function(){\r\n            let rx = /^[a-zA-Z$_]/;\r\n            return '${rkey}'.startsWith('this.') || '${rkey}'=='this' || !rx.test('${rkey}')?\r\n                function() {\r\n                    let r = undefined;\r\n                    try {r=${key};}\r\n                    catch(err){}\r\n                    return r;\r\n                } :\r\n                function() {\r\n                    let r = undefined;\r\n                    try {r=this.${rx.test(key)? key:'$___$'};}\r\n                    catch(err){try{r=${key};}catch(err){}}\r\n                    return r;\r\n                }\r\n        })()`);\r\n        CACHE[key] = fn;\r\n    }\r\n    return CACHE[key].call(obj);\r\n}\r\n\r\nconst EVALS = {\r\n    eval(obj,key) {\r\n        let v = fneval.call(obj,obj,key);\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    iteval(obj,key) {\r\n        var arr = key.split(\".\");\r\n        arr.forEach(key=>{\r\n            if(obj==null || obj==undefined) return;\r\n            else obj = obj[key];\r\n        });\r\n\r\n        let v = obj || undefined;\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    ceval(obj,key) {\r\n        let v = cacheeval(obj,key);\r\n        return v===undefined? \"\" : v;\r\n    },\r\n    valwalk(src,ops,path) {\r\n        if(!src) return src;\r\n        for(let k in src) {\r\n            let newpath = `${path}${path?'.':''}${k}`;\r\n            let rop = ops[newpath];\r\n            if(rop!==undefined)\r\n                src[k] = rop;\r\n            else if(typeof(src[k])==\"object\")\r\n                EVALS.valwalk(src[k],ops,newpath);\r\n        };\r\n        return src;\r\n    }\r\n}\r\n\r\nmodule.exports = EVALS;\r\n\n},{}],4:[function(require,module,exports){\nconst \r\n\tEVALS = require('./evals.js'), \r\n\textend = require(\"extend\"),\r\n\tdayjs = require('dayjs'),\r\n\tMingo = require(\"mingo\");\r\n\r\nfunction instance(token) {\r\n\tconst RX = new RegExp(`\\\\${token}\\\\{[^\\\\}]+\\\\}`,'g');\r\n\tconst RX_RPL_PARSE = new RegExp(`\\\\${token}\\\\{([^\\\\}]+)\\\\}`);\r\n\tconst RX_RPL_TOKEN = new RegExp(`\\\\${token}\\\\{|\\\\}`,'g');\r\n\tconst RX_FILTER = new RegExp(`^[A-Z_]+\\\\:`);\r\n\r\n\tconst FILTERS = {\r\n\t\tJSON(args) {\r\n\t\t\tlet nexpr = args[1];\r\n\t\t\tlet spaces = args[2];\r\n\t\t\tif(args.length==2) {\r\n\t\t\t\tif(isNaN(nexpr)) {spaces = 2;}\r\n\t\t\t\telse {nexpr = 'this';\tspaces = args[1];}\r\n\t\t\t}\r\n\t\t\telse if(args.length==1) {\r\n\t\t\t\tnexpr = 'this';\r\n\t\t\t\tspaces = 2;\r\n\t\t\t}\r\n\t\t\tspaces = parseInt(spaces);\r\n\t\t\tlet fnxpr = tokens(\"${\"+nexpr+\"}\");\r\n\t\t\treturn function(entry) {\r\n\t\t\t\treturn JSON.stringify(fnxpr(entry),null,spaces);\r\n\t\t\t}\r\n\t\t},\r\n\t\tDATE(args) {\r\n\t\t\targs.shift();\r\n\t\t\tlet nexpr = tokens(\"${\"+args.shift()+\"}\");\r\n\t\t\tlet format = args.join(\":\").split('|');\r\n\t\t\treturn function(entry) {\r\n\t\t\t\tlet res = nexpr(entry);\r\n\t\t\t\tlet dt = dayjs(res,format[0]);\r\n\t\t\t\tif(format[1]) {\r\n\t\t\t\t\treturn dt.format(format[1]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn dt.toDate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tSUBSTR(args) {\r\n\t\t\targs.shift();\r\n\t\t\tlet nexpr = tokens(\"${\"+args.shift()+\"}\");\r\n\t\t\tlet format = args.join(\":\").split('|');\r\n\t\t\tlet start = parseInt(format[0]);\r\n\t\t\tlet end = parseInt(format[1]);\r\n\t\t\tif(isNaN(start)) start = 0;\r\n\t\t\tif(isNaN(end)) end = undefined;\r\n\t\t\treturn function(entry) {\r\n\t\t\t\tlet res = nexpr(entry);\r\n\t\t\t\treturn typeof(res=='string') ? res.substring(start,end) : res;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t};\r\n\r\n\tfunction fnassign(path) {\r\n\t\treturn eval(`(function(path){\r\n\t\t\treturn function(obj,val) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Ensure path\r\n\t\t\t\t\tlet root = obj;\r\n\t\t\t\t\tlet kpath = path.split('.');\r\n\t\t\t\t\tfor(let i=0; i<kpath.length;i++) {\r\n\t\t\t\t\t\tlet k = kpath[i];\r\n\t\t\t\t\t\tif(!root[k]) root[k] = {};\r\n\t\t\t\t\t\troot = root[k];\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn obj.${path} = val;\r\n\t\t\t\t}catch(err) {}\r\n\t\t\t}\r\n\t\t})('${path}')`);\r\n\t}\r\n\r\n\tfunction parse(expr,method) {\r\n\t\tmethod = method || \"ceval\";\r\n\t\tvar m = expr.match(RX);\r\n\t\tif(m) {\r\n\t\t\tm.forEach(token=>{\r\n\t\t\t\tvar key = token.replace(RX_RPL_PARSE,\"$1\").trim().replace(/'/g,\"\\\\'\");\r\n\t\t\t\texpr = expr.replace(token,\"__val(entry,'\"+key+\"')\");\r\n\t\t\t});\r\n\t\t}\r\n\t\tvar fn = new Function(\"entry\",\"__val\",\"return (\"+expr+\")\");\r\n\r\n\t\treturn function(entry) {\r\n\t\t\treturn fn(entry,EVALS[method]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction tokens(expr,method) {\r\n\t\tmethod = EVALS[method || \"ceval\"];\r\n\r\n\t\tvar list = [], len = 0;\r\n\t\tvar m = expr.match(RX)||[];\r\n\t\tm.forEach(token=>{\r\n\t\t\tvar idx = expr.indexOf(token);\r\n\t\t\tvar t = expr.substring(0,idx);\r\n\t\t\tvar rtoken = token.replace(RX_RPL_TOKEN,\"\");\r\n\t\t\texpr = expr.substring(idx+token.length);\r\n\t\t\tlist.push(t);\r\n\r\n\t\t\t// Filter\r\n\t\t\tif(RX_FILTER.test(rtoken)) {\r\n\t\t\t\tlet args = rtoken.split(\":\");\r\n\t\t\t\tlet fn = FILTERS[args[0]](args);\r\n\t\t\t\tlist.push(fn);\r\n\t\t\t}\r\n\t\t\t// Evaluator\r\n\t\t\telse {\r\n\t\t\t\tlist.push(function(entry){\t\t\t\t\r\n\t\t\t\t\treturn method(entry,rtoken);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlist.push(expr);\r\n\t\tlist = list.filter(l=>l!=\"\");\r\n\t\tlen = list.length;\r\n\r\n\t\tif(len>1) {\r\n\t\t\treturn function(entry) {\r\n\t\t\t\tlet ret = \"\";\r\n\t\t\t\tfor(let i=0;i<len;i++) {\r\n\t\t\t\t\tlet t = list[i];\r\n\t\t\t\t\tret += typeof(t)==\"string\"? t : t(entry);\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn function(entry) {\r\n\t\t\t\tlet t = list[0];\r\n\t\t\t\treturn typeof(t)==\"string\"? t : t(entry);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction jsontokens(json) {\r\n\t\tlet ops = [], len = 0;\r\n\r\n\t\tfunction walk(json,path) {\r\n\t\t\tif(!json) return;\r\n\t\t\tObject.keys(json).forEach(k=>{\r\n\t\t\t\tlet newpath = `${path}${path?'.':''}${k}`;\r\n\t\t\t\tlet t = json[k];\r\n\t\t\t\tif(typeof(t)==\"string\") {\r\n\t\t\t\t\tops.push({path:newpath,fn:tokens(t)});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\twalk(t,newpath);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twalk(json,\"\");\r\n\t\tlen = ops.length;\r\n\r\n\t\treturn function(entry) {\r\n\t\t\tlet map = {};\r\n\t\t\tfor(let i=0;i<len;i++) {\r\n\t\t\t\tlet op = ops[i];\r\n\t\t\t\tmap[op.path] = op.fn(entry);\r\n\t\t\t}\r\n\t\t\treturn EVALS.valwalk(extend(true,{},json),map,\"\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction mingotokens(json) {\r\n\t\tlet xpr = Array.isArray(json.$)? json.$ : [json.$];\r\n\t\tlet aggr = new Mingo.Aggregator(xpr);\r\n\t\treturn function(input) {\r\n\t\t\tlet isArray = Array.isArray(input);\r\n\t\t\tlet res = aggr.run(isArray? input : [input]);\r\n\t\t\tif(!isArray && res.length<=1) return res[0];\r\n\t\t\telse return res;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction exprfn(input,replace){\r\n\t\tif(typeof(input)=='number') {\r\n\t\t\treturn function(obj){return input};\r\n\t\t}\r\n\t\telse if(typeof(input)==\"object\") {\r\n\t\t\tlet ninput = extend({},input);\r\n\t\t\tdelete ninput['$'];\r\n\r\n\t\t\tconst prfn = input[\"$\"] ? mingotokens(input, replace) : (input)=>input;\r\n\t\t\tconst nxfn = Object.keys(ninput).length? jsontokens(ninput,replace) : (input)=>input;\r\n\t\t\t\r\n\t\t\treturn function(obj) {\r\n\t\t\t\tlet prres = prfn(obj);\r\n\t\t\t\tlet nxres = nxfn(prres);\r\n\t\t\t\tif(typeof(nxres._)!=='undefined' && Object.keys(nxres).length==1) \r\n\t\t\t\t\treturn nxres._;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn nxres;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn tokens(input);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction traverse(object,callback) {\r\n\t\tfor(let key in object) {\r\n\t\t\tobject[key] = callback(object,key,object[key]);\r\n\t\t}\r\n\r\n\t\tfor(let key in object) {\r\n\t\t\tif(typeof(object[key])=='object') {\r\n\t\t\t\ttraverse(object[key],callback);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filter(name, fncallback) {\r\n\t\tFILTERS[name] = fncallback;\r\n\t}\r\n\r\n\treturn {\r\n\t\tfn : parse,\r\n\t\teval : parse,\r\n\t\tassign : fnassign,\r\n\t\texpr : exprfn,\r\n\t\texpression : exprfn,\r\n\t\ttraverse : traverse,\r\n\t\tfilter : filter\r\n\t}\r\n}\r\n\r\nmodule.exports = instance;\r\n\n},{\"./evals.js\":3,\"dayjs\":7,\"extend\":8,\"mingo\":9}],5:[function(require,module,exports){\nlet expression = require('./expression'),\r\n\tmingo = require('./mingo_ex');\r\n\r\nlet instance = expression('$');\r\ninstance.newInstance = function(token) {\r\n\treturn expression(token);\r\n}\r\n\r\ninstance.filter = function(name,fncallback) {\r\n\tinstance.FILTERS[name] = fncallback;\r\n}\r\n\r\nmodule.exports = instance;\r\n\n},{\"./expression\":4,\"./mingo_ex\":6}],6:[function(require,module,exports){\nconst\r\n\tmingo = require('mingo'),\r\n\tjsexpr = require('./expression')('$');\r\n\r\nconst EV_CACHE = {};\r\nconst EX_CACHE = {};\r\n\r\ntry {\r\n\tmingo.addOperators(mingo.OP_QUERY, function (_) {\r\n\t\treturn {\r\n\t\t\t$starts(selector, value, args) {\r\n\t\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\t\treturn (value || \"\").startsWith(args[0]);\r\n\t\t\t},\r\n\t\t\t$startsWith(selector, value, args) {\r\n\t\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\t\treturn (value || \"\").startsWith(args[0]);\r\n\t\t\t},\r\n\t\t\t$ends(selector, value, args) {\r\n\t\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\t\treturn (value || \"\").endsWith(args[0]);\r\n\t\t\t},\r\n\t\t\t$endsWith(selector, value, args) {\r\n\t\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\t\treturn (value || \"\").endsWith(args[0]);\r\n\t\t\t},\r\n\t\t\t$contains(selector, value, args) {\r\n\t\t\t\targs = Array.isArray(args) ? args : [args];\r\n\t\t\t\treturn (value || \"\").indexOf(args[0]) >= 0;\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\t\r\n\tmingo.addOperators(mingo.OP_EXPRESSION, function (_) {\r\n\t\treturn {\r\n\t\t\t$eval(selector, value, args) {\r\n\t\t\t\tif (!EV_CACHE[value]) {\r\n\t\t\t\t\tEV_CACHE[value] = jsexpr.eval(value);\r\n\t\t\t\t}\r\n\t\t\t\treturn EV_CACHE[value](selector);\r\n\t\t\t},\r\n\t\t\t$expr(selector, value, args) {\r\n\t\t\t\tif (!EX_CACHE[value]) {\r\n\t\t\t\t\tEX_CACHE[value] = jsexpr.expr(value);\r\n\t\t\t\t}\r\n\t\t\t\treturn EX_CACHE[value](selector);\r\n\t\t\t},\r\n\t\t\t$keyval(selector, value, args) {\r\n\t\t\t\tlet val = _.computeValue(selector, value);\r\n\t\t\t\treturn val.reduce((map, item) => {\r\n\t\t\t\t\tmap[item[0]] = item[1] || \"_\";\r\n\t\t\t\t\treturn map;\r\n\t\t\t\t}, {});\r\n\t\t\t},\r\n\t\t\t$trim(selector, value, args) {\r\n\t\t\t\tlet chars = new Set((value.chars || '').split(''));\r\n\t\t\t\tlet val = _.computeValue(selector, value.input).split('');\r\n\t\t\t\twhile (chars.has(val[0])) val.shift();\r\n\t\t\t\twhile (chars.has(val[val.length - 1])) val.pop();\r\n\t\t\t\treturn val.join('');\r\n\t\t\t},\r\n\t\t\t$starts(selector, value, args) {\r\n\t\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\t\treturn (val || \"\").startsWith(value[1]);\r\n\t\t\t},\r\n\t\t\t$startsWidth(selector, value, args) {\r\n\t\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\t\treturn (val || \"\").startsWith(value[1]);\r\n\t\t\t},\r\n\t\t\t$ends(selector, value, args) {\r\n\t\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\t\treturn (val || \"\").endsWith(value[1]);\r\n\t\t\t},\r\n\t\t\t$endsWith(selector, value, args) {\r\n\t\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\t\treturn (val || \"\").endsWith(value[1]);\r\n\t\t\t},\r\n\t\t\t$contains(selector, value, args) {\r\n\t\t\t\tlet val = _.computeValue(selector, value[0]);\r\n\t\t\t\treturn (val || \"\").indexOf(value[1]) >= 0;\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n}catch(err) {\r\n\t\r\n}\r\n\r\n\r\nmodule.exports = mingo;\r\n\n},{\"./expression\":4,\"mingo\":9}],7:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",$=\"Invalid Date\",l=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},D=\"en\",v={};v[D]=M;var p=function(t){return t instanceof _},S=function(t,e,n){var r;if(!t)return D;if(\"string\"==typeof t)v[t]&&(r=t),e&&(v[t]=e,r=t);else{var i=t.name;v[i]=t,r=i}return!n&&r&&(D=r),r||!n&&D},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var D=this.$locale().weekStart||0,v=(y<D?y+7:y)-D;return $(r?m-v:m+(6-v),M);case a:case d:return l(g+\"Hours\",0);case u:return l(g+\"Minutes\",1);case s:return l(g+\"Seconds\",2);case i:return l(g+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),$=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this;if(!this.isValid())return $;var n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=O.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,f=i.months,h=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=i.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(i.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,o,2),ddd:h(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:r};return n.replace(y,(function(t,e){return e||l[t]||r.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,D=O.m(this,M);return D=(l={},l[c]=D/12,l[f]=D,l[h]=D/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?D:O.a(D)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return v[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=v[D],w.Ls=v,w.p={},w}));\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n},{}],9:[function(require,module,exports){\n//! mingo.js 2.5.3\n//! Copyright (c) 2020 Francis Asante\n//! MIT\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.mingo = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  // Javascript native types\n  var T_NULL = 'null';\n  var T_UNDEFINED = 'undefined';\n  var T_BOOL = 'bool';\n  var T_BOOLEAN = 'boolean';\n  var T_NUMBER = 'number';\n  var T_STRING = 'string';\n  var T_DATE = 'date';\n  var T_REGEX = 'regex';\n  var T_REGEXP = 'regexp';\n  var T_ARRAY = 'array';\n  var T_OBJECT = 'object';\n  var T_FUNCTION = 'function'; // no array, object, or function types\n\n  var JS_SIMPLE_TYPES = [T_NULL, T_UNDEFINED, T_BOOLEAN, T_NUMBER, T_STRING, T_DATE, T_REGEXP]; // operator classes\n\n  var OP_EXPRESSION = 'expression';\n  var OP_GROUP = 'group';\n  var OP_PIPELINE = 'pipeline';\n  var OP_PROJECTION = 'projection';\n  var OP_QUERY = 'query';\n  var MISSING = function MISSING() {};\n\n  /**\n   * Utility functions\n   */\n\n  if (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, 'includes', {\n      value: function value(valueToFind, fromIndex) {\n        if (this == null) {\n          throw new TypeError('\"this\" is null or not defined');\n        } // 1. Let O be ? ToObject(this value).\n\n\n        var o = Object(this); // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\n        var len = o.length >>> 0; // 3. If len is 0, return false.\n\n        if (len === 0) {\n          return false;\n        } // 4. Let n be ? ToInteger(fromIndex).\n        //    (If fromIndex is undefined, this step produces the value 0.)\n\n\n        var n = fromIndex | 0; // 5. If n ≥ 0, then\n        //  a. Let k be n.\n        // 6. Else n < 0,\n        //  a. Let k be len + n.\n        //  b. If k < 0, let k be 0.\n\n        var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        function sameValueZero(x, y) {\n          return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n        } // 7. Repeat, while k < len\n\n\n        while (k < len) {\n          // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n          // b. If SameValueZero(valueToFind, elementK) is true, return true.\n          if (sameValueZero(o[k], valueToFind)) {\n            return true;\n          } // c. Increase k by 1.\n\n\n          k++;\n        } // 8. Return false\n\n\n        return false;\n      }\n    });\n  }\n\n  var arrayPush = Array.prototype.push;\n  function assert(condition, message) {\n    if (!condition) err(message);\n  }\n  /**\n   * Deep clone an object\n   */\n\n  function cloneDeep(obj) {\n    switch (jsType(obj)) {\n      case T_ARRAY:\n        return obj.map(cloneDeep);\n\n      case T_OBJECT:\n        return objectMap(obj, cloneDeep);\n\n      default:\n        return obj;\n    }\n  }\n  /**\n   * Shallow clone an object\n   */\n\n  function clone(obj) {\n    switch (jsType(obj)) {\n      case T_ARRAY:\n        return into([], obj);\n\n      case T_OBJECT:\n        return Object.assign({}, obj);\n\n      default:\n        return obj;\n    }\n  }\n  function getType(v) {\n    if (v === null) return 'Null';\n    if (v === undefined) return 'Undefined';\n    return v.constructor.name;\n  }\n  function jsType(v) {\n    return getType(v).toLowerCase();\n  }\n  function isBoolean(v) {\n    return jsType(v) === T_BOOLEAN;\n  }\n  function isString(v) {\n    return jsType(v) === T_STRING;\n  }\n  function isNumber(v) {\n    return jsType(v) === T_NUMBER;\n  }\n  var isArray = Array.isArray || function (v) {\n    return !!v && v.constructor === Array;\n  };\n  function isObject(v) {\n    return !!v && v.constructor === Object;\n  }\n  function isObjectLike(v) {\n    return v === Object(v);\n  } // objects, arrays, functions, date, custom object\n\n  function isDate(v) {\n    return jsType(v) === T_DATE;\n  }\n  function isRegExp(v) {\n    return jsType(v) === T_REGEXP;\n  }\n  function isFunction(v) {\n    return jsType(v) === T_FUNCTION;\n  }\n  function isNil(v) {\n    return v === null || v === undefined;\n  }\n  function isNull(v) {\n    return v === null;\n  }\n  function isUndefined(v) {\n    return v === undefined;\n  }\n  function inArray(arr, item) {\n    return arr.includes(item);\n  }\n  function notInArray(arr, item) {\n    return !inArray(arr, item);\n  }\n  function truthy(arg) {\n    return !!arg;\n  }\n  function isEmpty(x) {\n    return isNil(x) || isArray(x) && x.length === 0 || isObject(x) && keys(x).length === 0 || !x;\n  } // ensure a value is an array\n\n  function ensureArray(x) {\n    return isArray(x) ? x : [x];\n  }\n  function has(obj, prop) {\n    return obj.hasOwnProperty(prop);\n  }\n  function err(s) {\n    throw new Error(s);\n  }\n  var keys = Object.keys; // ////////////////// UTILS ////////////////////\n\n  /**\n   * Iterate over an array or object\n   * @param  {Array|Object} obj An object-like value\n   * @param  {Function} fn The callback to run per item\n   * @param  {*}   ctx  The object to use a context\n   * @return {void}\n   */\n\n  function each(obj, fn, ctx) {\n    fn = fn.bind(ctx);\n\n    if (isArray(obj)) {\n      for (var i = 0, len = obj.length; i < len; i++) {\n        if (fn(obj[i], i, obj) === false) break;\n      }\n    } else {\n      for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          if (fn(obj[k], k, obj) === false) break;\n        }\n      }\n    }\n  }\n  /**\n   * Transform values in an object\n   *\n   * @param  {Object}   obj   An object whose values to transform\n   * @param  {Function} fn The transform function\n   * @param  {*}   ctx The value to use as the \"this\" context for the transform\n   * @return {Array|Object} Result object after applying the transform\n   */\n\n  function objectMap(obj, fn, ctx) {\n    fn = fn.bind(ctx);\n    var o = {};\n    var objKeys = keys(obj);\n\n    for (var i = 0; i < objKeys.length; i++) {\n      var k = objKeys[i];\n      o[k] = fn(obj[k], k);\n    }\n\n    return o;\n  }\n  /**\n   * Deep merge objects or arrays.\n   * When the inputs have unmergeable types, the source value (right hand side) is returned.\n   * If inputs are arrays of same length and all elements are mergable, elements in the same position are merged together.\n   * If any of the elements are unmergeable, elements in the source are appended to the target.\n   * @param target {Object|Array} the target to merge into\n   * @param obj {Object|Array} the source object\n   */\n\n  function merge(target, obj) {\n    var opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    // take care of missing inputs\n    if (target === MISSING) return obj;\n    if (obj === MISSING) return target;\n    var inputs = [target, obj];\n\n    if (!(inputs.every(isObject) || inputs.every(isArray))) {\n      throw Error('mismatched types. must both be array or object');\n    } // default options\n\n\n    opt.flatten = opt.flatten || false;\n\n    if (isArray(target)) {\n      if (opt.flatten) {\n        var i = 0;\n        var j = 0;\n\n        while (i < target.length && j < obj.length) {\n          target[i] = merge(target[i++], obj[j++], opt);\n        }\n\n        while (j < obj.length) {\n          target.push(obj[j++]);\n        }\n      } else {\n        arrayPush.apply(target, obj);\n      }\n    } else {\n      Object.keys(obj).forEach(function (k) {\n        if (target.hasOwnProperty(k)) {\n          target[k] = merge(target[k], obj[k], opt);\n        } else {\n          target[k] = obj[k];\n        }\n      });\n    }\n\n    return target;\n  }\n  /**\n   * Reduce any array-like object\n   * @param collection\n   * @param fn\n   * @param accumulator\n   * @returns {*}\n   */\n\n  function reduce(collection, fn, accumulator) {\n    if (isArray(collection)) return collection.reduce(fn, accumulator); // array-like objects\n\n    each(collection, function (v, k) {\n      return accumulator = fn(accumulator, v, k, collection);\n    });\n    return accumulator;\n  }\n  /**\n   * Returns the intersection between two arrays\n   *\n   * @param  {Array} xs The first array\n   * @param  {Array} ys The second array\n   * @return {Array}    Result array\n   */\n\n  function intersection(xs, ys) {\n    var hashes = ys.map(hashCode);\n    return xs.filter(function (v) {\n      return inArray(hashes, hashCode(v));\n    });\n  }\n  /**\n   * Returns the union of two arrays\n   *\n   * @param  {Array} xs The first array\n   * @param  {Array} ys The second array\n   * @return {Array}   The result array\n   */\n\n  function union(xs, ys) {\n    return into(into([], xs), ys.filter(notInArray.bind(null, xs)));\n  }\n  /**\n   * Flatten the array\n   *\n   * @param  {Array} xs The array to flatten\n   * @param {Number} depth The number of nested lists to iterate\n   */\n\n  function flatten(xs) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var arr = [];\n\n    function flatten2(ys, iter) {\n      for (var i = 0, len = ys.length; i < len; i++) {\n        if (isArray(ys[i]) && (iter > 0 || iter < 0)) {\n          flatten2(ys[i], Math.max(-1, iter - 1));\n        } else {\n          arr.push(ys[i]);\n        }\n      }\n    }\n\n    flatten2(xs, depth);\n    return arr;\n  }\n  /**\n   * Unwrap a single element array to specified depth\n   * @param {Array} arr\n   * @param {Number} depth\n   */\n\n  function unwrap(arr, depth) {\n    if (depth < 1) return arr;\n\n    while (depth-- && isArray(arr) && arr.length === 1) {\n      arr = arr[0];\n    }\n\n    return arr;\n  }\n  /**\n   * Determine whether two values are the same or strictly equivalent\n   *\n   * @param  {*}  a The first value\n   * @param  {*}  b The second value\n   * @return {Boolean}   Result of comparison\n   */\n\n  function isEqual(a, b) {\n    var lhs = [a];\n    var rhs = [b];\n\n    while (lhs.length > 0) {\n      a = lhs.pop();\n      b = rhs.pop(); // strictly equal must be equal.\n\n      if (a === b) continue; // unequal types and functions cannot be equal.\n\n      var type = jsType(a);\n      if (type !== jsType(b) || type === T_FUNCTION) return false; // leverage toString for Date and RegExp types\n\n      switch (type) {\n        case T_ARRAY:\n          if (a.length !== b.length) return false; //if (a.length === b.length && a.length === 0) continue\n\n          into(lhs, a);\n          into(rhs, b);\n          break;\n\n        case T_OBJECT:\n          // deep compare objects\n          var ka = keys(a);\n          var kb = keys(b); // check length of keys early\n\n          if (ka.length !== kb.length) return false; // we know keys are strings so we sort before comparing\n\n          ka.sort();\n          kb.sort(); // compare keys\n\n          for (var i = 0, len = ka.length; i < len; i++) {\n            var temp = ka[i];\n\n            if (temp !== kb[i]) {\n              return false;\n            } else {\n              // save later work\n              lhs.push(a[temp]);\n              rhs.push(b[temp]);\n            }\n          }\n\n          break;\n\n        default:\n          // compare encoded values\n          if (encode(a) !== encode(b)) return false;\n      }\n    }\n\n    return lhs.length === 0;\n  }\n  /**\n   * Return a new unique version of the collection\n   * @param  {Array} xs The input collection\n   * @return {Array}    A new collection with unique values\n   */\n\n  function unique(xs) {\n    var h = {};\n    var arr = [];\n    each(xs, function (item) {\n      var k = hashCode(item);\n\n      if (!has(h, k)) {\n        arr.push(item);\n        h[k] = 0;\n      }\n    });\n    return arr;\n  }\n  /**\n   * Encode value to string using a simple non-colliding stable scheme.\n   *\n   * @param value\n   * @returns {*}\n   */\n\n  function encode(value) {\n    var type = jsType(value);\n\n    switch (type) {\n      case T_BOOLEAN:\n      case T_NUMBER:\n      case T_REGEXP:\n        return value.toString();\n\n      case T_STRING:\n        return JSON.stringify(value);\n\n      case T_DATE:\n        return value.toISOString();\n\n      case T_NULL:\n      case T_UNDEFINED:\n        return type;\n\n      case T_ARRAY:\n        return '[' + value.map(encode) + ']';\n\n      default:\n        var prefix = type === T_OBJECT ? '' : \"\".concat(getType(value));\n        var objKeys = keys(value);\n        objKeys.sort();\n        return \"\".concat(prefix, \"{\") + objKeys.map(function (k) {\n          return \"\".concat(encode(k), \":\").concat(encode(value[k]));\n        }) + '}';\n    }\n  }\n  /**\n   * Generate hash code\n   * This selected function is the result of benchmarking various hash functions.\n   * This version performs well and can hash 10^6 documents in ~3s with on average 100 collisions.\n   *\n   * @param value\n   * @returns {*}\n   */\n\n  function hashCode(value) {\n    if (isNil(value)) return null;\n    var hash = 0;\n    var s = encode(value);\n    var i = s.length;\n\n    while (i) {\n      hash = (hash << 5) - hash ^ s.charCodeAt(--i);\n    }\n\n    return hash >>> 0;\n  }\n  /**\n   * Default compare function\n   * @param {*} a\n   * @param {*} b\n   */\n\n  function compare(a, b) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n    return 0;\n  }\n  /**\n   * Returns a (stably) sorted copy of list, ranked in ascending order by the results of running each value through iteratee\n   *\n   * This implementation treats null/undefined sort keys as less than every other type\n   *\n   * @param {Array}   collection\n   * @param {Function} fn The function used to resolve sort keys\n   * @param {Function} cmp The comparator function to use for comparing values\n   * @return {Array} Returns a new sorted array by the given iteratee\n   */\n\n  function sortBy(collection, fn, cmp) {\n    var sorted = [];\n    var result = [];\n    var hash = {};\n    cmp = cmp || compare;\n    if (isEmpty(collection)) return collection;\n\n    for (var i = 0; i < collection.length; i++) {\n      var obj = collection[i];\n      var key = fn(obj, i); // objects with nil keys will go in first\n\n      if (isNil(key)) {\n        result.push(obj);\n      } else {\n        if (hash[key]) {\n          hash[key].push(obj);\n        } else {\n          hash[key] = [obj];\n        }\n\n        sorted.push(key);\n      }\n    } // use native array sorting but enforce stableness\n\n\n    sorted.sort(cmp);\n\n    for (var _i = 0; _i < sorted.length; _i++) {\n      into(result, hash[sorted[_i]]);\n    }\n\n    return result;\n  }\n  /**\n   * Groups the collection into sets by the returned key\n   *\n   * @param collection\n   * @param fn {Function} to compute the group key of an item in the collection\n   * @returns {{keys: Array, groups: Array}}\n   */\n\n  function groupBy(collection, fn) {\n    var result = {\n      'keys': [],\n      'groups': []\n    };\n    var lookup = {};\n    each(collection, function (obj) {\n      var key = fn(obj);\n      var hash = hashCode(key);\n      var index = -1;\n\n      if (lookup[hash] === undefined) {\n        index = result.keys.length;\n        lookup[hash] = index;\n        result.keys.push(key);\n        result.groups.push([]);\n      }\n\n      index = lookup[hash];\n      result.groups[index].push(obj);\n    });\n    return result;\n  }\n  /**\n   * Push elements in given array into target array\n   *\n   * @param {*} target The array to push into\n   * @param {*} xs The array of elements to push\n   */\n\n  function into(target, xs) {\n    arrayPush.apply(target, xs);\n    return target;\n  }\n  /**\n   * Find the insert index for the given key in a sorted array.\n   *\n   * @param {*} array The sorted array to search\n   * @param {*} item The search key\n   */\n\n  function findInsertIndex(array, item) {\n    // uses binary search\n    var lo = 0;\n    var hi = array.length - 1;\n\n    while (lo <= hi) {\n      var mid = Math.round(lo + (hi - lo) / 2);\n\n      if (item < array[mid]) {\n        hi = mid - 1;\n      } else if (item > array[mid]) {\n        lo = mid + 1;\n      } else {\n        return mid;\n      }\n    }\n\n    return lo;\n  }\n  /**\n   * This is a generic memoization function\n   *\n   * This implementation uses a cache independent of the function being memoized\n   * to allow old values to be garbage collected when the memoized function goes out of scope.\n   *\n   * @param {*} fn The function object to memoize\n   */\n\n  function memoize(fn) {\n    var _this = this;\n\n    return function (memo) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var key = hashCode(args);\n\n        if (!has(memo, key)) {\n          memo[key] = fn.apply(_this, args);\n        }\n\n        return memo[key];\n      };\n    }({\n      /* storage */\n    });\n  } // mingo internal\n\n  /**\n   * Retrieve the value of a given key on an object\n   * @param obj\n   * @param field\n   * @returns {*}\n   * @private\n   */\n\n  function getValue(obj, field) {\n    return isObjectLike(obj) ? obj[field] : undefined;\n  }\n  /**\n   * Resolve the value of the field (dot separated) on the given object\n   * @param obj {Object} the object context\n   * @param selector {String} dot separated path to field\n   * @returns {*}\n   */\n\n  function resolve(obj, selector) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var depth = 0; // options\n\n    options.meta = options.meta || false;\n\n    function resolve2(o, path) {\n      var value = o;\n\n      for (var i = 0; i < path.length; i++) {\n        var field = path[i];\n        var isText = field.match(/^\\d+$/) === null;\n\n        if (isText && isArray(value)) {\n          // On the first iteration, we check if we received a stop flag.\n          // If so, we stop to prevent iterating over a nested array value\n          // on consecutive object keys in the selector.\n          if (i === 0 && depth > 0) break;\n          depth += 1;\n          path = path.slice(i);\n          value = reduce(value, function (acc, item) {\n            var v = resolve2(item, path);\n            if (v !== undefined) acc.push(v);\n            return acc;\n          }, []);\n          break;\n        } else {\n          value = getValue(value, field);\n        }\n\n        if (value === undefined) break;\n      }\n\n      return value;\n    }\n\n    obj = inArray(JS_SIMPLE_TYPES, jsType(obj)) ? obj : resolve2(obj, selector.split('.'));\n    return options.meta ? {\n      result: obj,\n      depth: depth\n    } : obj;\n  }\n  /**\n   * Returns the full object to the resolved value given by the selector.\n   * This function excludes empty values as they aren't practically useful.\n   *\n   * @param obj {Object} the object context\n   * @param selector {String} dot separated path to field\n   */\n\n  function resolveObj(obj, selector) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    // options\n    options.preserveMissingValues = options.preserveMissingValues || false;\n    var names = selector.split('.');\n    var key = names[0]; // get the next part of the selector\n\n    var next = names.length === 1 || names.slice(1).join('.');\n    var isIndex = key.match(/^\\d+$/) !== null;\n    var hasNext = names.length > 1;\n    var result;\n    var value;\n\n    try {\n      if (isArray(obj)) {\n        if (isIndex) {\n          result = getValue(obj, Number(key));\n\n          if (hasNext) {\n            result = resolveObj(result, next, options);\n          }\n\n          result = [result];\n        } else {\n          result = [];\n          each(obj, function (item) {\n            value = resolveObj(item, selector, options);\n\n            if (options.preserveMissingValues) {\n              if (value === undefined) {\n                value = MISSING;\n              }\n\n              result.push(value);\n            } else if (value !== undefined) {\n              result.push(value);\n            }\n          });\n        }\n      } else {\n        value = getValue(obj, key);\n\n        if (hasNext) {\n          value = resolveObj(value, next, options);\n        }\n\n        assert(value !== undefined);\n        result = {};\n        result[key] = value;\n      }\n    } catch (e) {\n      result = undefined;\n    }\n\n    return result;\n  }\n  /**\n   * Filter out all MISSING values from the object in-place\n   * @param {*} obj The object the filter\n   */\n\n  function filterMissing(obj) {\n    if (isArray(obj)) {\n      for (var i = obj.length - 1; i >= 0; i--) {\n        if (obj[i] === MISSING) {\n          obj.splice(i, 1);\n        } else {\n          filterMissing(obj[i]);\n        }\n      }\n    } else if (isObject(obj)) {\n      for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          filterMissing(obj[k]);\n        }\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Walk the object graph and execute the given transform function\n   * @param  {Object|Array} obj   The object to traverse\n   * @param  {String} selector    The selector\n   * @param  {Function} fn Function to execute for value at the end the traversal\n   * @param  {Boolean} force Force generating missing parts of object graph\n   * @return {*}\n   */\n\n  function traverse(obj, selector, fn) {\n    var force = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var names = selector.split('.');\n    var key = names[0];\n    var next = names.length === 1 || names.slice(1).join('.');\n\n    if (names.length === 1) {\n      fn(obj, key);\n    } else {\n      // force the rest of the graph while traversing\n      if (force === true && isNil(obj[key])) {\n        obj[key] = {};\n      }\n\n      traverse(obj[key], next, fn, force);\n    }\n  }\n  /**\n   * Set the value of the given object field\n   *\n   * @param obj {Object|Array} the object context\n   * @param selector {String} path to field\n   * @param value {*} the value to set\n   */\n\n  function setValue(obj, selector, value) {\n    traverse(obj, selector, function (item, key) {\n      item[key] = value;\n    }, true);\n  }\n  function removeValue(obj, selector) {\n    traverse(obj, selector, function (item, key) {\n      if (isArray(item) && /^\\d+$/.test(key)) {\n        item.splice(parseInt(key), 1);\n      } else if (isObject(item)) {\n        delete item[key];\n      }\n    });\n  }\n  /**\n   * Check whether the given name is an operator. We assume any field name starting with '$' is an operator.\n   * This is cheap and safe to do since keys beginning with '$' should be reserved for internal use.\n   * @param {String} name\n   */\n\n  function isOperator(name) {\n    return !!name && name[0] === '$';\n  }\n  /**\n   * Simplify expression for easy evaluation with query operators map\n   * @param expr\n   * @returns {*}\n   */\n\n  function normalize(expr) {\n    // normalized primitives\n    if (inArray(JS_SIMPLE_TYPES, jsType(expr))) {\n      return isRegExp(expr) ? {\n        '$regex': expr\n      } : {\n        '$eq': expr\n      };\n    } // normalize object expression\n\n\n    if (isObjectLike(expr)) {\n      var exprKeys = keys(expr); // no valid query operator found, so we do simple comparison\n\n      if (!exprKeys.some(isOperator)) {\n        return {\n          '$eq': expr\n        };\n      } // ensure valid regex\n\n\n      if (inArray(exprKeys, '$regex')) {\n        var regex = expr['$regex'];\n        var options = expr['$options'] || '';\n        var modifiers = '';\n\n        if (isString(regex)) {\n          modifiers += regex.ignoreCase || options.indexOf('i') >= 0 ? 'i' : '';\n          modifiers += regex.multiline || options.indexOf('m') >= 0 ? 'm' : '';\n          modifiers += regex.global || options.indexOf('g') >= 0 ? 'g' : '';\n          regex = new RegExp(regex, modifiers);\n        }\n\n        expr['$regex'] = regex;\n        delete expr['$options'];\n      }\n    }\n\n    return expr;\n  }\n  /**\n   * Returns a slice of the array\n   *\n   * @param  {Array} xs\n   * @param  {Number} skip\n   * @param  {Number} limit\n   * @return {Array}\n   */\n\n  function slice(xs, skip) {\n    var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    // MongoDB $slice works a bit differently from Array.slice\n    // Uses single argument for 'limit' and array argument [skip, limit]\n    if (isNil(limit)) {\n      if (skip < 0) {\n        skip = Math.max(0, xs.length + skip);\n        limit = xs.length - skip + 1;\n      } else {\n        limit = skip;\n        skip = 0;\n      }\n    } else {\n      if (skip < 0) {\n        skip = Math.max(0, xs.length + skip);\n      }\n\n      assert(limit > 0, 'Invalid argument value for $slice operator. Limit must be a positive number');\n      limit += skip;\n    }\n\n    return xs.slice(skip, limit);\n  }\n  /**\n   * Compute the standard deviation of the data set\n   * @param {Array} array of numbers\n   * @param {Boolean} if true calculates a sample standard deviation, otherwise calculates a population stddev\n   * @return {Number}\n   */\n\n  function stddev(data, sampled) {\n    var sum = reduce(data, function (acc, n) {\n      return acc + n;\n    }, 0);\n    var N = data.length || 1;\n    var correction = sampled && 1 || 0;\n    var avg = sum / N;\n    return Math.sqrt(reduce(data, function (acc, n) {\n      return acc + Math.pow(n - avg, 2);\n    }, 0) / (N - correction));\n  }\n  /**\n   * Exported to the users to allow writing custom operators\n   */\n\n  function moduleApi() {\n    return {\n      assert: assert,\n      clone: clone,\n      cloneDeep: cloneDeep,\n      each: each,\n      err: err,\n      hashCode: hashCode,\n      getType: getType,\n      has: has,\n      includes: inArray.bind(null),\n      isArray: isArray,\n      isBoolean: isBoolean,\n      isDate: isDate,\n      isEmpty: isEmpty,\n      isEqual: isEqual,\n      isFunction: isFunction,\n      isNil: isNil,\n      isNull: isNull,\n      isNumber: isNumber,\n      isObject: isObject,\n      isRegExp: isRegExp,\n      isString: isString,\n      isUndefined: isUndefined,\n      keys: keys,\n      reduce: reduce,\n      resolve: resolve,\n      resolveObj: resolveObj\n    };\n  }\n\n  var _internal = function _internal() {\n    return Object.assign({\n      computeValue: computeValue,\n      ops: ops\n    }, moduleApi());\n  }; // Settings used by Mingo internally\n\n  var settings = {\n    key: '_id'\n  };\n  /**\n   * Setup default settings for Mingo\n   * @param options\n   */\n\n  function setup(options) {\n    Object.assign(settings, options || {});\n  }\n  /**\n   * Implementation of system variables\n   * @type {Object}\n   */\n\n  var systemVariables = {\n    '$$ROOT': function $$ROOT(obj, expr, opt) {\n      return opt.root;\n    },\n    '$$CURRENT': function $$CURRENT(obj, expr, opt) {\n      return obj;\n    },\n    '$$REMOVE': function $$REMOVE(obj, expr, opt) {\n      return undefined;\n    }\n  };\n  /**\n   * Implementation of $redact variables\n   *\n   * Each function accepts 3 arguments (obj, expr, opt)\n   *\n   * @type {Object}\n   */\n\n  var redactVariables = {\n    '$$KEEP': function $$KEEP(obj) {\n      return obj;\n    },\n    '$$PRUNE': function $$PRUNE() {\n      return undefined;\n    },\n    '$$DESCEND': function $$DESCEND(obj, expr, opt) {\n      // traverse nested documents iff there is a $cond\n      if (!has(expr, '$cond')) return obj;\n      var result;\n      each(obj, function (current, key) {\n        if (isObjectLike(current)) {\n          if (isArray(current)) {\n            result = [];\n            each(current, function (elem) {\n              if (isObject(elem)) {\n                elem = redactObj(elem, expr, opt);\n              }\n\n              if (!isNil(elem)) result.push(elem);\n            });\n          } else {\n            result = redactObj(current, expr, opt);\n          }\n\n          if (isNil(result)) {\n            delete obj[key]; // pruned result\n          } else {\n            obj[key] = result;\n          }\n        }\n      });\n      return obj;\n    }\n  }; // system variables\n\n  var SYS_VARS = keys(systemVariables);\n  var REDACT_VARS = keys(redactVariables);\n  /**\n   * Returns the key used as the collection's objects ids\n   */\n\n  function idKey() {\n    return settings.key;\n  }\n  /**\n   * Returns the operators defined for the given operator classes\n   */\n\n  function ops() {\n    // Workaround for browser-compatibility bug: on iPhone 6S Safari (and\n    // probably some other platforms), `arguments` isn't detected as an array,\n    // but has a length field, so functions like `reduce` end up including the\n    // length field in their iteration. Copy to a real array.\n    var args = Array.prototype.slice.call(arguments);\n    return reduce(args, function (acc, cls) {\n      return into(acc, keys(OPERATORS[cls]));\n    }, []);\n  }\n  /**\n   * Returns the result of evaluating a $group operation over a collection\n   *\n   * @param collection\n   * @param field the name of the aggregate operator or field\n   * @param expr the expression of the aggregate operator for the field\n   * @returns {*}\n   */\n\n  function accumulate(collection, field, expr) {\n    if (has(OPERATORS[OP_GROUP], field)) {\n      return OPERATORS[OP_GROUP][field](collection, expr);\n    }\n\n    if (isObject(expr)) {\n      var result = {};\n      each(expr, function (val, key) {\n        result[key] = accumulate(collection, key, expr[key]); // must run ONLY one group operator per expression\n        // if so, return result of the computed value\n\n        if (has(OPERATORS[OP_GROUP], key)) {\n          result = result[key]; // if there are more keys in expression this is bad\n\n          assert(keys(expr).length === 1, \"Invalid $group expression '\" + JSON.stringify(expr) + \"'\");\n          return false; // break\n        }\n      });\n      return result;\n    }\n  }\n  /**\n   * Computes the actual value of the expression using the given object as context\n   *\n   * @param obj the current object from the collection\n   * @param expr the expression for the given field\n   * @param operator the operator to resolve the field with\n   * @param opt {Object} extra options\n   * @returns {*}\n   */\n\n  function computeValue(obj, expr) {\n    var operator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var opt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    opt.root = opt.root || obj; // if the field of the object is a valid operator\n\n    if (has(OPERATORS[OP_EXPRESSION], operator)) {\n      return OPERATORS[OP_EXPRESSION][operator](obj, expr, opt);\n    } // we also handle $group accumulator operators\n\n\n    if (has(OPERATORS[OP_GROUP], operator)) {\n      // we first fully resolve the expression\n      obj = computeValue(obj, expr, null, opt);\n      assert(isArray(obj), operator + ' expression must resolve to an array'); // we pass a null expression because all values have been resolved\n\n      return OPERATORS[OP_GROUP][operator](obj, null, opt);\n    } // if expr is a variable for an object field\n    // field not used in this case\n\n\n    if (isString(expr) && expr.length > 0 && expr[0] === '$') {\n      // we return system variables as literals\n      if (inArray(SYS_VARS, expr)) {\n        return systemVariables[expr](obj, null, opt);\n      } else if (inArray(REDACT_VARS, expr)) {\n        return expr;\n      } // handle selectors with explicit prefix\n\n\n      var sysVar = SYS_VARS.filter(function (v) {\n        return expr.indexOf(v + '.') === 0;\n      });\n\n      if (sysVar.length === 1) {\n        sysVar = sysVar[0];\n\n        if (sysVar === '$$ROOT') {\n          obj = opt.root;\n        }\n\n        expr = expr.substr(sysVar.length); // '.' prefix will be sliced off below\n      }\n\n      return resolve(obj, expr.slice(1));\n    } // check and return value if already in a resolved state\n\n\n    switch (jsType(expr)) {\n      case T_ARRAY:\n        return expr.map(function (item) {\n          return computeValue(obj, item);\n        });\n\n      case T_OBJECT:\n        var result = {};\n        each(expr, function (val, key) {\n          result[key] = computeValue(obj, val, key, opt); // must run ONLY one aggregate operator per expression\n          // if so, return result of the computed value\n\n          if ([OP_EXPRESSION, OP_GROUP].some(function (c) {\n            return has(OPERATORS[c], key);\n          })) {\n            // there should be only one operator\n            assert(keys(expr).length === 1, \"Invalid aggregation expression '\" + JSON.stringify(expr) + \"'\");\n            result = result[key];\n            return false; // break\n          }\n        });\n        return result;\n\n      default:\n        return expr;\n    }\n  }\n  /**\n   * Redact an object\n   * @param  {Object} obj The object to redact\n   * @param  {*} expr The redact expression\n   * @param  {*} opt  Options for value\n   * @return {*} Returns the redacted value\n   */\n\n  function redactObj(obj, expr) {\n    var opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    opt.root = opt.root || obj;\n    var result = computeValue(obj, expr, null, opt);\n    return inArray(REDACT_VARS, result) ? redactVariables[result](obj, expr, opt) : result;\n  }\n\n  /**\n   * Returns the absolute value of a number.\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/abs/#exp._S_abs\n   *\n   * @param obj\n   * @param expr\n   * @return {Number|null|NaN}\n   */\n\n  function $abs(obj, expr) {\n    var val = computeValue(obj, expr);\n    return val === null || val === undefined ? null : Math.abs(val);\n  }\n  /**\n   * Computes the sum of an array of numbers.\n   *\n   * @param obj\n   * @param expr\n   * @returns {Object}\n   */\n\n  function $add(obj, expr) {\n    var args = computeValue(obj, expr);\n    var foundDate = false;\n    var result = reduce(args, function (acc, val) {\n      if (isDate(val)) {\n        assert(!foundDate, \"'$add' can only have one date value\");\n        foundDate = true;\n        val = val.getTime();\n      } // assume val is a number\n\n\n      acc += val;\n      return acc;\n    }, 0);\n    return foundDate ? new Date(result) : result;\n  }\n  /**\n   * Returns the smallest integer greater than or equal to the specified number.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $ceil(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$ceil expression must resolve to a number.');\n    return Math.ceil(arg);\n  }\n  /**\n   * Takes two numbers and divides the first number by the second.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $divide(obj, expr) {\n    var args = computeValue(obj, expr);\n    return args[0] / args[1];\n  }\n  /**\n   * Raises Euler’s number (i.e. e ) to the specified exponent and returns the result.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $exp(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$exp expression must resolve to a number.');\n    return Math.exp(arg);\n  }\n  /**\n   * Returns the largest integer less than or equal to the specified number.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $floor(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$floor expression must resolve to a number.');\n    return Math.floor(arg);\n  }\n  /**\n   * Calculates the natural logarithm ln (i.e loge) of a number and returns the result as a double.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $ln(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$ln expression must resolve to a number.');\n    return Math.log(arg);\n  }\n  /**\n   * Calculates the log of a number in the specified base and returns the result as a double.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $log(obj, expr) {\n    var args = computeValue(obj, expr);\n    var msg = '$log expression must resolve to array(2) of numbers';\n    assert(isArray(args) && args.length === 2, msg);\n    if (args.some(isNil)) return null;\n    assert(args.some(isNaN) || args.every(isNumber), msg);\n    return Math.log10(args[0]) / Math.log10(args[1]);\n  }\n  /**\n   * Calculates the log base 10 of a number and returns the result as a double.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $log10(obj, expr) {\n    var arg = computeValue(obj, expr);\n    if (isNil(arg)) return null;\n    assert(isNumber(arg) || isNaN(arg), '$log10 expression must resolve to a number.');\n    return Math.log10(arg);\n  }\n  /**\n   * Takes two numbers and calculates the modulo of the first number divided by the second.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $mod(obj, expr) {\n    var args = computeValue(obj, expr);\n    return args[0] % args[1];\n  }\n  /**\n   * Computes the product of an array of numbers.\n   *\n   * @param obj\n   * @param expr\n   * @returns {Object}\n   */\n\n  function $multiply(obj, expr) {\n    var args = computeValue(obj, expr);\n    return reduce(args, function (acc, num) {\n      return acc * num;\n    }, 1);\n  }\n  /**\n   * Raises a number to the specified exponent and returns the result.\n   *\n   * @param obj\n   * @param expr\n   * @returns {Object}\n   */\n\n  function $pow(obj, expr) {\n    var args = computeValue(obj, expr);\n    assert(isArray(args) && args.length === 2 && args.every(isNumber), '$pow expression must resolve to array(2) of numbers');\n    assert(!(args[0] === 0 && args[1] < 0), '$pow cannot raise 0 to a negative exponent');\n    return Math.pow(args[0], args[1]);\n  }\n  /**\n   * Rounds a number to to a whole integer or to a specified decimal place.\n   * @param {*} obj\n   * @param {*} expr\n   */\n\n  function $round(obj, expr) {\n    var args = computeValue(obj, expr);\n    var num = args[0];\n    var place = args[1];\n    if (isNil(num) || isNaN(num) || Math.abs(num) === Infinity) return num;\n    assert(isNumber(num), '$round expression must resolve to a number.');\n    return truncate(num, place, true);\n  }\n  /**\n   * Calculates the square root of a positive number and returns the result as a double.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $sqrt(obj, expr) {\n    var n = computeValue(obj, expr);\n    if (isNil(n)) return null;\n    assert(isNumber(n) && n > 0 || isNaN(n), '$sqrt expression must resolve to non-negative number.');\n    return Math.sqrt(n);\n  }\n  /**\n   * Takes an array that contains two numbers or two dates and subtracts the second value from the first.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $subtract(obj, expr) {\n    var args = computeValue(obj, expr);\n    return args[0] - args[1];\n  }\n  /**\n   * Truncates a number to a whole integer or to a specified decimal place.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $trunc(obj, expr) {\n    var arr = computeValue(obj, expr);\n    var num = arr[0];\n    var places = arr[1];\n    if (isNil(num) || isNaN(num) || Math.abs(num) === Infinity) return num;\n    assert(isNumber(num), '$trunc expression must resolve to a number.');\n    assert(isNil(places) || isNumber(places) && places > -20 && places < 100, \"$trunc expression has invalid place\");\n    return truncate(num, places, false);\n  }\n  /**\n   * Truncates integer value to number of places. If roundOff is specified round value instead to the number of places\n   * @param {Number} num\n   * @param {Number} places\n   * @param {Boolean} roundOff\n   */\n\n  function truncate(num, places, roundOff) {\n    places = places || 0;\n    var sign = Math.abs(num) === num ? 1 : -1;\n    num = Math.abs(num);\n    var result = Math.trunc(num);\n    var decimals = num - result;\n\n    if (places === 0) {\n      var firstDigit = Math.trunc(10 * decimals);\n\n      if (roundOff && (result & 1) === 1 && firstDigit >= 5) {\n        result++;\n      }\n    } else if (places > 0) {\n      var offset = Math.pow(10, places);\n      var remainder = Math.trunc(decimals * offset); // last digit before cut off\n\n      var lastDigit = Math.trunc(decimals * offset * 10) % 10; // add one if last digit is greater than 5\n\n      if (roundOff && lastDigit > 5) {\n        remainder += 1;\n      } // compute decimal remainder and add to whole number\n\n\n      result += remainder / offset;\n    } else if (places < 0) {\n      // handle negative decimal places\n      var _offset = Math.pow(10, -1 * places);\n\n      var excess = result % _offset;\n      result = Math.max(0, result - excess); // for negative values the absolute must increase so we round up the last digit if >= 5\n\n      if (roundOff && sign === -1) {\n        while (excess > 10) {\n          excess -= excess % 10;\n        }\n\n        if (result > 0 && excess >= 5) {\n          result += _offset;\n        }\n      }\n    }\n\n    return result * sign;\n  }\n\n  /**\n   * Returns the element at the specified array index.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $arrayElemAt(obj, expr) {\n    var arr = computeValue(obj, expr);\n    assert(isArray(arr) && arr.length === 2, '$arrayElemAt expression must resolve to array(2)');\n    assert(isArray(arr[0]), 'First operand to $arrayElemAt must resolve to an array');\n    assert(isNumber(arr[1]), 'Second operand to $arrayElemAt must resolve to an integer');\n    var idx = arr[1];\n    arr = arr[0];\n\n    if (idx < 0 && Math.abs(idx) <= arr.length) {\n      return arr[idx + arr.length];\n    } else if (idx >= 0 && idx < arr.length) {\n      return arr[idx];\n    }\n\n    return undefined;\n  }\n  /**\n   * Converts an array of key value pairs to a document.\n   */\n\n  function $arrayToObject(obj, expr) {\n    var arr = computeValue(obj, expr);\n    assert(isArray(arr), '$arrayToObject expression must resolve to an array');\n    return reduce(arr, function (newObj, val) {\n      if (isArray(val) && val.length == 2) {\n        newObj[val[0]] = val[1];\n      } else {\n        assert(isObject(val) && has(val, 'k') && has(val, 'v'), '$arrayToObject expression is invalid.');\n        newObj[val.k] = val.v;\n      }\n\n      return newObj;\n    }, {});\n  }\n  /**\n   * Concatenates arrays to return the concatenated array.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $concatArrays(obj, expr) {\n    var arr = computeValue(obj, expr, null);\n    assert(isArray(arr), '$concatArrays must resolve to an array');\n    if (arr.some(isNil)) return null;\n    return arr.reduce(function (acc, item) {\n      return into(acc, item);\n    }, []);\n  }\n  /**\n   * Selects a subset of the array to return an array with only the elements that match the filter condition.\n   *\n   * @param  {Object} obj  [description]\n   * @param  {*} expr [description]\n   * @return {*}      [description]\n   */\n\n  function $filter(obj, expr) {\n    var input = computeValue(obj, expr.input);\n    var asVar = expr['as'];\n    var condExpr = expr['cond'];\n    assert(isArray(input), \"$filter 'input' expression must resolve to an array\");\n    return input.filter(function (o) {\n      // inject variable\n      var tempObj = {};\n      tempObj['$' + asVar] = o;\n      return computeValue(tempObj, condExpr) === true;\n    });\n  }\n  /**\n   * Returns a boolean indicating whether a specified value is in an array.\n   *\n   * @param {Object} obj\n   * @param {Array} expr\n   */\n\n  function $in(obj, expr) {\n    var val = computeValue(obj, expr[0]);\n    var arr = computeValue(obj, expr[1]);\n    assert(isArray(arr), '$in second argument must be an array');\n    return arr.some(isEqual.bind(null, val));\n  }\n  /**\n   * Searches an array for an occurrence of a specified value and returns the array index of the first occurrence.\n   * If the substring is not found, returns -1.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $indexOfArray(obj, expr) {\n    var args = computeValue(obj, expr);\n    if (isNil(args)) return null;\n    var arr = args[0];\n    var searchValue = args[1];\n    if (isNil(arr)) return null;\n    assert(isArray(arr), '$indexOfArray expression must resolve to an array.');\n    var start = args[2] || 0;\n    var end = args[3];\n    if (isNil(end)) end = arr.length;\n    if (start > end) return -1;\n    assert(start >= 0 && end >= 0, '$indexOfArray expression is invalid');\n\n    if (start > 0 || end < arr.length) {\n      arr = arr.slice(start, end);\n    }\n\n    return arr.findIndex(isEqual.bind(null, searchValue)) + start;\n  }\n  /**\n   * Determines if the operand is an array. Returns a boolean.\n   *\n   * @param  {Object}  obj\n   * @param  {*}  expr\n   * @return {Boolean}\n   */\n\n  function $isArray(obj, expr) {\n    return isArray(computeValue(obj, expr[0]));\n  }\n  /**\n   * Applies a sub-expression to each element of an array and returns the array of resulting values in order.\n   *\n   * @param obj\n   * @param expr\n   * @returns {Array|*}\n   */\n\n  function $map(obj, expr) {\n    var inputExpr = computeValue(obj, expr.input);\n    assert(isArray(inputExpr), \"$map 'input' expression must resolve to an array\");\n    var asExpr = expr['as'];\n    var inExpr = expr['in']; // HACK: add the \"as\" expression as a value on the object to take advantage of \"resolve()\"\n    // which will reduce to that value when invoked. The reference to the as expression will be prefixed with \"$$\".\n    // But since a \"$\" is stripped of before passing the name to \"resolve()\" we just need to prepend \"$\" to the key.\n\n    var tempKey = '$' + asExpr;\n    return inputExpr.map(function (item) {\n      obj[tempKey] = item;\n      return computeValue(obj, inExpr);\n    });\n  }\n  /**\n   * Converts a document to an array of documents representing key-value pairs.\n   */\n\n  function $objectToArray(obj, expr) {\n    var val = computeValue(obj, expr);\n    assert(isObject(val), '$objectToArray expression must resolve to an object');\n    var arr = [];\n    each(val, function (v, k) {\n      return arr.push({\n        k: k,\n        v: v\n      });\n    });\n    return arr;\n  }\n  /**\n   * Returns an array whose elements are a generated sequence of numbers.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $range(obj, expr) {\n    var arr = computeValue(obj, expr);\n    var start = arr[0];\n    var end = arr[1];\n    var step = arr[2] || 1;\n    var result = [];\n\n    while (start < end && step > 0 || start > end && step < 0) {\n      result.push(start);\n      start += step;\n    }\n\n    return result;\n  }\n  /**\n   * Applies an expression to each element in an array and combines them into a single value.\n   *\n   * @param {Object} obj\n   * @param {*} expr\n   */\n\n  function $reduce(obj, expr) {\n    var input = computeValue(obj, expr.input);\n    var initialValue = computeValue(obj, expr.initialValue);\n    var inExpr = expr['in'];\n    if (isNil(input)) return null;\n    assert(isArray(input), \"$reduce 'input' expression must resolve to an array\");\n    return reduce(input, function (acc, n) {\n      return computeValue({\n        '$value': acc,\n        '$this': n\n      }, inExpr);\n    }, initialValue);\n  }\n  /**\n   * Returns an array with the elements in reverse order.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $reverseArray(obj, expr) {\n    var arr = computeValue(obj, expr);\n    if (isNil(arr)) return null;\n    assert(isArray(arr), '$reverseArray expression must resolve to an array');\n    var result = [];\n    into(result, arr);\n    result.reverse();\n    return result;\n  }\n  /**\n   * Counts and returns the total the number of items in an array.\n   *\n   * @param obj\n   * @param expr\n   */\n\n  function $size(obj, expr) {\n    var value = computeValue(obj, expr);\n    return isArray(value) ? value.length : undefined;\n  }\n  /**\n   * Returns a subset of an array.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $slice(obj, expr) {\n    var arr = computeValue(obj, expr);\n    return slice(arr[0], arr[1], arr[2]);\n  }\n  /**\n   * Merge two lists together.\n   *\n   * Transposes an array of input arrays so that the first element of the output array would be an array containing,\n   * the first element of the first input array, the first element of the second input array, etc.\n   *\n   * @param  {Obj} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $zip(obj, expr) {\n    var inputs = computeValue(obj, expr.inputs);\n    var useLongestLength = expr.useLongestLength || false;\n    assert(isArray(inputs), \"'inputs' expression must resolve to an array\");\n    assert(isBoolean(useLongestLength), \"'useLongestLength' must be a boolean\");\n\n    if (isArray(expr.defaults)) {\n      assert(truthy(useLongestLength), \"'useLongestLength' must be set to true to use 'defaults'\");\n    }\n\n    var zipCount = 0;\n\n    for (var i = 0, len = inputs.length; i < len; i++) {\n      var arr = inputs[i];\n      if (isNil(arr)) return null;\n      assert(isArray(arr), \"'inputs' expression values must resolve to an array or null\");\n      zipCount = useLongestLength ? Math.max(zipCount, arr.length) : Math.min(zipCount || arr.length, arr.length);\n    }\n\n    var result = [];\n    var defaults = expr.defaults || [];\n\n    var _loop = function _loop(_i) {\n      var temp = inputs.map(function (val, index) {\n        return isNil(val[_i]) ? defaults[index] || null : val[_i];\n      });\n      result.push(temp);\n    };\n\n    for (var _i = 0; _i < zipCount; _i++) {\n      _loop(_i);\n    }\n\n    return result;\n  }\n  /**\n   * Combines multiple documents into a single document.\n   * @param {*} obj\n   * @param {*} expr\n   */\n\n  function $mergeObjects(obj, expr) {\n    var docs = computeValue(obj, expr);\n\n    if (isArray(docs)) {\n      return reduce(docs, function (memo, o) {\n        return Object.assign(memo, o);\n      }, {});\n    }\n\n    return {};\n  }\n\n  /**\n   * Returns true only when all its expressions evaluate to true. Accepts any number of argument expressions.\n   *\n   * @param obj\n   * @param expr\n   * @returns {boolean}\n   */\n\n  function $and(obj, expr) {\n    var value = computeValue(obj, expr);\n    return truthy(value) && value.every(truthy);\n  }\n  /**\n   * Returns true when any of its expressions evaluates to true. Accepts any number of argument expressions.\n   *\n   * @param obj\n   * @param expr\n   * @returns {boolean}\n   */\n\n  function $or(obj, expr) {\n    var value = computeValue(obj, expr);\n    return truthy(value) && value.some(truthy);\n  }\n  /**\n   * Returns the boolean value that is the opposite of its argument expression. Accepts a single argument expression.\n   *\n   * @param obj\n   * @param expr\n   * @returns {boolean}\n   */\n\n  function $not(obj, expr) {\n    return !computeValue(obj, expr[0]);\n  }\n\n  /**\n   * Returns an iterator\n   * @param {*} source An iterable source (Array, Function, Object{next:Function})\n   */\n  function Lazy(source) {\n    return source instanceof Iterator ? source : new Iterator(source);\n  }\n  Lazy.isIterator = isIterator;\n  /**\n   * Checks whether the given object is compatible with iterator i.e Object{next:Function}\n   * @param {*} o An object\n   */\n\n  function isIterator(o) {\n    return !!o && _typeof(o) === 'object' && isFn(o.next);\n  }\n\n  function isFn(f) {\n    return !!f && typeof f === 'function';\n  }\n\n  function dropItem(array, i) {\n    var rest = array.slice(i + 1);\n    array.splice(i);\n    Array.prototype.push.apply(array, rest);\n  } // stop iteration error\n\n\n  var DONE = new Error(); // Lazy function type flags\n\n  var LAZY_MAP = 1;\n  var LAZY_FILTER = 2;\n  var LAZY_TAKE = 3;\n  var LAZY_DROP = 4;\n\n  function baseIterator(nextFn, iteratees, buffer) {\n    var done = false;\n    var index = -1;\n\n    var bIndex = 0; // index for the buffer\n\n    return function (b) {\n      // special hack to collect all values into buffer\n      b = b === buffer;\n\n      try {\n        outer: while (!done) {\n          var o = nextFn();\n          index++;\n          var mIndex = -1;\n          var mSize = iteratees.length;\n          var innerDone = false;\n\n          while (++mIndex < mSize) {\n            var member = iteratees[mIndex],\n                func = member.func,\n                type = member.type;\n\n            switch (type) {\n              case LAZY_MAP:\n                o = func(o, index);\n                break;\n\n              case LAZY_FILTER:\n                if (!func(o, index)) continue outer;\n                break;\n\n              case LAZY_TAKE:\n                --member.func;\n                if (!member.func) innerDone = true;\n                break;\n\n              case LAZY_DROP:\n                --member.func;\n                if (!member.func) dropItem(iteratees, mIndex);\n                continue outer;\n\n              default:\n                break outer;\n            }\n          }\n\n          done = innerDone;\n\n          if (b) {\n            buffer[bIndex++] = o;\n          } else {\n            return {\n              value: o,\n              done: false\n            };\n          }\n        }\n      } catch (e) {\n        if (e !== DONE) throw e;\n      }\n\n      done = true;\n      return {\n        done: true\n      };\n    };\n  }\n\n  var Iterator = /*#__PURE__*/function () {\n    /**\n     * @param {*} source An iterable object or function.\n     *    Array - return one element per cycle\n     *    Object{next:Function} - call next() for the next value (this also handles generator functions)\n     *    Function - call to return the next value\n     * @param {Function} fn An optional transformation function\n     */\n    function Iterator(source) {\n      _classCallCheck(this, Iterator);\n\n      this.__iteratees = []; // lazy function chain\n\n      this.__first = false; // flag whether to return a single value\n\n      this.__done = false;\n      this.__buf = [];\n\n      if (isFn(source)) {\n        // make iterable\n        source = {\n          next: source\n        };\n      }\n\n      if (isIterator(source)) {\n        var src = source;\n\n        source = function source() {\n          var o = src.next();\n          if (o.done) throw DONE;\n          return o.value;\n        };\n      } else if (Array.isArray(source)) {\n        var data = source;\n        var size = data.length;\n        var index = 0;\n\n        source = function source() {\n          if (index < size) return data[index++];\n          throw DONE;\n        };\n      } else if (!isFn(source)) {\n        throw new Error(\"Source is not iterable. Must be Array, Function or Object{next:Function}\");\n      } // create next function\n\n\n      this.next = baseIterator(source, this.__iteratees, this.__buf);\n    }\n\n    _createClass(Iterator, [{\n      key: \"_validate\",\n      value: function _validate() {\n        if (this.__first) throw new Error(\"Cannot add iteratee/transform after `first()`\");\n      }\n      /**\n       * Add an iteratee to this lazy sequence\n       * @param {Object} iteratee\n       */\n\n    }, {\n      key: \"_push\",\n      value: function _push(iteratee) {\n        this._validate();\n\n        this.__iteratees.push(iteratee);\n\n        return this;\n      } // Iteratees methods\n\n      /**\n       * Transform each item in the sequence to a new value\n       * @param {Function} f\n       */\n\n    }, {\n      key: \"map\",\n      value: function map(f) {\n        return this._push({\n          type: LAZY_MAP,\n          func: f\n        });\n      }\n      /**\n       * Select only items matching the given predicate\n       * @param {Function} pred\n       */\n\n    }, {\n      key: \"filter\",\n      value: function filter(pred) {\n        return this._push({\n          type: LAZY_FILTER,\n          func: pred\n        });\n      }\n      /**\n       * Take given numbe for values from sequence\n       * @param {Number} n A number greater than 0\n       */\n\n    }, {\n      key: \"take\",\n      value: function take(n) {\n        return n > 0 ? this._push({\n          type: LAZY_TAKE,\n          func: n\n        }) : this;\n      }\n      /**\n       * Drop a number of values from the sequence\n       * @param {Number} n Number of items to drop greater than 0\n       */\n\n    }, {\n      key: \"drop\",\n      value: function drop(n) {\n        return n > 0 ? this._push({\n          type: LAZY_DROP,\n          func: n\n        }) : this;\n      } // Transformations\n\n      /**\n       * Returns a new lazy object with results of the transformation\n       * The entire sequence is realized.\n       *\n       * @param {Function} fn Tranform function of type (Array) => (Any)\n       */\n\n    }, {\n      key: \"transform\",\n      value: function transform(fn) {\n        this._validate();\n\n        var self = this;\n        var iter;\n        return Lazy(function () {\n          if (!iter) {\n            iter = Lazy(fn(self.value()));\n          }\n\n          return iter.next();\n        });\n      }\n      /**\n       * Mark this lazy object to return only the first result on `lazy.value()`.\n       * No more iteratees or transformations can be added after this method is called.\n       */\n\n    }, {\n      key: \"first\",\n      value: function first() {\n        this.take(1);\n        this.__first = true;\n        return this;\n      } // Terminal methods\n\n      /**\n       * Returns the fully realized values of the iterators.\n       * The return value will be an array unless `lazy.first()` was used.\n       * The realized values are cached for subsequent calls\n       */\n\n    }, {\n      key: \"value\",\n      value: function value() {\n        if (!this.__done) {\n          this.__done = this.next(this.__buf).done;\n        }\n\n        return this.__first ? this.__buf[0] : this.__buf;\n      }\n      /**\n       * Execute the funcion for each value. Will stop when an execution returns false.\n       * @param {Function} f\n       * @returns {Boolean} false iff `f` return false for any execution, otherwise true\n       */\n\n    }, {\n      key: \"each\",\n      value: function each(f) {\n        while (1) {\n          var o = this.next();\n          if (o.done) break;\n          if (f(o.value) === false) return false;\n        }\n\n        return true;\n      }\n      /**\n       * Returns the reduction of sequence according the reducing function\n       *\n       * @param {*} f a reducing function\n       * @param {*} init\n       */\n\n    }, {\n      key: \"reduce\",\n      value: function reduce(f, init) {\n        var o = this.next();\n        var i = 0;\n\n        if (init === undefined && !o.done) {\n          init = o.value;\n          o = this.next();\n          i++;\n        }\n\n        while (!o.done) {\n          init = f(init, o.value, i++);\n          o = this.next();\n        }\n\n        return init;\n      }\n      /**\n       * Returns the number of matched items in the sequence\n       */\n\n    }, {\n      key: \"size\",\n      value: function size() {\n        return this.reduce(function (acc, n) {\n          return ++acc;\n        }, 0);\n      }\n    }]);\n\n    return Iterator;\n  }();\n\n  if (typeof Symbol === 'function') {\n    Iterator.prototype[Symbol.iterator] = function () {\n      return this;\n    };\n  }\n\n  /**\n   * Aggregator for defining filter using mongoDB aggregation pipeline syntax\n   *\n   * @param operators an Array of pipeline operators\n   * @constructor\n   */\n\n  var Aggregator = /*#__PURE__*/function () {\n    function Aggregator(operators, options) {\n      _classCallCheck(this, Aggregator);\n\n      this.__operators = operators;\n      this.__options = options;\n    }\n    /**\n     * Returns an `Lazy` iterator for processing results of pipeline\n     *\n     * @param {*} collection An array or iterator object\n     * @param {Query} query the `Query` object to use as context\n     * @returns {Iterator} an iterator object\n     */\n\n\n    _createClass(Aggregator, [{\n      key: \"stream\",\n      value: function stream(collection, query) {\n        var _this = this;\n\n        collection = Lazy(collection);\n        var pipelineOperators = OPERATORS[OP_PIPELINE];\n\n        if (!isEmpty(this.__operators)) {\n          // run aggregation pipeline\n          each(this.__operators, function (operator) {\n            var key = keys(operator);\n            assert(key.length === 1 && inArray(ops(OP_PIPELINE), key[0]), \"invalid aggregation operator \".concat(key));\n            key = key[0];\n\n            if (query && query instanceof Query) {\n              collection = pipelineOperators[key].call(query, collection, operator[key], _this.__options);\n            } else {\n              collection = pipelineOperators[key](collection, operator[key], _this.__options);\n            }\n          });\n        }\n\n        return collection;\n      }\n      /**\n       * Return the results of the aggregation as an array.\n       * @param {*} collection\n       * @param {*} query\n       */\n\n    }, {\n      key: \"run\",\n      value: function run(collection, query) {\n        return this.stream(collection, query).value();\n      }\n    }]);\n\n    return Aggregator;\n  }();\n  /**\n   * Return the result collection after running the aggregation pipeline for the given collection.\n   * Shorthand for `(new Aggregator(pipeline, options)).run(collection)`\n   *\n   * @param {Array} collection Collection or stream of objects\n   * @param {Array} pipeline The pipeline operators to use\n   * @returns {Array}\n   */\n\n  function aggregate(collection, pipeline, options) {\n    assert(isArray(pipeline), 'Aggregation pipeline must be an array');\n    return new Aggregator(pipeline, options).run(collection);\n  }\n\n  /**\n   * Cursor to iterate and perform filtering on matched objects\n   * @param collection\n   * @param query\n   * @param projection\n   * @constructor\n   */\n\n  var Cursor = /*#__PURE__*/function () {\n    function Cursor(source, query, projection) {\n      _classCallCheck(this, Cursor);\n\n      this.__filterFn = query.test.bind(query);\n      this.__query = query;\n      this.__source = source;\n      this.__projection = projection || query.__projection;\n      this.__operators = [];\n      this.__result = null;\n      this.__stack = [];\n      this.__options = {};\n    }\n\n    _createClass(Cursor, [{\n      key: \"_fetch\",\n      value: function _fetch() {\n        if (!!this.__result) return this.__result; // add projection operator\n\n        if (isObject(this.__projection)) this.__operators.push({\n          '$project': this.__projection\n        }); // filter collection\n\n        this.__result = Lazy(this.__source).filter(this.__filterFn);\n\n        if (this.__operators.length > 0) {\n          this.__result = new Aggregator(this.__operators, this.__options).stream(this.__result, this.__query);\n        }\n\n        return this.__result;\n      }\n      /**\n       * Return remaining objects in the cursor as an array. This method exhausts the cursor\n       * @returns {Array}\n       */\n\n    }, {\n      key: \"all\",\n      value: function all() {\n        return this._fetch().value();\n      }\n      /**\n       * Returns the number of objects return in the cursor. This method exhausts the cursor\n       * @returns {Number}\n       */\n\n    }, {\n      key: \"count\",\n      value: function count() {\n        return this.all().length;\n      }\n      /**\n       * Returns a cursor that begins returning results only after passing or skipping a number of documents.\n       * @param {Number} n the number of results to skip.\n       * @return {Cursor} Returns the cursor, so you can chain this call.\n       */\n\n    }, {\n      key: \"skip\",\n      value: function skip(n) {\n        this.__operators.push({\n          '$skip': n\n        });\n\n        return this;\n      }\n      /**\n       * Constrains the size of a cursor's result set.\n       * @param {Number} n the number of results to limit to.\n       * @return {Cursor} Returns the cursor, so you can chain this call.\n       */\n\n    }, {\n      key: \"limit\",\n      value: function limit(n) {\n        this.__operators.push({\n          '$limit': n\n        });\n\n        return this;\n      }\n      /**\n       * Returns results ordered according to a sort specification.\n       * @param {Object} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending\n       * @return {Cursor} Returns the cursor, so you can chain this call.\n       */\n\n    }, {\n      key: \"sort\",\n      value: function sort(modifier) {\n        this.__operators.push({\n          '$sort': modifier\n        });\n\n        return this;\n      }\n      /**\n       * Specifies the collation for the cursor returned by the `mingo.Query.find`\n       * @param {*} options\n       */\n\n    }, {\n      key: \"collation\",\n      value: function collation(options) {\n        this.__options['collation'] = options;\n        return this;\n      }\n      /**\n       * Returns the next document in a cursor.\n       * @returns {Object | Boolean}\n       */\n\n    }, {\n      key: \"next\",\n      value: function next() {\n        if (!this.__stack) return; // done\n\n        if (this.__stack.length > 0) return this.__stack.pop(); // yield value obtains in hasNext()\n\n        var o = this._fetch().next();\n\n        if (!o.done) return o.value;\n        this.__stack = null;\n        return;\n      }\n      /**\n       * Returns true if the cursor has documents and can be iterated.\n       * @returns {boolean}\n       */\n\n    }, {\n      key: \"hasNext\",\n      value: function hasNext() {\n        if (!this.__stack) return false; // done\n\n        if (this.__stack.length > 0) return true; // there is a value on stack\n\n        var o = this._fetch().next();\n\n        if (!o.done) {\n          this.__stack.push(o.value);\n        } else {\n          this.__stack = null;\n        }\n\n        return !!this.__stack;\n      }\n      /**\n       * Applies a function to each document in a cursor and collects the return values in an array.\n       * @param callback\n       * @returns {Array}\n       */\n\n    }, {\n      key: \"map\",\n      value: function map(callback) {\n        return this._fetch().map(callback).value();\n      }\n      /**\n       * Applies a JavaScript function for every document in a cursor.\n       * @param callback\n       */\n\n    }, {\n      key: \"forEach\",\n      value: function forEach(callback) {\n        this._fetch().each(callback);\n      }\n    }]);\n\n    return Cursor;\n  }();\n\n  if (typeof Symbol === 'function') {\n    /**\n     * Applies an [ES2015 Iteration protocol][] compatible implementation\n     * [ES2015 Iteration protocol]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n     * @returns {Object}\n     */\n    Cursor.prototype[Symbol.iterator] = function () {\n      return this._fetch();\n    };\n  }\n\n  /**\n   * Query object to test collection elements with\n   * @param criteria the pass criteria for the query\n   * @param projection optional projection specifiers\n   * @constructor\n   */\n\n  var Query = /*#__PURE__*/function () {\n    function Query(criteria, projection) {\n      _classCallCheck(this, Query);\n\n      this.__criteria = criteria;\n      this.__projection = projection || {};\n      this.__compiled = [];\n\n      this._compile();\n    }\n\n    _createClass(Query, [{\n      key: \"_compile\",\n      value: function _compile() {\n        var _this = this;\n\n        assert(isObject(this.__criteria), 'query criteria must be an object');\n        var whereOperator;\n        each(this.__criteria, function (expr, field) {\n          // save $where operators to be executed after other operators\n          if ('$where' === field) {\n            whereOperator = {\n              field: field,\n              expr: expr\n            };\n          } else if ('$expr' === field) {\n            _this._processOperator(field, field, expr);\n          } else if (inArray(['$and', '$or', '$nor'], field)) {\n            _this._processOperator(field, field, expr);\n          } else {\n            // normalize expression\n            assert(!isOperator(field), \"unknown top level operator: \".concat(field));\n            expr = normalize(expr);\n            each(expr, function (val, op) {\n              _this._processOperator(field, op, val);\n            });\n          }\n\n          if (isObject(whereOperator)) {\n            _this._processOperator(whereOperator.field, whereOperator.field, whereOperator.expr);\n          }\n        });\n      }\n    }, {\n      key: \"_processOperator\",\n      value: function _processOperator(field, operator, value) {\n        assert(has(OPERATORS[OP_QUERY], operator), \"invalid query operator \".concat(operator, \" detected\"));\n\n        this.__compiled.push(OPERATORS[OP_QUERY][operator](field, value));\n      }\n      /**\n       * Checks if the object passes the query criteria. Returns true if so, false otherwise.\n       * @param obj\n       * @returns {boolean}\n       */\n\n    }, {\n      key: \"test\",\n      value: function test(obj) {\n        for (var i = 0, len = this.__compiled.length; i < len; i++) {\n          if (!this.__compiled[i](obj)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n      /**\n       * Performs a query on a collection and returns a cursor object.\n       * @param collection\n       * @param projection\n       * @returns {Cursor}\n       */\n\n    }, {\n      key: \"find\",\n      value: function find(collection, projection) {\n        return new Cursor(collection, this, projection);\n      }\n      /**\n       * Remove matched documents from the collection returning the remainder\n       * @param collection\n       * @returns {Array}\n       */\n\n    }, {\n      key: \"remove\",\n      value: function remove(collection) {\n        var _this2 = this;\n\n        return reduce(collection, function (acc, obj) {\n          if (!_this2.test(obj)) acc.push(obj);\n          return acc;\n        }, []);\n      }\n    }]);\n\n    return Query;\n  }();\n  /**\n   * Performs a query on a collection and returns a cursor object.\n   *\n   * @param collection\n   * @param criteria\n   * @param projection\n   * @returns {Cursor}\n   */\n\n  function find(collection, criteria, projection) {\n    return new Query(criteria).find(collection, projection);\n  }\n  /**\n   * Returns a new array without objects which match the criteria\n   *\n   * @param collection\n   * @param criteria\n   * @returns {Array}\n   */\n\n  function remove(collection, criteria) {\n    return new Query(criteria).remove(collection);\n  }\n\n  /**\n   * Query and Projection Operators. https://docs.mongodb.com/manual/reference/operator/query/\n   */\n  /**\n   * Checks that two values are equal.\n   *\n   * @param a         The lhs operand as resolved from the object by the given selector\n   * @param b         The rhs operand provided by the user\n   * @returns {*}\n   */\n\n  function $eq(a, b) {\n    // start with simple equality check\n    if (isEqual(a, b)) return true; // https://docs.mongodb.com/manual/tutorial/query-for-null-fields/\n\n    if (isNil(a) && isNil(b)) return true; // check\n\n    if (isArray(a)) {\n      var eq = isEqual.bind(null, b);\n      return a.some(eq) || flatten(a, 1).some(eq);\n    }\n\n    return false;\n  }\n  /**\n   * Matches all values that are not equal to the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $ne(a, b) {\n    return !$eq(a, b);\n  }\n  /**\n   * Matches any of the values that exist in an array specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {*}\n   */\n\n  function $in$1(a, b) {\n    // queries for null should be able to find undefined fields\n    if (isNil(a)) return b.some(isNull);\n    return intersection(ensureArray(a), b).length > 0;\n  }\n  /**\n   * Matches values that do not exist in an array specified to the query.\n   *\n   * @param a\n   * @param b\n   * @returns {*|boolean}\n   */\n\n  function $nin(a, b) {\n    return !$in$1(a, b);\n  }\n  /**\n   * Matches values that are less than the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $lt(a, b) {\n    return compare$1(a, b, function (x, y) {\n      return x < y;\n    });\n  }\n  /**\n   * Matches values that are less than or equal to the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $lte(a, b) {\n    return compare$1(a, b, function (x, y) {\n      return x <= y;\n    });\n  }\n  /**\n   * Matches values that are greater than the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $gt(a, b) {\n    return compare$1(a, b, function (x, y) {\n      return x > y;\n    });\n  }\n  /**\n   * Matches values that are greater than or equal to the value specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $gte(a, b) {\n    return compare$1(a, b, function (x, y) {\n      return x >= y;\n    });\n  }\n  /**\n   * Performs a modulo operation on the value of a field and selects documents with a specified result.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $mod$1(a, b) {\n    return ensureArray(a).some(function (x) {\n      return isNumber(x) && isArray(b) && b.length === 2 && x % b[0] === b[1];\n    });\n  }\n  /**\n   * Selects documents where values match a specified regular expression.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $regex(a, b) {\n    a = ensureArray(a);\n\n    var match = function match(x) {\n      return isString(x) && !!x.match(b);\n    };\n\n    return a.some(match) || flatten(a, 1).some(match);\n  }\n  /**\n   * Matches documents that have the specified field.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $exists(a, b) {\n    return (b === false || b === 0) && a === undefined || (b === true || b === 1) && a !== undefined;\n  }\n  /**\n   * Matches arrays that contain all elements specified in the query.\n   *\n   * @param a\n   * @param b\n   * @returns boolean\n   */\n\n  function $all(a, b) {\n    var matched = false;\n\n    if (isArray(a) && isArray(b)) {\n      for (var i = 0, len = b.length; i < len; i++) {\n        if (isObject(b[i]) && inArray(keys(b[i]), '$elemMatch')) {\n          matched = matched || $elemMatch(a, b[i].$elemMatch);\n        } else {\n          // order of arguments matter\n          return intersection(b, a).length === len;\n        }\n      }\n    }\n\n    return matched;\n  }\n  /**\n   * Selects documents if the array field is a specified size.\n   *\n   * @param a\n   * @param b\n   * @returns {*|boolean}\n   */\n\n  function $size$1(a, b) {\n    return isArray(a) && isNumber(b) && a.length === b;\n  }\n  /**\n   * Selects documents if element in the array field matches all the specified $elemMatch condition.\n   *\n   * @param a {Array} element to match against\n   * @param b {Object} subquery\n   */\n\n  function $elemMatch(a, b) {\n    if (isArray(a) && !isEmpty(a)) {\n      var format = function format(x) {\n        return x;\n      };\n\n      var criteria = b; // If we find an operator in the subquery, we fake a field to point to it.\n      // This is an attempt to ensure that it a valid criteria.\n\n      if (keys(b).every(isOperator)) {\n        criteria = {\n          temp: b\n        };\n\n        format = function format(x) {\n          return {\n            temp: x\n          };\n        };\n      }\n\n      var query = new Query(criteria);\n\n      for (var i = 0, len = a.length; i < len; i++) {\n        if (query.test(format(a[i]))) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Selects documents if a field is of the specified type.\n   *\n   * @param a\n   * @param b\n   * @returns {boolean}\n   */\n\n  function $type(a, b) {\n    switch (b) {\n      case 1:\n      case 'double':\n        return isNumber(a) && (a + '').indexOf('.') !== -1;\n\n      case 2:\n      case T_STRING:\n        return isString(a);\n\n      case 3:\n      case T_OBJECT:\n        return isObject(a);\n\n      case 4:\n      case T_ARRAY:\n        return isArray(a);\n\n      case 6:\n      case T_UNDEFINED:\n        return isNil(a);\n\n      case 8:\n      case T_BOOL:\n        return isBoolean(a);\n\n      case 9:\n      case T_DATE:\n        return isDate(a);\n\n      case 10:\n      case T_NULL:\n        return isNull(a);\n\n      case 11:\n      case T_REGEX:\n        return isRegExp(a);\n\n      case 16:\n      case 'int':\n        return isNumber(a) && a <= 2147483647 && (a + '').indexOf('.') === -1;\n\n      case 18:\n      case 'long':\n        return isNumber(a) && a > 2147483647 && a <= 9223372036854775807 && (a + '').indexOf('.') === -1;\n\n      case 19:\n      case 'decimal':\n        return isNumber(a);\n\n      default:\n        return false;\n    }\n  }\n\n  function compare$1(a, b, f) {\n    return ensureArray(a).some(function (x) {\n      return getType(x) === getType(b) && f(x, b);\n    });\n  }\n\n  function createComparison(f) {\n    return function (obj, expr) {\n      var args = computeValue(obj, expr);\n      return f(args[0], args[1]);\n    };\n  }\n\n  var $eq$1 = createComparison($eq);\n  var $ne$1 = createComparison($ne);\n  var $gt$1 = createComparison($gt);\n  var $lt$1 = createComparison($lt);\n  var $gte$1 = createComparison($gte);\n  var $lte$1 = createComparison($lte);\n  var $nin$1 = createComparison($nin);\n  /**\n   * Compares two values and returns the result of the comparison as an integer.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $cmp(obj, expr) {\n    var args = computeValue(obj, expr);\n    if (args[0] > args[1]) return 1;\n    if (args[0] < args[1]) return -1;\n    return 0;\n  }\n\n  /**\n   * Conditional operators\n   */\n  /**\n   * A ternary operator that evaluates one expression,\n   * and depending on the result returns the value of one following expressions.\n   *\n   * @param obj\n   * @param expr\n   */\n\n  function $cond(obj, expr) {\n    var ifExpr, thenExpr, elseExpr;\n    var errorMsg = '$cond: invalid arguments';\n\n    if (isArray(expr)) {\n      assert(expr.length === 3, errorMsg);\n      ifExpr = expr[0];\n      thenExpr = expr[1];\n      elseExpr = expr[2];\n    } else {\n      assert(isObject(expr), errorMsg);\n      ifExpr = expr['if'];\n      thenExpr = expr['then'];\n      elseExpr = expr['else'];\n    }\n\n    var condition = computeValue(obj, ifExpr);\n    return condition ? computeValue(obj, thenExpr) : computeValue(obj, elseExpr);\n  }\n  /**\n   * An operator that evaluates a series of case expressions. When it finds an expression which\n   * evaluates to true, it returns the resulting expression for that case. If none of the cases\n   * evaluate to true, it returns the default expression.\n   *\n   * @param obj\n   * @param expr\n   */\n\n  function $switch(obj, expr) {\n    var errorMsg = 'Invalid arguments for $switch operator';\n    assert(expr.branches, errorMsg);\n    var validBranch = expr.branches.find(function (branch) {\n      assert(branch['case'] && branch['then'], errorMsg);\n      return computeValue(obj, branch['case']);\n    });\n\n    if (validBranch) {\n      return computeValue(obj, validBranch.then);\n    } else {\n      assert(expr['default'], errorMsg);\n      return computeValue(obj, expr[\"default\"]);\n    }\n  }\n  /**\n   * Evaluates an expression and returns the first expression if it evaluates to a non-null value.\n   * Otherwise, $ifNull returns the second expression's value.\n   *\n   * @param obj\n   * @param expr\n   * @returns {*}\n   */\n\n  function $ifNull(obj, expr) {\n    assert(isArray(expr) && expr.length === 2, '$ifNull expression must resolve to array(2)');\n    var args = computeValue(obj, expr);\n    return isNil(args[0]) ? args[1] : args[0];\n  }\n\n  /**\n   * Returns the day of the year for a date as a number between 1 and 366 (leap year).\n   * @param obj\n   * @param expr\n   */\n\n  function $dayOfYear(obj, expr) {\n    var d = computeValue(obj, expr);\n    var start = new Date(d.getFullYear(), 0, 0);\n    var diff = d - start;\n    var oneDay = 1000 * 60 * 60 * 24;\n    return Math.round(diff / oneDay);\n  }\n  /**\n   * Returns the day of the month for a date as a number between 1 and 31.\n   * @param obj\n   * @param expr\n   */\n\n  function $dayOfMonth(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getDate();\n  }\n  /**\n   * Returns the day of the week for a date as a number between 1 (Sunday) and 7 (Saturday).\n   * @param obj\n   * @param expr\n   */\n\n  function $dayOfWeek(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getDay() + 1;\n  }\n  /**\n   * Returns the year for a date as a number (e.g. 2014).\n   * @param obj\n   * @param expr\n   */\n\n  function $year(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getFullYear();\n  }\n  /**\n   * Returns the month for a date as a number between 1 (January) and 12 (December).\n   * @param obj\n   * @param expr\n   */\n\n  function $month(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getMonth() + 1;\n  }\n  /**\n   * Returns the week number for a date as a number between 0\n   * (the partial week that precedes the first Sunday of the year) and 53 (leap year).\n   * @param obj\n   * @param expr\n   */\n\n  function $week(obj, expr) {\n    // source: http://stackoverflow.com/a/6117889/1370481\n    var d = computeValue(obj, expr); // Copy date so don't modify original\n\n    d = new Date(+d);\n    d.setHours(0, 0, 0); // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n\n    d.setDate(d.getDate() + 4 - (d.getDay() || 7)); // Get first day of year\n\n    var yearStart = new Date(d.getFullYear(), 0, 1); // Calculate full weeks to nearest Thursday\n\n    return Math.floor(((d - yearStart) / 8.64e7 + 1) / 7);\n  }\n  /**\n   * Returns the hour for a date as a number between 0 and 23.\n   * @param obj\n   * @param expr\n   */\n\n  function $hour(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getUTCHours();\n  }\n  /**\n   * Returns the minute for a date as a number between 0 and 59.\n   * @param obj\n   * @param expr\n   */\n\n  function $minute(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getMinutes();\n  }\n  /**\n   * Returns the seconds for a date as a number between 0 and 60 (leap seconds).\n   * @param obj\n   * @param expr\n   */\n\n  function $second(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getSeconds();\n  }\n  /**\n   * Returns the milliseconds of a date as a number between 0 and 999.\n   * @param obj\n   * @param expr\n   */\n\n  function $millisecond(obj, expr) {\n    var d = computeValue(obj, expr);\n    return d.getMilliseconds();\n  } // used for formatting dates in $dateToString operator\n\n  var DATE_SYM_TABLE = {\n    '%Y': [$year, 4],\n    '%m': [$month, 2],\n    '%d': [$dayOfMonth, 2],\n    '%H': [$hour, 2],\n    '%M': [$minute, 2],\n    '%S': [$second, 2],\n    '%L': [$millisecond, 3],\n    '%j': [$dayOfYear, 3],\n    '%w': [$dayOfWeek, 1],\n    '%U': [$week, 2],\n    '%%': '%'\n  };\n  /**\n   * Returns the date as a formatted string.\n   *\n   * %Y  Year (4 digits, zero padded)  0000-9999\n   * %m  Month (2 digits, zero padded)  01-12\n   * %d  Day of Month (2 digits, zero padded)  01-31\n   * %H  Hour (2 digits, zero padded, 24-hour clock)  00-23\n   * %M  Minute (2 digits, zero padded)  00-59\n   * %S  Second (2 digits, zero padded)  00-60\n   * %L  Millisecond (3 digits, zero padded)  000-999\n   * %j  Day of year (3 digits, zero padded)  001-366\n   * %w  Day of week (1-Sunday, 7-Saturday)  1-7\n   * %U  Week of year (2 digits, zero padded)  00-53\n   * %%  Percent Character as a Literal  %\n   *\n   * @param obj current object\n   * @param expr operator expression\n   */\n\n  function $dateToString(obj, expr) {\n    var fmt = expr['format'];\n    var date = computeValue(obj, expr['date']);\n    var matches = fmt.match(/(%%|%Y|%m|%d|%H|%M|%S|%L|%j|%w|%U)/g);\n\n    for (var i = 0, len = matches.length; i < len; i++) {\n      var hdlr = DATE_SYM_TABLE[matches[i]];\n      var value = hdlr;\n\n      if (isArray(hdlr)) {\n        // reuse date operators\n        var fn = hdlr[0];\n        var pad = hdlr[1];\n        value = padDigits(fn(obj, date), pad);\n      } // replace the match with resolved value\n\n\n      fmt = fmt.replace(matches[i], value);\n    }\n\n    return fmt;\n  }\n\n  function padDigits(number, digits) {\n    return new Array(Math.max(digits - String(number).length + 1, 0)).join('0') + number;\n  }\n\n  /**\n   * Return a value without parsing.\n   * @param obj\n   * @param expr\n   */\n  function $literal(obj, expr) {\n    return expr;\n  }\n\n  /**\n   * Returns true if two sets have the same elements.\n   * @param obj\n   * @param expr\n   */\n\n  function $setEquals(obj, expr) {\n    var args = computeValue(obj, expr);\n    var xs = unique(args[0]);\n    var ys = unique(args[1]);\n    return xs.length === ys.length && xs.length === intersection(xs, ys).length;\n  }\n  /**\n   * Returns the common elements of the input sets.\n   * @param obj\n   * @param expr\n   */\n\n  function $setIntersection(obj, expr) {\n    var args = computeValue(obj, expr);\n    return intersection(args[0], args[1]);\n  }\n  /**\n   * Returns elements of a set that do not appear in a second set.\n   * @param obj\n   * @param expr\n   */\n\n  function $setDifference(obj, expr) {\n    var args = computeValue(obj, expr);\n    return args[0].filter(notInArray.bind(null, args[1]));\n  }\n  /**\n   * Returns a set that holds all elements of the input sets.\n   * @param obj\n   * @param expr\n   */\n\n  function $setUnion(obj, expr) {\n    var args = computeValue(obj, expr);\n    return union(args[0], args[1]);\n  }\n  /**\n   * Returns true if all elements of a set appear in a second set.\n   * @param obj\n   * @param expr\n   */\n\n  function $setIsSubset(obj, expr) {\n    var args = computeValue(obj, expr);\n    return intersection(args[0], args[1]).length === args[0].length;\n  }\n  /**\n   * Returns true if any elements of a set evaluate to true, and false otherwise.\n   * @param obj\n   * @param expr\n   */\n\n  function $anyElementTrue(obj, expr) {\n    // mongodb nests the array expression in another\n    var args = computeValue(obj, expr)[0];\n    return args.some(truthy);\n  }\n  /**\n   * Returns true if all elements of a set evaluate to true, and false otherwise.\n   * @param obj\n   * @param expr\n   */\n\n  function $allElementsTrue(obj, expr) {\n    // mongodb nests the array expression in another\n    var args = computeValue(obj, expr)[0];\n    return args.every(truthy);\n  }\n\n  /**\n   * Concatenates two strings.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string|*}\n   */\n\n  function $concat(obj, expr) {\n    var args = computeValue(obj, expr); // does not allow concatenation with nulls\n\n    if ([null, undefined].some(inArray.bind(null, args))) return null;\n    return args.join('');\n  }\n  /**\n   * Searches a string for an occurrence of a substring and returns the UTF-8 code point index of the first occurence.\n   * If the substring is not found, returns -1.\n   *\n   * @param  {Object} obj\n   * @param  {*} expr\n   * @return {*}\n   */\n\n  function $indexOfBytes(obj, expr) {\n    var arr = computeValue(obj, expr);\n    var errorMsg = '$indexOfBytes expression resolves to invalid an argument';\n    if (isNil(arr[0])) return null;\n    assert(isString(arr[0]) && isString(arr[1]), errorMsg);\n    var str = arr[0];\n    var searchStr = arr[1];\n    var start = arr[2];\n    var end = arr[3];\n    var valid = isNil(start) || isNumber(start) && start >= 0 && Math.round(start) === start;\n    valid = valid && (isNil(end) || isNumber(end) && end >= 0 && Math.round(end) === end);\n    assert(valid, errorMsg);\n    start = start || 0;\n    end = end || str.length;\n    if (start > end) return -1;\n    var index = str.substring(start, end).indexOf(searchStr);\n    return index > -1 ? index + start : index;\n  }\n  /**\n   * Splits a string into substrings based on a delimiter.\n   * If the delimiter is not found within the string, returns an array containing the original string.\n   *\n   * @param  {Object} obj\n   * @param  {Array} expr\n   * @return {Array} Returns an array of substrings.\n   */\n\n  function $split(obj, expr) {\n    var args = computeValue(obj, expr);\n    if (isNil(args[0])) return null;\n    assert(args.every(isString), '$split expression must result to array(2) of strings');\n    return args[0].split(args[1]);\n  }\n  /**\n   * Returns the number of UTF-8 encoded bytes in the specified string.\n   *\n   * @param  {Object} obj\n   * @param  {String} expr\n   * @return {Number}\n   */\n\n  function $strLenBytes(obj, expr) {\n    return ~-encodeURI(computeValue(obj, expr)).split(/%..|./).length;\n  }\n  /**\n   * Returns the number of UTF-8 code points in the specified string.\n   *\n   * @param  {Object} obj\n   * @param  {String} expr\n   * @return {Number}\n   */\n\n  function $strLenCP(obj, expr) {\n    return computeValue(obj, expr).length;\n  }\n  /**\n   * Compares two strings and returns an integer that reflects the comparison.\n   *\n   * @param obj\n   * @param expr\n   * @returns {number}\n   */\n\n  function $strcasecmp(obj, expr) {\n    var args = computeValue(obj, expr);\n    var a = args[0];\n    var b = args[1];\n    if (isEqual(a, b) || args.every(isNil)) return 0;\n    assert(args.every(isString), '$strcasecmp must resolve to array(2) of strings');\n    a = a.toUpperCase();\n    b = b.toUpperCase();\n    return a > b && 1 || a < b && -1 || 0;\n  }\n  /**\n   * Returns a substring of a string, starting at a specified index position and including the specified number of characters.\n   * The index is zero-based.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string}\n   */\n\n  function $substrBytes(obj, expr) {\n    var args = computeValue(obj, expr);\n    var s = args[0];\n    var index = args[1];\n    var count = args[2];\n    assert(isString(s) && isNumber(index) && index >= 0 && isNumber(count) && count >= 0, '$substrBytes: invalid arguments');\n    var buf = utf8Encode(s);\n    var validIndex = [];\n    var acc = 0;\n\n    for (var i = 0; i < buf.length; i++) {\n      validIndex.push(acc);\n      acc += buf[i].length;\n    }\n\n    var begin = validIndex.indexOf(index);\n    var end = validIndex.indexOf(index + count);\n    assert(begin > -1 && end > -1, '$substrBytes: invalid range, start or end index is a UTF-8 continuation byte.');\n    return s.substring(begin, end);\n  }\n  /**\n   * Returns a substring of a string, starting at a specified index position and including the specified number of characters.\n   * The index is zero-based.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string}\n   */\n\n  function $substr(obj, expr) {\n    var args = computeValue(obj, expr);\n    var s = args[0];\n    var index = args[1];\n    var count = args[2];\n\n    if (isString(s)) {\n      if (index < 0) {\n        return '';\n      } else if (count < 0) {\n        return s.substr(index);\n      } else {\n        return s.substr(index, count);\n      }\n    }\n\n    return '';\n  }\n  function $substrCP(obj, expr) {\n    return $substr(obj, expr);\n  }\n  /**\n   * Converts a string to lowercase.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string}\n   */\n\n  function $toLower(obj, expr) {\n    var value = computeValue(obj, expr);\n    return isEmpty(value) ? '' : value.toLowerCase();\n  }\n  /**\n   * Converts a string to uppercase.\n   *\n   * @param obj\n   * @param expr\n   * @returns {string}\n   */\n\n  function $toUpper(obj, expr) {\n    var value = computeValue(obj, expr);\n    return isEmpty(value) ? '' : value.toUpperCase();\n  }\n  var UTF8_MASK = [0xC0, 0xE0, 0xF0]; // encodes a unicode code point to a utf8 byte sequence\n  // https://encoding.spec.whatwg.org/#utf-8\n\n  function toUtf8(n) {\n    if (n < 0x80) return [n];\n    var count = n < 0x0800 && 1 || n < 0x10000 && 2 || 3;\n    var offset = UTF8_MASK[count - 1];\n    var utf8 = [(n >> 6 * count) + offset];\n\n    while (count > 0) {\n      utf8.push(0x80 | n >> 6 * --count & 0x3F);\n    }\n\n    return utf8;\n  }\n\n  function utf8Encode(s) {\n    var buf = [];\n\n    for (var i = 0, len = s.length; i < len; i++) {\n      buf.push(toUtf8(s.codePointAt(i)));\n    }\n\n    return buf;\n  }\n\n  /**\n   * Aggregation framework variable operators\n   */\n  /**\n   * Defines variables for use within the scope of a sub-expression and returns the result of the sub-expression.\n   *\n   * @param obj\n   * @param expr\n   * @returns {*}\n   */\n\n  function $let(obj, expr) {\n    var varsExpr = expr['vars'];\n    var inExpr = expr['in']; // resolve vars\n\n    var varsKeys = keys(varsExpr);\n    each(varsKeys, function (key) {\n      var val = computeValue(obj, varsExpr[key]);\n      var tempKey = '$' + key;\n      obj[tempKey] = val;\n    });\n    return computeValue(obj, inExpr);\n  }\n\n  var expressionOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $abs: $abs,\n    $add: $add,\n    $ceil: $ceil,\n    $divide: $divide,\n    $exp: $exp,\n    $floor: $floor,\n    $ln: $ln,\n    $log: $log,\n    $log10: $log10,\n    $mod: $mod,\n    $multiply: $multiply,\n    $pow: $pow,\n    $round: $round,\n    $sqrt: $sqrt,\n    $subtract: $subtract,\n    $trunc: $trunc,\n    $arrayElemAt: $arrayElemAt,\n    $arrayToObject: $arrayToObject,\n    $concatArrays: $concatArrays,\n    $filter: $filter,\n    $in: $in,\n    $indexOfArray: $indexOfArray,\n    $isArray: $isArray,\n    $map: $map,\n    $objectToArray: $objectToArray,\n    $range: $range,\n    $reduce: $reduce,\n    $reverseArray: $reverseArray,\n    $size: $size,\n    $slice: $slice,\n    $zip: $zip,\n    $mergeObjects: $mergeObjects,\n    $and: $and,\n    $or: $or,\n    $not: $not,\n    $eq: $eq$1,\n    $ne: $ne$1,\n    $gt: $gt$1,\n    $lt: $lt$1,\n    $gte: $gte$1,\n    $lte: $lte$1,\n    $nin: $nin$1,\n    $cmp: $cmp,\n    $cond: $cond,\n    $switch: $switch,\n    $ifNull: $ifNull,\n    $dayOfYear: $dayOfYear,\n    $dayOfMonth: $dayOfMonth,\n    $dayOfWeek: $dayOfWeek,\n    $year: $year,\n    $month: $month,\n    $week: $week,\n    $hour: $hour,\n    $minute: $minute,\n    $second: $second,\n    $millisecond: $millisecond,\n    $dateToString: $dateToString,\n    $literal: $literal,\n    $setEquals: $setEquals,\n    $setIntersection: $setIntersection,\n    $setDifference: $setDifference,\n    $setUnion: $setUnion,\n    $setIsSubset: $setIsSubset,\n    $anyElementTrue: $anyElementTrue,\n    $allElementsTrue: $allElementsTrue,\n    $concat: $concat,\n    $indexOfBytes: $indexOfBytes,\n    $split: $split,\n    $strLenBytes: $strLenBytes,\n    $strLenCP: $strLenCP,\n    $strcasecmp: $strcasecmp,\n    $substrBytes: $substrBytes,\n    $substr: $substr,\n    $substrCP: $substrCP,\n    $toLower: $toLower,\n    $toUpper: $toUpper,\n    $let: $let\n  });\n\n  /**\n   * Returns an array of all values for the selected field among for each document in that group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {Array|*}\n   */\n\n  function $push(collection, expr) {\n    if (isNil(expr)) return collection;\n    return collection.map(function (obj) {\n      return computeValue(obj, expr);\n    });\n  }\n\n  /**\n   * Returns an array of all the unique values for the selected field among for each document in that group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $addToSet(collection, expr) {\n    return unique($push(collection, expr));\n  }\n\n  /**\n   * Returns an average of all the values in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {number}\n   */\n\n  function $avg(collection, expr) {\n    var data = $push(collection, expr).filter(isNumber);\n    var sum = reduce(data, function (acc, n) {\n      return acc + n;\n    }, 0);\n    return sum / (data.length || 1);\n  }\n\n  /**\n   * Returns the first value in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $first(collection, expr) {\n    return collection.length > 0 ? computeValue(collection[0], expr) : undefined;\n  }\n\n  /**\n   * Returns the last value in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $last(collection, expr) {\n    return collection.length > 0 ? computeValue(collection[collection.length - 1], expr) : undefined;\n  }\n\n  /**\n   * Returns the highest value in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $max(collection, expr) {\n    return reduce($push(collection, expr), function (acc, n) {\n      return isNil(acc) || n > acc ? n : acc;\n    }, undefined);\n  }\n\n  /**\n   * Combines multiple documents into a single document.\n   *\n   * @param collection\n   * @param expr\n   * @returns {Array|*}\n   */\n\n  function $mergeObjects$1(collection, expr) {\n    return reduce(collection, function (memo, o) {\n      return Object.assign(memo, computeValue(o, expr));\n    }, {});\n  }\n\n  /**\n   * Returns the lowest value in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $min(collection, expr) {\n    return reduce($push(collection, expr), function (acc, n) {\n      return isNil(acc) || n < acc ? n : acc;\n    }, undefined);\n  }\n\n  /**\n   * Returns the population standard deviation of the input values.\n   *\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @return {Number}\n   */\n\n  function $stdDevPop(collection, expr) {\n    return stddev($push(collection, expr).filter(isNumber), false);\n  }\n\n  /**\n   * Returns the sample standard deviation of the input values.\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @return {Number|null}\n   */\n\n  function $stdDevSamp(collection, expr) {\n    return stddev($push(collection, expr).filter(isNumber), true);\n  }\n\n  /**\n   * Returns the sum of all the values in a group.\n   *\n   * @param collection\n   * @param expr\n   * @returns {*}\n   */\n\n  function $sum(collection, expr) {\n    if (!isArray(collection)) return 0; // take a short cut if expr is number literal\n\n    if (isNumber(expr)) return collection.length * expr;\n    return reduce($push(collection, expr).filter(isNumber), function (acc, n) {\n      return acc + n;\n    }, 0);\n  }\n\n  /**\n   * Group stage Accumulator Operators. https://docs.mongodb.com/manual/reference/operator/aggregation-\n   */\n\n  var groupOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $addToSet: $addToSet,\n    $avg: $avg,\n    $first: $first,\n    $last: $last,\n    $max: $max,\n    $mergeObjects: $mergeObjects$1,\n    $min: $min,\n    $push: $push,\n    $stdDevPop: $stdDevPop,\n    $stdDevSamp: $stdDevSamp,\n    $sum: $sum\n  });\n\n  /**\n   * Adds new fields to documents.\n   * Outputs documents that contain all existing fields from the input documents and newly added fields.\n   *\n   * @param {Array} collection\n   * @param {*} expr\n   * @param {Object} opt Pipeline options\n   */\n\n  function $addFields(collection, expr, opt) {\n    var newFields = keys(expr);\n    if (newFields.length === 0) return collection;\n    return collection.map(function (obj) {\n      var newObj = cloneDeep(obj);\n      each(newFields, function (field) {\n        var newValue = computeValue(obj, expr[field]);\n        setValue(newObj, field, newValue);\n      });\n      return newObj;\n    });\n  }\n  /**\n   * Alias for $addFields.\n   */\n\n  var $set = $addFields;\n\n  /**\n   * Categorizes incoming documents into groups, called buckets, based on a specified expression and bucket boundaries.\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/bucket/\n   *\n   * @param {*} collection\n   * @param {*} expr\n   * @param {Object} opt Pipeline options\n   */\n\n  function $bucket(collection, expr, opt) {\n    var boundaries = expr.boundaries;\n    var defaultKey = expr['default'];\n    var lower = boundaries[0]; // inclusive\n\n    var upper = boundaries[boundaries.length - 1]; // exclusive\n\n    var outputExpr = expr.output || {\n      'count': {\n        '$sum': 1\n      }\n    };\n    assert(boundaries.length > 2, \"$bucket 'boundaries' expression must have at least 3 elements\");\n    var boundType = getType(lower);\n\n    for (var i = 0, len = boundaries.length - 1; i < len; i++) {\n      assert(boundType === getType(boundaries[i + 1]), \"$bucket 'boundaries' must all be of the same type\");\n      assert(boundaries[i] < boundaries[i + 1], \"$bucket 'boundaries' must be sorted in ascending order\");\n    }\n\n    !isNil(defaultKey) && getType(expr[\"default\"]) === getType(lower) && assert(lower > expr[\"default\"] || upper < expr[\"default\"], \"$bucket 'default' expression must be out of boundaries range\");\n    var grouped = {};\n    each(boundaries, function (k) {\n      return grouped[k] = [];\n    }); // add default key if provided\n\n    if (!isNil(defaultKey)) grouped[defaultKey] = [];\n    var iterator = false;\n    return Lazy(function () {\n      if (!iterator) {\n        collection.each(function (obj) {\n          var key = computeValue(obj, expr.groupBy);\n\n          if (isNil(key) || key < lower || key >= upper) {\n            assert(!isNil(defaultKey), '$bucket require a default for out of range values');\n            grouped[defaultKey].push(obj);\n          } else {\n            assert(key >= lower && key < upper, \"$bucket 'groupBy' expression must resolve to a value in range of boundaries\");\n            var index = findInsertIndex(boundaries, key);\n            var boundKey = boundaries[Math.max(0, index - 1)];\n            grouped[boundKey].push(obj);\n          }\n        }); // upper bound is exclusive so we remove it\n\n        boundaries.pop();\n        if (!isNil(defaultKey)) boundaries.push(defaultKey);\n        iterator = Lazy(boundaries).map(function (key) {\n          var acc = accumulate(grouped[key], null, outputExpr);\n          return Object.assign(acc, {\n            '_id': key\n          });\n        });\n      }\n\n      return iterator.next();\n    });\n  }\n\n  /**\n   * Categorizes incoming documents into a specific number of groups, called buckets,\n   * based on a specified expression. Bucket boundaries are automatically determined\n   * in an attempt to evenly distribute the documents into the specified number of buckets.\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/bucketAuto/\n   *\n   * @param {*} collection\n   * @param {*} expr\n   * @param {*} opt Pipeline options\n   */\n\n  function $bucketAuto(collection, expr, opt) {\n    var outputExpr = expr.output || {\n      'count': {\n        '$sum': 1\n      }\n    };\n    var groupByExpr = expr.groupBy;\n    var bucketCount = expr.buckets;\n    assert(bucketCount > 0, \"The $bucketAuto 'buckets' field must be greater than 0, but found: \" + bucketCount);\n    return collection.transform(function (coll) {\n      var approxBucketSize = Math.max(1, Math.round(coll.length / bucketCount));\n      var computeValueOptimized = memoize(computeValue);\n      var grouped = {};\n      var remaining = [];\n      var sorted = sortBy(coll, function (o) {\n        var key = computeValueOptimized(o, groupByExpr);\n\n        if (isNil(key)) {\n          remaining.push(o);\n        } else {\n          grouped[key] || (grouped[key] = []);\n          grouped[key].push(o);\n        }\n\n        return key;\n      });\n      var ID_KEY = idKey();\n      var result = [];\n      var index = 0; // counter for sorted collection\n\n      for (var i = 0, len = sorted.length; i < bucketCount && index < len; i++) {\n        var boundaries = {};\n        var bucketItems = [];\n\n        for (var j = 0; j < approxBucketSize && index < len; j++) {\n          var key = computeValueOptimized(sorted[index], groupByExpr);\n          if (isNil(key)) key = null; // populate current bucket with all values for current key\n\n          into(bucketItems, isNil(key) ? remaining : grouped[key]); // increase sort index by number of items added\n\n          index += isNil(key) ? remaining.length : grouped[key].length; // set the min key boundary if not already present\n\n          if (!has(boundaries, 'min')) boundaries.min = key;\n\n          if (result.length > 0) {\n            var lastBucket = result[result.length - 1];\n            lastBucket[ID_KEY].max = boundaries.min;\n          }\n        } // if is last bucket add remaining items\n\n\n        if (i == bucketCount - 1) {\n          into(bucketItems, sorted.slice(index));\n        }\n\n        result.push(Object.assign(accumulate(bucketItems, null, outputExpr), {\n          '_id': boundaries\n        }));\n      }\n\n      if (result.length > 0) {\n        result[result.length - 1][ID_KEY].max = computeValueOptimized(sorted[sorted.length - 1], groupByExpr);\n      }\n\n      return result;\n    });\n  }\n\n  /**\n   * Returns a document that contains a count of the number of documents input to the stage.\n   *\n   * @param  {Array} collection\n   * @param  {String} expr\n   * @param {Object} opt Pipeline options\n   * @return {Object}\n   */\n\n  function $count(collection, expr, opt) {\n    assert(isString(expr) && expr.trim() !== '' && expr.indexOf('.') === -1 && expr.trim()[0] !== '$', 'Invalid expression value for $count');\n    return Lazy(function () {\n      var o = {};\n      o[expr] = collection.size();\n      return {\n        value: o,\n        done: false\n      };\n    }).first();\n  }\n\n  /**\n   * Processes multiple aggregation pipelines within a single stage on the same set of input documents.\n   * Enables the creation of multi-faceted aggregations capable of characterizing data across multiple dimensions, or facets, in a single stage.\n   */\n\n  function $facet(collection, expr, opt) {\n    return collection.transform(function (array) {\n      return [objectMap(expr, function (pipeline) {\n        return aggregate(array, pipeline);\n      })];\n    });\n  }\n\n  /**\n   * Groups documents together for the purpose of calculating aggregate values based on a collection of documents.\n   *\n   * @param collection\n   * @param expr\n   * @param opt Pipeline options\n   * @returns {Array}\n   */\n\n  function $group(collection, expr, opt) {\n    // lookup key for grouping\n    var ID_KEY = idKey();\n    var id = expr[ID_KEY];\n    return collection.transform(function (coll) {\n      var partitions = groupBy(coll, function (obj) {\n        return computeValue(obj, id, id);\n      }); // remove the group key\n\n      expr = clone(expr);\n      delete expr[ID_KEY];\n      var i = -1;\n      var size = partitions.keys.length;\n      return function () {\n        if (++i === size) return {\n          done: true\n        };\n        var value = partitions.keys[i];\n        var obj = {}; // exclude undefined key value\n\n        if (value !== undefined) {\n          obj[ID_KEY] = value;\n        } // compute remaining keys in expression\n\n\n        each(expr, function (val, key) {\n          obj[key] = accumulate(partitions.groups[i], key, val);\n        });\n        return {\n          value: obj,\n          done: false\n        };\n      };\n    });\n  }\n\n  /**\n   * Restricts the number of documents in an aggregation pipeline.\n   *\n   * @param collection\n   * @param value\n   * @param opt\n   * @returns {Object|*}\n   */\n  function $limit(collection, value, opt) {\n    return collection.take(value);\n  }\n\n  /**\n   * Performs a left outer join to another collection in the same database to filter in documents from the “joined” collection for processing.\n   *\n   * @param collection\n   * @param expr\n   * @param opt\n   */\n\n  function $lookup(collection, expr, opt) {\n    var joinColl = expr.from;\n    var localField = expr.localField;\n    var foreignField = expr.foreignField;\n    var asField = expr.as;\n    assert(isArray(joinColl) && isString(foreignField) && isString(localField) && isString(asField), '$lookup: invalid argument');\n    var hash = {};\n    each(joinColl, function (obj) {\n      var k = hashCode(resolve(obj, foreignField));\n      hash[k] = hash[k] || [];\n      hash[k].push(obj);\n    });\n    return collection.map(function (obj) {\n      var k = hashCode(resolve(obj, localField));\n      var newObj = clone(obj);\n      newObj[asField] = hash[k] || [];\n      return newObj;\n    });\n  }\n\n  /**\n   * Filters the document stream, and only allows matching documents to pass into the next pipeline stage.\n   * $match uses standard MongoDB queries.\n   *\n   * @param collection\n   * @param expr\n   * @param opt\n   * @returns {Array|*}\n   */\n\n  function $match(collection, expr, opt) {\n    var q = new Query(expr);\n    return collection.filter(function (o) {\n      return q.test(o);\n    });\n  }\n\n  /**\n   * Takes the documents returned by the aggregation pipeline and writes them to a specified collection.\n   *\n   * Unlike the $out operator in MongoDB, this operator can appear in any position in the pipeline and is\n   * useful for collecting intermediate results of an aggregation operation.\n   *\n   * @param collection\n   * @param expr\n   * @param opt\n   * @returns {*}\n   */\n\n  function $out(collection, expr, opt) {\n    assert(isArray(expr), '$out expression must be an array');\n    return collection.map(function (o) {\n      expr.push(o);\n      return o; // passthrough\n    });\n  }\n\n  /**\n   * Reshapes a document stream.\n   * $project can rename, add, or remove fields as well as create computed values and sub-documents.\n   *\n   * @param collection\n   * @param expr\n   * @param opt\n   * @returns {Array}\n   */\n\n  function $project(collection, expr, opt) {\n    if (isEmpty(expr)) return collection; // result collection\n\n    var expressionKeys = keys(expr);\n    var idOnlyExcludedExpression = false;\n    var ID_KEY = idKey(); // validate inclusion and exclusion\n\n    validateExpression(expr);\n\n    if (inArray(expressionKeys, ID_KEY)) {\n      var id = expr[ID_KEY];\n\n      if (id === 0 || id === false) {\n        expressionKeys = expressionKeys.filter(notInArray.bind(null, [ID_KEY]));\n        assert(notInArray(expressionKeys, ID_KEY), 'Must not contain collections id key');\n        idOnlyExcludedExpression = isEmpty(expressionKeys);\n      }\n    } else {\n      // if not specified the add the ID field\n      expressionKeys.push(ID_KEY);\n    }\n\n    return collection.map(function (obj) {\n      return processObject(obj, expr, expressionKeys, idOnlyExcludedExpression);\n    });\n  }\n  /**\n   * Process the expression value for $project operators\n   *\n   * @param {Object} obj The object to use as context\n   * @param {Object} expr The experssion object of $project operator\n   * @param {Array} expressionKeys The key in the 'expr' object\n   * @param {Boolean} idOnlyExcludedExpression Boolean value indicating whether only the ID key is excluded\n   */\n\n  function processObject(obj, expr, expressionKeys, idOnlyExcludedExpression) {\n    var ID_KEY = idKey();\n    var newObj = {};\n    var foundSlice = false;\n    var foundExclusion = false;\n    var dropKeys = [];\n\n    if (idOnlyExcludedExpression) {\n      dropKeys.push(ID_KEY);\n    }\n\n    expressionKeys.forEach(function (key) {\n      // final computed value of the key\n      var value; // expression to associate with key\n\n      var subExpr = expr[key];\n\n      if (key !== ID_KEY && inArray([0, false], subExpr)) {\n        foundExclusion = true;\n      }\n\n      if (key === ID_KEY && isEmpty(subExpr)) {\n        // tiny optimization here to skip over id\n        value = obj[key];\n      } else if (isString(subExpr)) {\n        value = computeValue(obj, subExpr, key);\n      } else if (inArray([1, true], subExpr)) ; else if (isArray(subExpr)) {\n        value = subExpr.map(function (v) {\n          var r = computeValue(obj, v);\n          if (isNil(r)) return null;\n          return r;\n        });\n      } else if (isObject(subExpr)) {\n        var subExprKeys = keys(subExpr);\n        var operator = subExprKeys.length > 1 ? false : subExprKeys[0];\n\n        if (inArray(ops(OP_PROJECTION), operator)) {\n          var projectionOperators = OPERATORS[OP_PROJECTION]; // apply the projection operator on the operator expression for the key\n\n          if (operator === '$slice') {\n            // $slice is handled differently for aggregation and projection operations\n            if (ensureArray(subExpr[operator]).every(isNumber)) {\n              // $slice for projection operation\n              value = projectionOperators[operator](obj, subExpr[operator], key);\n              foundSlice = true;\n            } else {\n              // $slice for aggregation operation\n              value = computeValue(obj, subExpr, key);\n            }\n          } else {\n            value = projectionOperators[operator](obj, subExpr[operator], key);\n          }\n        } else {\n          // compute the value for the sub expression for the key\n          if (has(obj, key)) {\n            validateExpression(subExpr);\n            var nestedObj = obj[key];\n            value = isArray(nestedObj) ? nestedObj.map(function (o) {\n              return processObject(o, subExpr, subExprKeys, false);\n            }) : processObject(nestedObj, subExpr, subExprKeys, false);\n          } else {\n            value = computeValue(obj, subExpr, key);\n          }\n        }\n      } else {\n        dropKeys.push(key);\n        return;\n      } // get value with object graph\n\n\n      var objPathValue = resolveObj(obj, key, {\n        preserveMissingValues: true\n      }); // add the value at the path\n\n      if (objPathValue !== undefined) {\n        merge(newObj, objPathValue, {\n          flatten: true\n        });\n      } // if computed add/or remove accordingly\n\n\n      if (notInArray([0, 1, false, true], subExpr)) {\n        if (value === undefined) {\n          removeValue(newObj, key);\n        } else {\n          setValue(newObj, key, value);\n        }\n      }\n    }); // filter out all missing values preserved to support correct merging\n\n    filterMissing(newObj); // if projection included $slice operator\n    // Also if exclusion fields are found or we want to exclude only the id field\n    // include keys that were not explicitly excluded\n\n    if (foundSlice || foundExclusion || idOnlyExcludedExpression) {\n      newObj = Object.assign({}, obj, newObj);\n\n      if (dropKeys.length > 0) {\n        newObj = cloneDeep(newObj);\n        each(dropKeys, function (k) {\n          return removeValue(newObj, k);\n        });\n      }\n    }\n\n    return newObj;\n  }\n  /**\n   * Validate inclusion and exclusion values in expression\n   *\n   * @param {Object} expr The expression given for the projection\n   */\n\n\n  function validateExpression(expr) {\n    var ID_KEY = idKey();\n    var check = [false, false];\n    each(expr, function (v, k) {\n      if (k === ID_KEY) return;\n\n      if (v === 0 || v === false) {\n        check[0] = true;\n      } else if (v === 1 || v === true) {\n        check[1] = true;\n      }\n\n      assert(!(check[0] && check[1]), 'Projection cannot have a mix of inclusion and exclusion.');\n    });\n  }\n\n  /**\n   * Restricts the contents of the documents based on information stored in the documents themselves.\n   *\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/redact/\n   */\n\n  function $redact(collection, expr, opt) {\n    return collection.map(function (obj) {\n      return redactObj(cloneDeep(obj), expr);\n    });\n  }\n\n  /**\n   * Replaces a document with the specified embedded document or new one.\n   * The replacement document can be any valid expression that resolves to a document.\n   *\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/replaceRoot/\n   *\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @param  {Object} opt\n   * @return {*}\n   */\n\n  function $replaceRoot(collection, expr, opt) {\n    return collection.map(function (obj) {\n      obj = computeValue(obj, expr.newRoot);\n      assert(isObject(obj), '$replaceRoot expression must return an object');\n      return obj;\n    });\n  }\n\n  /**\n   * Randomly selects the specified number of documents from its input.\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/sample/\n   *\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @param  {Object} opt\n   * @return {*}\n   */\n\n  function $sample(collection, expr, opt) {\n    var size = expr.size;\n    assert(isNumber(size), '$sample size must be a positive integer');\n    return collection.transform(function (xs) {\n      var len = xs.length;\n      var i = -1;\n      return function () {\n        if (++i === size) return {\n          done: true\n        };\n        var n = Math.floor(Math.random() * len);\n        return {\n          value: xs[n],\n          done: false\n        };\n      };\n    });\n  }\n\n  /**\n   * Skips over a specified number of documents from the pipeline and returns the rest.\n   *\n   * @param collection\n   * @param value\n   * @param  {Object} opt\n   * @returns {*}\n   */\n  function $skip(collection, value, opt) {\n    return collection.drop(value);\n  }\n\n  /**\n   * Takes all input documents and returns them in a stream of sorted documents.\n   *\n   * @param collection\n   * @param sortKeys\n   * @param  {Object} opt\n   * @returns {*}\n   */\n\n  function $sort(collection, sortKeys, opt) {\n    if (isEmpty(sortKeys) || !isObject(sortKeys)) return collection;\n    opt = opt || {};\n    var cmp = compare;\n    var collationSpec = opt['collation']; // use collation comparator if provided\n\n    if (isObject(collationSpec) && isString(collationSpec.locale)) {\n      cmp = collationComparator(collationSpec);\n    }\n\n    return collection.transform(function (coll) {\n      var modifiers = keys(sortKeys);\n      each(modifiers.reverse(), function (key) {\n        var grouped = groupBy(coll, function (obj) {\n          return resolve(obj, key);\n        });\n        var sortedIndex = {};\n        var indexKeys = sortBy(grouped.keys, function (k, i) {\n          sortedIndex[k] = i;\n          return k;\n        }, cmp);\n        if (sortKeys[key] === -1) indexKeys.reverse();\n        coll = [];\n        each(indexKeys, function (k) {\n          return into(coll, grouped.groups[sortedIndex[k]]);\n        });\n      });\n      return coll;\n    });\n  } // MongoDB collation strength to JS localeCompare sensitivity mapping.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\n\n  var COLLATION_STRENGTH = {\n    // Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n    1: 'base',\n    //  Only strings that differ in base letters or accents and other diacritic marks compare as unequal.\n    // Examples: a ≠ b, a ≠ á, a = A.\n    2: 'accent',\n    // Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.\n    // Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A\n    3: 'variant' // case - Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n\n  };\n  /**\n   * Creates a comparator function for the given collation spec. See https://docs.mongodb.com/manual/reference/collation/\n   *\n   * @param spec {Object} The MongoDB collation spec.\n   * {\n   *   locale: <string>,\n   *   caseLevel: <boolean>,\n   *   caseFirst: <string>,\n   *   strength: <int>,\n   *   numericOrdering: <boolean>,\n   *   alternate: <string>,\n   *   maxVariable: <string>, // unsupported\n   *   backwards: <boolean> // unsupported\n   * }\n   */\n\n  function collationComparator(spec) {\n    var localeOpt = {\n      sensitivity: COLLATION_STRENGTH[spec.strength || 3],\n      caseFirst: spec.caseFirst === 'off' ? 'false' : spec.caseFirst || 'false',\n      numeric: spec.numericOrdering || false,\n      ignorePunctuation: spec.alternate === 'shifted'\n    }; // when caseLevel is true for strength  1:base and 2:accent, bump sensitivity to the nearest that supports case comparison\n\n    if ((spec.caseLevel || false) === true) {\n      if (localeOpt.sensitivity === 'base') localeOpt.sensitivity = 'case';\n      if (localeOpt.sensitivity === 'accent') localeOpt.sensitivity = 'variant';\n    }\n\n    var collator = new Intl.Collator(spec.locale, localeOpt);\n    return function (a, b) {\n      // non strings\n      if (!isString(a) || !isString(b)) return compare(a, b); // only for strings\n\n      var i = collator.compare(a, b);\n      if (i < 0) return -1;\n      if (i > 0) return 1;\n      return 0;\n    };\n  }\n\n  /**\n   * Groups incoming documents based on the value of a specified expression,\n   * then computes the count of documents in each distinct group.\n   *\n   * https://docs.mongodb.com/manual/reference/operator/aggregation/sortByCount/\n   *\n   * @param  {Array} collection\n   * @param  {Object} expr\n   * @param  {Object} opt\n   * @return {*}\n   */\n\n  function $sortByCount(collection, expr, opt) {\n    var newExpr = {\n      count: {\n        $sum: 1\n      }\n    };\n    newExpr[idKey()] = expr;\n    return $sort($group(collection, newExpr), {\n      count: -1\n    }, opt);\n  }\n\n  /**\n   * Takes an array of documents and returns them as a stream of documents.\n   *\n   * @param collection\n   * @param expr\n   * @param  {Object} opt\n   * @returns {Array}\n   */\n\n  function $unwind(collection, expr, opt) {\n    if (isString(expr)) {\n      expr = {\n        path: expr\n      };\n    }\n\n    var field = expr.path.substr(1);\n    var includeArrayIndex = expr.includeArrayIndex || false;\n    var preserveNullAndEmptyArrays = expr.preserveNullAndEmptyArrays || false;\n\n    var format = function format(o, i) {\n      if (includeArrayIndex !== false) o[includeArrayIndex] = i;\n      return o;\n    };\n\n    var value;\n    return Lazy(function () {\n      var _loop = function _loop() {\n        // take from lazy sequence if available\n        if (Lazy.isIterator(value)) {\n          var tmp = value.next();\n          if (!tmp.done) return {\n            v: tmp\n          };\n        } // fetch next object\n\n\n        var obj = collection.next();\n        if (obj.done) return {\n          v: obj\n        }; // unwrap value\n\n        obj = obj.value; // get the value of the field to unwind\n\n        value = resolve(obj, field); // throw error if value is not an array???\n\n        if (isArray(value)) {\n          if (value.length === 0 && preserveNullAndEmptyArrays === true) {\n            value = null; // reset unwind value\n\n            var _tmp = cloneDeep(obj);\n\n            removeValue(_tmp, field);\n            return {\n              v: {\n                value: format(_tmp, null),\n                done: false\n              }\n            };\n          } else {\n            // construct a lazy sequence for elements per value\n            value = Lazy(value).map(function (item, i) {\n              var tmp = cloneDeep(obj);\n              setValue(tmp, field, item);\n              return format(tmp, i);\n            });\n          }\n        } else if (!isEmpty(value) || preserveNullAndEmptyArrays === true) {\n          var _tmp2 = cloneDeep(obj);\n\n          return {\n            v: {\n              value: format(_tmp2, null),\n              done: false\n            }\n          };\n        }\n      };\n\n      while (true) {\n        var _ret = _loop();\n\n        if (_typeof(_ret) === \"object\") return _ret.v;\n      }\n    });\n  }\n\n  /**\n   * Pipeline Aggregation Stages. https://docs.mongodb.com/manual/reference/operator/aggregation-\n   */\n\n  var pipelineOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $addFields: $addFields,\n    $set: $set,\n    $bucket: $bucket,\n    $bucketAuto: $bucketAuto,\n    $count: $count,\n    $facet: $facet,\n    $group: $group,\n    $limit: $limit,\n    $lookup: $lookup,\n    $match: $match,\n    $out: $out,\n    $project: $project,\n    $redact: $redact,\n    $replaceRoot: $replaceRoot,\n    $sample: $sample,\n    $skip: $skip,\n    $sort: $sort,\n    $sortByCount: $sortByCount,\n    $unwind: $unwind\n  });\n\n  /**\n   * Projection Operators. https://docs.mongodb.com/manual/reference/operator/projection/\n   */\n  /**\n   * Projects the first element in an array that matches the query condition.\n   *\n   * @param obj\n   * @param field\n   * @param expr\n   */\n\n  function $(obj, expr, field) {\n    err('$ not implemented');\n  }\n  /**\n   * Projects only the first element from an array that matches the specified $elemMatch condition.\n   *\n   * @param obj\n   * @param field\n   * @param expr\n   * @returns {*}\n   */\n\n  function $elemMatch$1(obj, expr, field) {\n    var arr = resolve(obj, field);\n    var query = new Query(expr);\n    assert(isArray(arr), '$elemMatch: invalid argument');\n\n    for (var i = 0; i < arr.length; i++) {\n      if (query.test(arr[i])) return [arr[i]];\n    }\n\n    return undefined;\n  }\n  /**\n   * Limits the number of elements projected from an array. Supports skip and limit slices.\n   *\n   * @param obj\n   * @param field\n   * @param expr\n   */\n\n  function $slice$1(obj, expr, field) {\n    var xs = resolve(obj, field);\n    if (!isArray(xs)) return xs;\n\n    if (isArray(expr)) {\n      return slice(xs, expr[0], expr[1]);\n    } else {\n      assert(isNumber(expr), '$slice: invalid arguments for projection');\n      return slice(xs, expr);\n    }\n  }\n\n  var projectionOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $: $,\n    $elemMatch: $elemMatch$1,\n    $slice: $slice$1\n  });\n\n  // Query and Projection Operators. https://docs.mongodb.com/manual/reference/operator/query/\n\n  function createQueryOperator(pred) {\n    return function (selector, value) {\n      return function (obj) {\n        // value of field must be fully resolved.\n        var lhs = resolve(obj, selector, {\n          meta: true\n        });\n        lhs = unwrap(lhs.result, lhs.depth);\n        return pred(lhs, value);\n      };\n    };\n  }\n\n  var $all$1 = createQueryOperator($all);\n  var $elemMatch$2 = createQueryOperator($elemMatch);\n  var $eq$2 = createQueryOperator($eq);\n  var $exists$1 = createQueryOperator($exists);\n  var $gt$2 = createQueryOperator($gt);\n  var $gte$2 = createQueryOperator($gte);\n  var $in$2 = createQueryOperator($in$1);\n  var $lt$2 = createQueryOperator($lt);\n  var $lte$2 = createQueryOperator($lte);\n  var $mod$2 = createQueryOperator($mod$1);\n  var $ne$2 = createQueryOperator($ne);\n  var $nin$2 = createQueryOperator($nin);\n  var $regex$1 = createQueryOperator($regex);\n  var $size$2 = createQueryOperator($size$1);\n  var $type$1 = createQueryOperator($type);\n  /**\n   * Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $and$1(selector, value) {\n    assert(isArray(value), 'Invalid expression: $and expects value to be an Array');\n    var queries = [];\n    each(value, function (expr) {\n      return queries.push(new Query(expr));\n    });\n    return function (obj) {\n      for (var i = 0; i < queries.length; i++) {\n        if (!queries[i].test(obj)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }\n  /**\n   * Joins query clauses with a logical OR returns all documents that match the conditions of either clause.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $or$1(selector, value) {\n    assert(isArray(value), 'Invalid expression. $or expects value to be an Array');\n    var queries = [];\n    each(value, function (expr) {\n      return queries.push(new Query(expr));\n    });\n    return function (obj) {\n      for (var i = 0; i < queries.length; i++) {\n        if (queries[i].test(obj)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n  /**\n   * Joins query clauses with a logical NOR returns all documents that fail to match both clauses.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $nor(selector, value) {\n    assert(isArray(value), 'Invalid expression. $nor expects value to be an Array');\n    var f = $or$1('$or', value);\n    return function (obj) {\n      return !f(obj);\n    };\n  }\n  /**\n   * Inverts the effect of a query expression and returns documents that do not match the query expression.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $not$1(selector, value) {\n    var criteria = {};\n    criteria[selector] = normalize(value);\n    var query = new Query(criteria);\n    return function (obj) {\n      return !query.test(obj);\n    };\n  }\n  /**\n   * Matches documents that satisfy a JavaScript expression.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $where(selector, value) {\n    if (!isFunction(value)) {\n      value = new Function('return ' + value + ';');\n    }\n\n    return function (obj) {\n      return value.call(obj) === true;\n    };\n  }\n  /**\n   * Allows the use of aggregation expressions within the query language.\n   *\n   * @param selector\n   * @param value\n   * @returns {Function}\n   */\n\n  function $expr(selector, value) {\n    return function (obj) {\n      return computeValue(obj, value);\n    };\n  }\n\n  var queryOperators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $all: $all$1,\n    $elemMatch: $elemMatch$2,\n    $eq: $eq$2,\n    $exists: $exists$1,\n    $gt: $gt$2,\n    $gte: $gte$2,\n    $in: $in$2,\n    $lt: $lt$2,\n    $lte: $lte$2,\n    $mod: $mod$2,\n    $ne: $ne$2,\n    $nin: $nin$2,\n    $regex: $regex$1,\n    $size: $size$2,\n    $type: $type$1,\n    $and: $and$1,\n    $or: $or$1,\n    $nor: $nor,\n    $not: $not$1,\n    $where: $where,\n    $expr: $expr\n  });\n\n  var OPERATORS = {};\n  OPERATORS[OP_EXPRESSION] = {};\n  OPERATORS[OP_GROUP] = {};\n  OPERATORS[OP_PIPELINE] = {};\n  OPERATORS[OP_PROJECTION] = {};\n  OPERATORS[OP_QUERY] = {};\n  var SYSTEM_OPERATORS = [[OP_EXPRESSION, expressionOperators], [OP_GROUP, groupOperators], [OP_PIPELINE, pipelineOperators], [OP_PROJECTION, projectionOperators], [OP_QUERY, queryOperators]];\n  /**\n   * Enables the default operators of the system\n   */\n\n  function enableSystemOperators() {\n    each(SYSTEM_OPERATORS, function (arr) {\n      var _arr = _slicedToArray(arr, 2),\n          cls = _arr[0],\n          values = _arr[1];\n\n      Object.assign(OPERATORS[cls], values);\n    });\n  }\n  /**\n   * Add new operators\n   *\n   * @param opClass the operator class to extend\n   * @param fn a function returning an object of new operators\n   */\n\n  function addOperators(opClass, fn) {\n    var newOperators = fn(_internal()); // ensure correct type specified\n\n    assert(has(OPERATORS, opClass), \"Invalid operator class \".concat(opClass));\n    var operators = OPERATORS[opClass]; // check for existing operators\n\n    each(newOperators, function (_, op) {\n      assert(/^\\$[a-zA-Z0-9_]*$/.test(op), \"Invalid operator name \".concat(op));\n      assert(!has(operators, op), \"\".concat(op, \" already exists for '\").concat(opClass, \"' operators\"));\n    });\n    var wrapped = {};\n\n    switch (opClass) {\n      case OP_QUERY:\n        each(newOperators, function (fn, op) {\n          fn = fn.bind(newOperators);\n\n          wrapped[op] = function (selector, value) {\n            return function (obj) {\n              // value of field must be fully resolved.\n              var lhs = resolve(obj, selector);\n              var result = fn(selector, lhs, value);\n              assert(isBoolean(result), \"\".concat(op, \" must return a boolean\"));\n              return result;\n            };\n          };\n        });\n        break;\n\n      case OP_PROJECTION:\n        each(newOperators, function (fn, op) {\n          fn = fn.bind(newOperators);\n\n          wrapped[op] = function (obj, expr, selector) {\n            var lhs = resolve(obj, selector);\n            return fn(selector, lhs, expr);\n          };\n        });\n        break;\n\n      default:\n        each(newOperators, function (fn, op) {\n          wrapped[op] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            return fn.apply(newOperators, args);\n          };\n        });\n    } // toss the operator salad :)\n\n\n    Object.assign(OPERATORS[opClass], wrapped);\n  }\n\n  /**\n   * Mixin for Collection types that provide a method `toJSON() -> Array[Object]`\n   */\n\n  var CollectionMixin = {\n    /**\n     * Runs a query and returns a cursor to the result\n     * @param criteria\n     * @param projection\n     * @returns {Cursor}\n     */\n    query: function query(criteria, projection) {\n      return new Query(criteria).find(this.toJSON(), projection);\n    },\n\n    /**\n     * Runs the given aggregation operators on this collection\n     * @params pipeline\n     * @returns {Array}\n     */\n    aggregate: function aggregate(pipeline) {\n      return new Aggregator(pipeline).run(this.toJSON());\n    }\n  };\n\n  enableSystemOperators();\n  var VERSION = '2.5.3'; // mingo!\n\n  var index = {\n    _internal: _internal,\n    Aggregator: Aggregator,\n    CollectionMixin: CollectionMixin,\n    Cursor: Cursor,\n    Lazy: Lazy,\n    OP_EXPRESSION: OP_EXPRESSION,\n    OP_GROUP: OP_GROUP,\n    OP_PIPELINE: OP_PIPELINE,\n    OP_PROJECTION: OP_PROJECTION,\n    OP_QUERY: OP_QUERY,\n    Query: Query,\n    VERSION: VERSION,\n    addOperators: addOperators,\n    aggregate: aggregate,\n    find: find,\n    remove: remove,\n    setup: setup\n  };\n\n  return index;\n\n})));\n\n},{}]},{},[1]);\n"]}